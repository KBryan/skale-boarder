{"id":"5614492ecfc589716fef4e4d0965852d","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/EnglishOwnerAdder.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"./TokenAuthenticated.sol\";\nimport \"./interfaces/IGnosisSafe.sol\";\n\ncontract EnglishOwnerAdder is TokenAuthenticated {\n\n    constructor() TokenAuthenticated(\"I authorize this device to send transactions on my behalf.\") {}\n\n    function addOwner(\n        address _safe,\n        TokenRequest calldata request,\n        bytes calldata signature\n    ) external {\n        require(authenticate(request, signature));\n\n        GnosisSafe safe = GnosisSafe(_safe);\n\n        {\n            uint256 threshold = safe.getThreshold();\n            require(\n                threshold == 1,\n                \"Only safe's with a threshold of one are supported\"\n            );\n            require(safe.isOwner(request.owner), \"Owner is not a safe owner\");\n        }\n\n        bytes memory data = abi.encodeWithSignature(\n            \"addOwnerWithThreshold(address,uint256)\",\n            request.device,\n            1\n        );\n        GnosisSafe(_safe).execTransactionFromModule(\n            _safe,\n            0,\n            data,\n            Enum.Operation.Call\n        );\n    }\n\n}\n"},"contracts/EnglishOwnerRemover.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"./TokenAuthenticated.sol\";\nimport \"./interfaces/IGnosisSafe.sol\";\n\ncontract EnglishOwnerRemover is TokenAuthenticated {\n\n    constructor() TokenAuthenticated(\"I want to remove this device from my account.\") {}\n\n    function removeOwner(\n        address _safe,\n        address previousOwner,\n        TokenRequest calldata request,\n        bytes calldata signature\n    ) external {\n        require(authenticate(request, signature));\n\n        GnosisSafe safe = GnosisSafe(_safe);\n        {\n            uint256 threshold = safe.getThreshold();\n            require(\n                threshold == 1,\n                \"Only safe's with a threshold of one are supported\"\n            );\n            require(safe.isOwner(request.owner), \"Owner is not a safe owner\");\n        }\n\n        bytes memory data = abi.encodeWithSignature(\n            \"removeOwner(address,address,uint256)\",\n            previousOwner,\n            request.device,\n            1\n        );\n\n        GnosisSafe(_safe).execTransactionFromModule(\n            _safe,\n            0,\n            data,\n            Enum.Operation.Call\n        );\n    }\n\n}\n"},"contracts/interfaces/IGnosisSafe.sol":{"content":"pragma solidity ^0.8.19;\n\ncontract Enum {\n    enum Operation {\n        Call,\n        DelegateCall\n    }\n}\n\ninterface GnosisSafe {\n    /// @dev Allows a Module to execute a Safe transaction without any further confirmations.\n    /// @param to Destination address of module transaction.\n    /// @param value Ether value of module transaction.\n    /// @param data Data payload of module transaction.\n    /// @param operation Operation type of module transaction.\n    function execTransactionFromModule(\n        address to,\n        uint256 value,\n        bytes calldata data,\n        Enum.Operation operation\n    ) external returns (bool success);\n\n    function getThreshold() external view returns (uint256);\n\n    function getOwners() external view returns (address[] memory);\n\n    function isOwner(address owner) external view returns (bool);\n\n    function enableModule(address module) external;\n}\n"},"contracts/SafeSetup.sol":{"content":"pragma solidity ^0.8.19;\n\nimport \"./interfaces/IGnosisSafe.sol\";\n\ncontract SafeSetup {\n    address immutable addOwnerModule;\n    address immutable removeOwnerModule;\n\n    constructor(address _addOwnerModule, address _removeOwnerModule) {\n        addOwnerModule = _addOwnerModule;\n        removeOwnerModule = _removeOwnerModule;\n    }\n\n    function setup() public {\n        GnosisSafe safe = GnosisSafe(address(this));\n        safe.enableModule(addOwnerModule);\n        safe.enableModule(removeOwnerModule);\n    }\n}\n"},"contracts/testOnly/TestContract.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ncontract TestContract {\n\n    event EchoEvent(address indexed sender, string message);\n\n    string public somethingToRead = \"helloWorld\";\n\n    function echo(string memory message, bool revertMessage) external {\n        emit EchoEvent(msg.sender, message);\n        if (revertMessage) {\n            revert(message);\n        }\n    }\n}\n"},"contracts/TokenAuthenticated.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\n// import \"hardhat/console.sol\";\n\n/**\n * @title TokenAuthenticated\n * @dev allow a user to authenticate with a signed english token.\n */\ncontract TokenAuthenticated {\n    string public STATEMENT;\n\n    uint256 public lengthOfToken = 15;\n       \n    struct TokenRequest {\n        address owner;\n        address device;\n        uint256 issuedAt;\n    }\n\n    constructor(string memory _statement) {\n        STATEMENT = _statement;\n    }\n\n    function _updateStatement(string memory newStatement) internal {\n        STATEMENT = newStatement;\n    }\n\n    function _updateLengthOfToken(uint256 newLength) internal {\n        lengthOfToken = newLength;\n    }\n\n    function authenticate(\n        TokenRequest calldata request,\n        bytes calldata signature\n    ) internal view returns (bool) {\n        bytes32 msgHash = hashForToken(request);\n        address signer = ECDSA.recover(msgHash, signature);\n        require(signer == request.owner, \"invalid signature\");\n        require(\n            request.issuedAt >= block.number - lengthOfToken,\n            \"Request is too old\"\n        );\n        return true;\n    }\n\n    function createTokenRequest(\n        address owner,\n        address device\n    ) public view returns (TokenRequest memory request, string memory) {\n        request = TokenRequest({\n            owner: owner,\n            device: device,\n            issuedAt: block.number - 1\n        });\n        return (request, stringToSign(request));\n    }\n\n\n    /**\n     * @dev Returns the string to sign of the provided WalletCreateRequest.\n     * @param request The WalletCreateRequest struct containing the owner address, device address, and issuedAt block number.\n     */\n    function stringToSign(\n        TokenRequest memory request\n    ) internal view returns (string memory) {\n        return string(abi.encodePacked(\n            STATEMENT,\n            \"\\n\\nMe: \",\n            Strings.toHexString(request.owner),\n            \"\\nDevice: \",\n            Strings.toHexString(request.device),\n            \"\\nIssued at: \",\n            Strings.toString(request.issuedAt)\n        ));\n    }\n\n    function hashForToken(\n        TokenRequest calldata request\n    ) internal view returns (bytes32) {\n        return ECDSA.toEthSignedMessageHash(bytes(stringToSign(request)));\n    }\n}"},"contracts/WalletDeployer.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.19;\n\nimport \"./TokenAuthenticated.sol\";\n\n// import \"hardhat/console.sol\";\n\ninterface IProxyFactory {\n    function createProxyWithNonce(\n        address _mastercopy,\n        bytes memory initializer,\n        uint256 saltNonce\n    ) external returns (address proxy);\n}\n\n/**\n * @title WalletDeployer\n * @dev A contract that allows a user to create a Gnosis Safe wallet by signing an English message.\n *      It sets up a a safe by calling the SafeStetup.sol contract which adds the correct modules and the TokenRequest\n *      device and owner as owners to the safe. \n */\ncontract WalletDeployer is TokenAuthenticated {\n    string public CHAIN_ID;\n\n    address private immutable _gnosisSafeContract;\n    address private immutable _gnosisSafeProxyFactory;\n    address private immutable _defaultFallackhandler;\n\n    address private immutable _setupHandler;\n\n    bytes4 private constant SETUP_DATA = bytes4(keccak256(\"setup()\"));\n\n    // a mapping of owner to safe address\n    mapping(address => address) public ownerToSafe;\n    mapping(address => address) public safeToOwner;\n\n    constructor(\n        address gnosisSafeContract,\n        address gnosisSafeProxyFactory,\n        address defaultFallbackHandler,\n        address setupHandler\n    )\n        TokenAuthenticated(\n            \"I authorize this device to send transactions on my behalf.\"\n        )\n    {\n        CHAIN_ID = Strings.toString(block.chainid);\n        _gnosisSafeContract = gnosisSafeContract;\n        _gnosisSafeProxyFactory = gnosisSafeProxyFactory;\n        _defaultFallackhandler = defaultFallbackHandler;\n        _setupHandler = setupHandler;\n    }\n\n    /**\n     * @dev Creates a Gnosis Safe wallet using the provided WalletCreateRequest and signature.\n     * @param request The WalletCreateRequest struct containing the owner address, first device address, and issuedAt block number.\n     * @param signature The signature signed by the owner to verify ownership.\n     */\n    function createSafe(\n        TokenRequest calldata request,\n        bytes calldata signature\n    ) public {\n        require(\n            ownerToSafe[request.owner] == address(0),\n            \"Safe already exists for owner\"\n        );\n        require(authenticate(request, signature));\n\n        // not sure exactly why, but it's important that this array is a memory address[] so that the initializer is encoded properly\n        address[] memory owners;\n        if (request.device == address(0)) {\n            owners = new address[](1);\n            owners[0] = request.owner;\n        } else {\n            owners = new address[](2);\n            owners[0] = request.owner;\n            owners[1] = request.device;\n        }\n\n        bytes memory initializer = abi.encodeWithSignature(\n            \"setup(address[],uint256,address,bytes,address,address,uint256,address)\",\n            owners, // set the owner and first device addresses\n            uint256(1), // set the number of required confirmations (threshhold) to 1\n            _setupHandler, // setupModules address\n            abi.encodeWithSignature(\"setup()\"), // setupModules data\n            _defaultFallackhandler, // set the default fallback handler\n            address(0), // set the payment token address\n            address(0), // set the payment token address\n            uint256(0), // set the payment amount to 0\n            address(0) // set the payment fee receiver address\n        );\n\n        address proxyAddr = IProxyFactory(_gnosisSafeProxyFactory)\n            .createProxyWithNonce(_gnosisSafeContract, initializer, block.chainid);\n\n        ownerToSafe[request.owner] = proxyAddr;\n        safeToOwner[proxyAddr] = request.owner;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/SafeSetup.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/SafeSetup.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IGnosisSafe.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IGnosisSafe.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1400],"Strings":[174]},"id":175,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":175,"sourceUnit":1401,"src":"126:25:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"153:34:0","text":" @dev String operations."},"fullyImplemented":true,"id":174,"linearizedBaseContracts":[174],"name":"Strings","nameLocation":"196:7:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":6,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:0","nodeType":"VariableDeclaration","scope":174,"src":"210:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":4,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:0","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":5,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":9,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:0","nodeType":"VariableDeclaration","scope":174,"src":"270:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":8,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:0","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":56,"nodeType":"Block","src":"486:625:0","statements":[{"id":55,"nodeType":"UncheckedBlock","src":"496:609:0","statements":[{"assignments":[18],"declarations":[{"constant":false,"id":18,"mutability":"mutable","name":"length","nameLocation":"528:6:0","nodeType":"VariableDeclaration","scope":55,"src":"520:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":25,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":24,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":21,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"548:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":19,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"537:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1400_$","typeString":"type(library Math)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"542:5:0","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1237,"src":"537:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":22,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"537:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":23,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:0"},{"assignments":[27],"declarations":[{"constant":false,"id":27,"mutability":"mutable","name":"buffer","nameLocation":"586:6:0","nodeType":"VariableDeclaration","scope":55,"src":"572:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":26,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":32,"initialValue":{"arguments":[{"id":30,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"606:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":29,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":28,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":31,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"595:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:0"},{"assignments":[34],"declarations":[{"constant":false,"id":34,"mutability":"mutable","name":"ptr","nameLocation":"635:3:0","nodeType":"VariableDeclaration","scope":55,"src":"627:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":35,"nodeType":"VariableDeclarationStatement","src":"627:11:0"},{"AST":{"nodeType":"YulBlock","src":"708:67:0","statements":[{"nodeType":"YulAssignment","src":"726:35:0","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:0","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:0"},"nodeType":"YulFunctionCall","src":"745:15:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:0"},"nodeType":"YulFunctionCall","src":"733:28:0"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":27,"isOffset":false,"isSlot":false,"src":"737:6:0","valueSize":1},{"declaration":18,"isOffset":false,"isSlot":false,"src":"753:6:0","valueSize":1},{"declaration":34,"isOffset":false,"isSlot":false,"src":"726:3:0","valueSize":1}],"id":36,"nodeType":"InlineAssembly","src":"699:76:0"},{"body":{"id":51,"nodeType":"Block","src":"801:267:0","statements":[{"expression":{"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:0","subExpression":{"id":38,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"819:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":40,"nodeType":"ExpressionStatement","src":"819:5:0"},{"AST":{"nodeType":"YulBlock","src":"902:84:0","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:0"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:0","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:0"},"nodeType":"YulFunctionCall","src":"942:14:0"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:0"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:0"},"nodeType":"YulFunctionCall","src":"937:30:0"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:0"},"nodeType":"YulFunctionCall","src":"924:44:0"},"nodeType":"YulExpressionStatement","src":"924:44:0"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":6,"isOffset":false,"isSlot":false,"src":"958:8:0","valueSize":1},{"declaration":34,"isOffset":false,"isSlot":false,"src":"932:3:0","valueSize":1},{"declaration":12,"isOffset":false,"isSlot":false,"src":"946:5:0","valueSize":1}],"id":41,"nodeType":"InlineAssembly","src":"893:93:0"},{"expression":{"id":44,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":42,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"1003:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":43,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":45,"nodeType":"ExpressionStatement","src":"1003:11:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":46,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"1036:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":47,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":50,"nodeType":"IfStatement","src":"1032:21:0","trueBody":{"id":49,"nodeType":"Break","src":"1048:5:0"}}]},"condition":{"hexValue":"74727565","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":52,"nodeType":"WhileStatement","src":"788:280:0"},{"expression":{"id":53,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1088:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":16,"id":54,"nodeType":"Return","src":"1081:13:0"}]}]},"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"320:90:0","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":57,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:0","nodeType":"FunctionDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"mutability":"mutable","name":"value","nameLocation":"441:5:0","nodeType":"VariableDeclaration","scope":57,"src":"433:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":57,"src":"471:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:0"},"scope":174,"src":"415:696:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":76,"nodeType":"Block","src":"1290:100:0","statements":[{"id":75,"nodeType":"UncheckedBlock","src":"1300:84:0","statements":[{"expression":{"arguments":[{"id":66,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"1343:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":69,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"1362:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":67,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"1350:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1400_$","typeString":"type(library Math)"}},"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1355:6:0","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"1350:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":65,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[77,153,173],"referencedDeclaration":153,"src":"1331:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1331:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":64,"id":74,"nodeType":"Return","src":"1324:49:0"}]}]},"documentation":{"id":58,"nodeType":"StructuredDocumentation","src":"1117:94:0","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":77,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:0","nodeType":"FunctionDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60,"mutability":"mutable","name":"value","nameLocation":"1245:5:0","nodeType":"VariableDeclaration","scope":77,"src":"1237:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:0"},"returnParameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":77,"src":"1275:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":62,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:0"},"scope":174,"src":"1216:174:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":152,"nodeType":"Block","src":"1603:347:0","statements":[{"assignments":[88],"declarations":[{"constant":false,"id":88,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:0","nodeType":"VariableDeclaration","scope":152,"src":"1613:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":87,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":97,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":93,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":91,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":92,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"1649:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":90,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":89,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1635:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:0"},{"expression":{"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":98,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1670:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":100,"indexExpression":{"hexValue":"30","id":99,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":103,"nodeType":"ExpressionStatement","src":"1670:15:0"},{"expression":{"id":108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":104,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1695:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":106,"indexExpression":{"hexValue":"31","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":109,"nodeType":"ExpressionStatement","src":"1695:15:0"},{"body":{"id":138,"nodeType":"Block","src":"1765:83:0","statements":[{"expression":{"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":124,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1779:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":126,"indexExpression":{"id":125,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1786:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":127,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"1791:8:0","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":131,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"1800:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:0","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":133,"nodeType":"ExpressionStatement","src":"1779:33:0"},{"expression":{"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"1826:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":137,"nodeType":"ExpressionStatement","src":"1826:11:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":118,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1753:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":139,"initializationExpression":{"assignments":[111],"declarations":[{"constant":false,"id":111,"mutability":"mutable","name":"i","nameLocation":"1733:1:0","nodeType":"VariableDeclaration","scope":139,"src":"1725:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":117,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":113,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"1741:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:0"},"loopExpression":{"expression":{"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:0","subExpression":{"id":121,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1762:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":123,"nodeType":"ExpressionStatement","src":"1760:3:0"},"nodeType":"ForStatement","src":"1720:128:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"1865:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":140,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":146,"nodeType":"ExpressionStatement","src":"1857:55:0"},{"expression":{"arguments":[{"id":149,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1936:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":147,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:0","typeDescriptions":{}}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":86,"id":151,"nodeType":"Return","src":"1922:21:0"}]},"documentation":{"id":78,"nodeType":"StructuredDocumentation","src":"1396:112:0","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":153,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":80,"mutability":"mutable","name":"value","nameLocation":"1542:5:0","nodeType":"VariableDeclaration","scope":153,"src":"1534:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":79,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":82,"mutability":"mutable","name":"length","nameLocation":"1557:6:0","nodeType":"VariableDeclaration","scope":153,"src":"1549:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":153,"src":"1588:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":84,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:0"},"scope":174,"src":"1513:437:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":172,"nodeType":"Block","src":"2175:76:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":166,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"2220:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":164,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:0","typeDescriptions":{}}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2212:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:0","typeDescriptions":{}}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":169,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"2228:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":161,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[77,153,173],"referencedDeclaration":153,"src":"2192:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":160,"id":171,"nodeType":"Return","src":"2185:59:0"}]},"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"1956:141:0","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":173,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:0","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"addr","nameLocation":"2131:4:0","nodeType":"VariableDeclaration","scope":173,"src":"2123:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":155,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:0"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":173,"src":"2160:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":158,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:0"},"scope":174,"src":"2102:149:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":175,"src":"188:2065:0","usedErrors":[]}],"src":"101:2153:0"},"id":0},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[535],"Math":[1400],"Strings":[174]},"id":536,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":176,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":536,"sourceUnit":175,"src":"137:24:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"163:205:1","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":535,"linearizedBaseContracts":[535],"name":"ECDSA","nameLocation":"377:5:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":184,"members":[{"id":179,"name":"NoError","nameLocation":"417:7:1","nodeType":"EnumValue","src":"417:7:1"},{"id":180,"name":"InvalidSignature","nameLocation":"434:16:1","nodeType":"EnumValue","src":"434:16:1"},{"id":181,"name":"InvalidSignatureLength","nameLocation":"460:22:1","nodeType":"EnumValue","src":"460:22:1"},{"id":182,"name":"InvalidSignatureS","nameLocation":"492:17:1","nodeType":"EnumValue","src":"492:17:1"},{"id":183,"name":"InvalidSignatureV","nameLocation":"519:17:1","nodeType":"EnumValue","src":"519:17:1"}],"name":"RecoverError","nameLocation":"394:12:1","nodeType":"EnumDefinition","src":"389:175:1"},{"body":{"id":227,"nodeType":"Block","src":"624:457:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":190,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"638:5:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":191,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"647:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$184_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:1","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":179,"src":"647:20:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"734:5:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":197,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"743:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$184_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:1","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":180,"src":"743:29:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":205,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"843:5:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":206,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"852:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$184_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:1","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":181,"src":"852:35:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":214,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"965:5:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":215,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"974:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$184_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:1","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":182,"src":"974:30:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":223,"nodeType":"IfStatement","src":"961:114:1","trueBody":{"id":222,"nodeType":"Block","src":"1006:69:1","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":218,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"1020:44:1"}]}},"id":224,"nodeType":"IfStatement","src":"839:236:1","trueBody":{"id":213,"nodeType":"Block","src":"889:66:1","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":209,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":212,"nodeType":"ExpressionStatement","src":"903:41:1"}]}},"id":225,"nodeType":"IfStatement","src":"730:345:1","trueBody":{"id":204,"nodeType":"Block","src":"774:59:1","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":200,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":203,"nodeType":"ExpressionStatement","src":"788:34:1"}]}},"id":226,"nodeType":"IfStatement","src":"634:441:1","trueBody":{"id":195,"nodeType":"Block","src":"669:55:1","statements":[{"functionReturnParameters":189,"id":194,"nodeType":"Return","src":"683:7:1"}]}}]},"id":228,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"error","nameLocation":"604:5:1","nodeType":"VariableDeclaration","scope":228,"src":"591:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":186,"nodeType":"UserDefinedTypeName","pathNode":{"id":185,"name":"RecoverError","nameLocations":["591:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":184,"src":"591:12:1"},"referencedDeclaration":184,"src":"591:12:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:1"},"returnParameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"624:0:1"},"scope":535,"src":"570:511:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":273,"nodeType":"Block","src":"2249:626:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":241,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2263:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:1","memberName":"length","nodeType":"MemberAccess","src":"2263:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:1","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":271,"nodeType":"Block","src":"2788:81:1","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:1","typeDescriptions":{}}},"id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":267,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"2822:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$184_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:1","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":181,"src":"2822:35:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}}],"id":269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$184_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":240,"id":270,"nodeType":"Return","src":"2802:56:1"}]},"id":272,"nodeType":"IfStatement","src":"2259:610:1","trueBody":{"id":262,"nodeType":"Block","src":"2287:495:1","statements":[{"assignments":[246],"declarations":[{"constant":false,"id":246,"mutability":"mutable","name":"r","nameLocation":"2309:1:1","nodeType":"VariableDeclaration","scope":262,"src":"2301:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":247,"nodeType":"VariableDeclarationStatement","src":"2301:9:1"},{"assignments":[249],"declarations":[{"constant":false,"id":249,"mutability":"mutable","name":"s","nameLocation":"2332:1:1","nodeType":"VariableDeclaration","scope":262,"src":"2324:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":250,"nodeType":"VariableDeclarationStatement","src":"2324:9:1"},{"assignments":[252],"declarations":[{"constant":false,"id":252,"mutability":"mutable","name":"v","nameLocation":"2353:1:1","nodeType":"VariableDeclaration","scope":262,"src":"2347:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":251,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":253,"nodeType":"VariableDeclarationStatement","src":"2347:7:1"},{"AST":{"nodeType":"YulBlock","src":"2555:171:1","statements":[{"nodeType":"YulAssignment","src":"2573:32:1","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:1"},"nodeType":"YulFunctionCall","src":"2584:20:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:1"},"nodeType":"YulFunctionCall","src":"2578:27:1"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:1"}]},{"nodeType":"YulAssignment","src":"2622:32:1","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:1","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:1"},"nodeType":"YulFunctionCall","src":"2633:20:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:1"},"nodeType":"YulFunctionCall","src":"2627:27:1"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:1"}]},{"nodeType":"YulAssignment","src":"2671:41:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:1","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:1","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:1"},"nodeType":"YulFunctionCall","src":"2690:20:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:1"},"nodeType":"YulFunctionCall","src":"2684:27:1"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:1"},"nodeType":"YulFunctionCall","src":"2676:36:1"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:1"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":246,"isOffset":false,"isSlot":false,"src":"2573:1:1","valueSize":1},{"declaration":249,"isOffset":false,"isSlot":false,"src":"2622:1:1","valueSize":1},{"declaration":233,"isOffset":false,"isSlot":false,"src":"2588:9:1","valueSize":1},{"declaration":233,"isOffset":false,"isSlot":false,"src":"2637:9:1","valueSize":1},{"declaration":233,"isOffset":false,"isSlot":false,"src":"2694:9:1","valueSize":1},{"declaration":252,"isOffset":false,"isSlot":false,"src":"2671:1:1","valueSize":1}],"id":254,"nodeType":"InlineAssembly","src":"2546:180:1"},{"expression":{"arguments":[{"id":256,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2757:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":257,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"2763:1:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":258,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"2766:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":259,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"2769:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":255,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[274,348,442],"referencedDeclaration":442,"src":"2746:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$184_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$184_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":240,"id":261,"nodeType":"Return","src":"2739:32:1"}]}}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"1087:1053:1","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":274,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:1","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"hash","nameLocation":"2173:4:1","nodeType":"VariableDeclaration","scope":274,"src":"2165:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"signature","nameLocation":"2192:9:1","nodeType":"VariableDeclaration","scope":274,"src":"2179:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":232,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:1"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":274,"src":"2226:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":274,"src":"2235:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":238,"nodeType":"UserDefinedTypeName","pathNode":{"id":237,"name":"RecoverError","nameLocations":["2235:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":184,"src":"2235:12:1"},"referencedDeclaration":184,"src":"2235:12:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:1"},"scope":535,"src":"2145:730:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":300,"nodeType":"Block","src":"3748:140:1","statements":[{"assignments":[285,288],"declarations":[{"constant":false,"id":285,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:1","nodeType":"VariableDeclaration","scope":300,"src":"3759:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":284,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"error","nameLocation":"3791:5:1","nodeType":"VariableDeclaration","scope":300,"src":"3778:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":287,"nodeType":"UserDefinedTypeName","pathNode":{"id":286,"name":"RecoverError","nameLocations":["3778:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":184,"src":"3778:12:1"},"referencedDeclaration":184,"src":"3778:12:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":293,"initialValue":{"arguments":[{"id":290,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3811:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":291,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"3817:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":289,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[274,348,442],"referencedDeclaration":274,"src":"3800:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$184_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$184_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:1"},{"expression":{"arguments":[{"id":295,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"3849:5:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}],"id":294,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"3837:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$184_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":297,"nodeType":"ExpressionStatement","src":"3837:18:1"},{"expression":{"id":298,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"3872:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":283,"id":299,"nodeType":"Return","src":"3865:16:1"}]},"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"2881:775:1","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":301,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:1","nodeType":"FunctionDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"hash","nameLocation":"3686:4:1","nodeType":"VariableDeclaration","scope":301,"src":"3678:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":279,"mutability":"mutable","name":"signature","nameLocation":"3705:9:1","nodeType":"VariableDeclaration","scope":301,"src":"3692:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":278,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:1"},"returnParameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":301,"src":"3739:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:1"},"scope":535,"src":"3661:227:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":347,"nodeType":"Block","src":"4275:203:1","statements":[{"assignments":[317],"declarations":[{"constant":false,"id":317,"mutability":"mutable","name":"s","nameLocation":"4293:1:1","nodeType":"VariableDeclaration","scope":347,"src":"4285:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4285:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":324,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":318,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"4297:2:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4310:66:1","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4302:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4302:7:1","typeDescriptions":{}}},"id":322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:75:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4297:80:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4285:92:1"},{"assignments":[326],"declarations":[{"constant":false,"id":326,"mutability":"mutable","name":"v","nameLocation":"4393:1:1","nodeType":"VariableDeclaration","scope":347,"src":"4387:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":325,"name":"uint8","nodeType":"ElementaryTypeName","src":"4387:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":339,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":331,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"4412:2:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4404:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"4404:7:1","typeDescriptions":{}}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4404:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4419:3:1","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4404:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4403:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4426:2:1","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4403:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4397:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":327,"name":"uint8","nodeType":"ElementaryTypeName","src":"4397:5:1","typeDescriptions":{}}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4397:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4387:42:1"},{"expression":{"arguments":[{"id":341,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"4457:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":342,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"4463:1:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":343,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"4466:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":344,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"4469:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":340,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[274,348,442],"referencedDeclaration":442,"src":"4446:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$184_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4446:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$184_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":315,"id":346,"nodeType":"Return","src":"4439:32:1"}]},"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"3894:243:1","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":348,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:1","nodeType":"FunctionDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"hash","nameLocation":"4179:4:1","nodeType":"VariableDeclaration","scope":348,"src":"4171:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4171:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"r","nameLocation":"4201:1:1","nodeType":"VariableDeclaration","scope":348,"src":"4193:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":305,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":308,"mutability":"mutable","name":"vs","nameLocation":"4220:2:1","nodeType":"VariableDeclaration","scope":348,"src":"4212:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4212:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:67:1"},"returnParameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":348,"src":"4252:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":310,"name":"address","nodeType":"ElementaryTypeName","src":"4252:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":348,"src":"4261:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":313,"nodeType":"UserDefinedTypeName","pathNode":{"id":312,"name":"RecoverError","nameLocations":["4261:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":184,"src":"4261:12:1"},"referencedDeclaration":184,"src":"4261:12:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4251:23:1"},"scope":535,"src":"4142:336:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":377,"nodeType":"Block","src":"4759:136:1","statements":[{"assignments":[361,364],"declarations":[{"constant":false,"id":361,"mutability":"mutable","name":"recovered","nameLocation":"4778:9:1","nodeType":"VariableDeclaration","scope":377,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"4770:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"error","nameLocation":"4802:5:1","nodeType":"VariableDeclaration","scope":377,"src":"4789:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":363,"nodeType":"UserDefinedTypeName","pathNode":{"id":362,"name":"RecoverError","nameLocations":["4789:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":184,"src":"4789:12:1"},"referencedDeclaration":184,"src":"4789:12:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":370,"initialValue":{"arguments":[{"id":366,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"4822:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":367,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"4828:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":368,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"4831:2:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":365,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[274,348,442],"referencedDeclaration":348,"src":"4811:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$184_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$184_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4769:65:1"},{"expression":{"arguments":[{"id":372,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"4856:5:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}],"id":371,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"4844:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$184_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4844:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":374,"nodeType":"ExpressionStatement","src":"4844:18:1"},{"expression":{"id":375,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"4879:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":359,"id":376,"nodeType":"Return","src":"4872:16:1"}]},"documentation":{"id":349,"nodeType":"StructuredDocumentation","src":"4484:154:1","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":378,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4652:7:1","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"hash","nameLocation":"4677:4:1","nodeType":"VariableDeclaration","scope":378,"src":"4669:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4669:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":353,"mutability":"mutable","name":"r","nameLocation":"4699:1:1","nodeType":"VariableDeclaration","scope":378,"src":"4691:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":352,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4691:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":355,"mutability":"mutable","name":"vs","nameLocation":"4718:2:1","nodeType":"VariableDeclaration","scope":378,"src":"4710:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4710:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4659:67:1"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":378,"src":"4750:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"4750:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4749:9:1"},"scope":535,"src":"4643:252:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":441,"nodeType":"Block","src":"5218:1345:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":397,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"6114:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6106:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":395,"name":"uint256","nodeType":"ElementaryTypeName","src":"6106:7:1","typeDescriptions":{}}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6106:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:66:1","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6106:79:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":410,"nodeType":"IfStatement","src":"6102:161:1","trueBody":{"id":409,"nodeType":"Block","src":"6187:76:1","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6217:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6209:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"6209:7:1","typeDescriptions":{}}},"id":404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6209:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":405,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"6221:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$184_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6234:17:1","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":182,"src":"6221:30:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}}],"id":407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6208:44:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$184_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":394,"id":408,"nodeType":"Return","src":"6201:51:1"}]}},{"assignments":[412],"declarations":[{"constant":false,"id":412,"mutability":"mutable","name":"signer","nameLocation":"6365:6:1","nodeType":"VariableDeclaration","scope":441,"src":"6357:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"6357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":419,"initialValue":{"arguments":[{"id":414,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6384:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":415,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"6390:1:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":416,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"6393:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":417,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"6396:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":413,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6374:9:1","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6357:41:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":420,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"6412:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6430:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6422:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":421,"name":"address","nodeType":"ElementaryTypeName","src":"6422:7:1","typeDescriptions":{}}},"id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6422:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6412:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":435,"nodeType":"IfStatement","src":"6408:101:1","trueBody":{"id":434,"nodeType":"Block","src":"6434:75:1","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6464:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6456:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:1","typeDescriptions":{}}},"id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6456:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":430,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"6468:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$184_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6481:16:1","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":180,"src":"6468:29:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}}],"id":432,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6455:43:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$184_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":394,"id":433,"nodeType":"Return","src":"6448:50:1"}]}},{"expression":{"components":[{"id":436,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"6527:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":437,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"6535:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$184_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6548:7:1","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":179,"src":"6535:20:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}}],"id":439,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6526:30:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$184_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":394,"id":440,"nodeType":"Return","src":"6519:37:1"}]},"documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"4901:163:1","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":442,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5078:10:1","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"hash","nameLocation":"5106:4:1","nodeType":"VariableDeclaration","scope":442,"src":"5098:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":383,"mutability":"mutable","name":"v","nameLocation":"5126:1:1","nodeType":"VariableDeclaration","scope":442,"src":"5120:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":382,"name":"uint8","nodeType":"ElementaryTypeName","src":"5120:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":385,"mutability":"mutable","name":"r","nameLocation":"5145:1:1","nodeType":"VariableDeclaration","scope":442,"src":"5137:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5137:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"s","nameLocation":"5164:1:1","nodeType":"VariableDeclaration","scope":442,"src":"5156:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5156:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5088:83:1"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":442,"src":"5195:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"5195:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":442,"src":"5204:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":392,"nodeType":"UserDefinedTypeName","pathNode":{"id":391,"name":"RecoverError","nameLocations":["5204:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":184,"src":"5204:12:1"},"referencedDeclaration":184,"src":"5204:12:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5194:23:1"},"scope":535,"src":"5069:1494:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":474,"nodeType":"Block","src":"6828:138:1","statements":[{"assignments":[457,460],"declarations":[{"constant":false,"id":457,"mutability":"mutable","name":"recovered","nameLocation":"6847:9:1","nodeType":"VariableDeclaration","scope":474,"src":"6839:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"6839:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":460,"mutability":"mutable","name":"error","nameLocation":"6871:5:1","nodeType":"VariableDeclaration","scope":474,"src":"6858:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":459,"nodeType":"UserDefinedTypeName","pathNode":{"id":458,"name":"RecoverError","nameLocations":["6858:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":184,"src":"6858:12:1"},"referencedDeclaration":184,"src":"6858:12:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":467,"initialValue":{"arguments":[{"id":462,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6891:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":463,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6897:1:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":464,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"6900:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":465,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"6903:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":461,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[274,348,442],"referencedDeclaration":442,"src":"6880:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$184_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6880:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$184_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6838:67:1"},{"expression":{"arguments":[{"id":469,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"6927:5:1","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$184","typeString":"enum ECDSA.RecoverError"}],"id":468,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"6915:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$184_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6915:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"6915:18:1"},{"expression":{"id":472,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"6950:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":455,"id":473,"nodeType":"Return","src":"6943:16:1"}]},"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"6569:122:1","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":475,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6705:7:1","nodeType":"FunctionDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"hash","nameLocation":"6730:4:1","nodeType":"VariableDeclaration","scope":475,"src":"6722:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":444,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6722:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":447,"mutability":"mutable","name":"v","nameLocation":"6750:1:1","nodeType":"VariableDeclaration","scope":475,"src":"6744:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":446,"name":"uint8","nodeType":"ElementaryTypeName","src":"6744:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"r","nameLocation":"6769:1:1","nodeType":"VariableDeclaration","scope":475,"src":"6761:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6761:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"s","nameLocation":"6788:1:1","nodeType":"VariableDeclaration","scope":475,"src":"6780:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":450,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6780:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6712:83:1"},"returnParameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"6819:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"6819:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6818:9:1"},"scope":535,"src":"6696:270:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":491,"nodeType":"Block","src":"7334:187:1","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7472:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":487,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"7508:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":484,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7455:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7459:12:1","memberName":"encodePacked","nodeType":"MemberAccess","src":"7455:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7455:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":483,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7445:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7445:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":482,"id":490,"nodeType":"Return","src":"7438:76:1"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"6972:279:1","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":492,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7265:22:1","nodeType":"FunctionDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"hash","nameLocation":"7296:4:1","nodeType":"VariableDeclaration","scope":492,"src":"7288:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7288:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7287:14:1"},"returnParameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":492,"src":"7325:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7325:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7324:9:1"},"scope":535,"src":"7256:265:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":513,"nodeType":"Block","src":"7886:116:1","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7930:32:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":506,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"7981:1:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7983:6:1","memberName":"length","nodeType":"MemberAccess","src":"7981:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":504,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"7964:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$174_$","typeString":"type(library Strings)"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7972:8:1","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":57,"src":"7964:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7964:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":509,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"7992:1:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":501,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7913:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7917:12:1","memberName":"encodePacked","nodeType":"MemberAccess","src":"7913:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7913:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":500,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7903:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7903:92:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":499,"id":512,"nodeType":"Return","src":"7896:99:1"}]},"documentation":{"id":493,"nodeType":"StructuredDocumentation","src":"7527:274:1","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":514,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7815:22:1","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":495,"mutability":"mutable","name":"s","nameLocation":"7851:1:1","nodeType":"VariableDeclaration","scope":514,"src":"7838:14:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":494,"name":"bytes","nodeType":"ElementaryTypeName","src":"7838:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7837:16:1"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":514,"src":"7877:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7876:9:1"},"scope":535,"src":"7806:196:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":533,"nodeType":"Block","src":"8443:92:1","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8487:10:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":528,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"8499:15:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":529,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"8516:10:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":525,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8470:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8474:12:1","memberName":"encodePacked","nodeType":"MemberAccess","src":"8470:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8470:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":524,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8460:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8460:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":523,"id":532,"nodeType":"Return","src":"8453:75:1"}]},"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"8008:328:1","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":534,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8350:15:1","nodeType":"FunctionDefinition","parameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"domainSeparator","nameLocation":"8374:15:1","nodeType":"VariableDeclaration","scope":534,"src":"8366:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8366:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"structHash","nameLocation":"8399:10:1","nodeType":"VariableDeclaration","scope":534,"src":"8391:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8391:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8365:45:1"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":534,"src":"8434:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8434:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8433:9:1"},"scope":535,"src":"8341:194:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":536,"src":"369:8168:1","usedErrors":[]}],"src":"112:8426:1"},"id":1},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1400]},"id":1401,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":537,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"128:73:2","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1400,"linearizedBaseContracts":[1400],"name":"Math","nameLocation":"210:4:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":542,"members":[{"id":539,"name":"Down","nameLocation":"245:4:2","nodeType":"EnumValue","src":"245:4:2"},{"id":540,"name":"Up","nameLocation":"287:2:2","nodeType":"EnumValue","src":"287:2:2"},{"id":541,"name":"Zero","nameLocation":"318:4:2","nodeType":"EnumValue","src":"318:4:2"}],"name":"Rounding","nameLocation":"226:8:2","nodeType":"EnumDefinition","src":"221:122:2"},{"body":{"id":559,"nodeType":"Block","src":"480:37:2","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":552,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"497:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":553,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"501:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":556,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"509:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:2","trueExpression":{"id":555,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"505:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":551,"id":558,"nodeType":"Return","src":"490:20:2"}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"349:59:2","text":" @dev Returns the largest of two numbers."},"id":560,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:2","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"a","nameLocation":"434:1:2","nodeType":"VariableDeclaration","scope":560,"src":"426:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":544,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"b","nameLocation":"445:1:2","nodeType":"VariableDeclaration","scope":560,"src":"437:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:2"},"returnParameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":560,"src":"471:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":549,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:2"},"scope":1400,"src":"413:104:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":577,"nodeType":"Block","src":"655:37:2","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":570,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"672:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":571,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"676:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":574,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"684:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:2","trueExpression":{"id":573,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"680:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":569,"id":576,"nodeType":"Return","src":"665:20:2"}]},"documentation":{"id":561,"nodeType":"StructuredDocumentation","src":"523:60:2","text":" @dev Returns the smallest of two numbers."},"id":578,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:2","nodeType":"FunctionDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"mutability":"mutable","name":"a","nameLocation":"609:1:2","nodeType":"VariableDeclaration","scope":578,"src":"601:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":562,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":565,"mutability":"mutable","name":"b","nameLocation":"620:1:2","nodeType":"VariableDeclaration","scope":578,"src":"612:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:2"},"returnParameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":578,"src":"646:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:2"},"scope":1400,"src":"588:104:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":600,"nodeType":"Block","src":"876:82:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":588,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"931:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":589,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"935:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":592,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"941:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":593,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"945:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":595,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":587,"id":599,"nodeType":"Return","src":"923:28:2"}]},"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"698:102:2","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":601,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:2","nodeType":"FunctionDefinition","parameters":{"id":584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"a","nameLocation":"830:1:2","nodeType":"VariableDeclaration","scope":601,"src":"822:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":583,"mutability":"mutable","name":"b","nameLocation":"841:1:2","nodeType":"VariableDeclaration","scope":601,"src":"833:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:2"},"returnParameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":601,"src":"867:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:2"},"scope":1400,"src":"805:153:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":625,"nodeType":"Block","src":"1228:123:2","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":611,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"1316:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":615,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"1330:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":618,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":619,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"1339:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:2","trueExpression":{"hexValue":"30","id":614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":610,"id":624,"nodeType":"Return","src":"1309:35:2"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"964:188:2","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":626,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:2","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"a","nameLocation":"1182:1:2","nodeType":"VariableDeclaration","scope":626,"src":"1174:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"b","nameLocation":"1193:1:2","nodeType":"VariableDeclaration","scope":626,"src":"1185:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:2"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":626,"src":"1219:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:2"},"scope":1400,"src":"1157:194:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"1795:3797:2","statements":[{"id":746,"nodeType":"UncheckedBlock","src":"1805:3781:2","statements":[{"assignments":[639],"declarations":[{"constant":false,"id":639,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:2","nodeType":"VariableDeclaration","scope":746,"src":"2126:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":640,"nodeType":"VariableDeclarationStatement","src":"2126:13:2"},{"assignments":[642],"declarations":[{"constant":false,"id":642,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:2","nodeType":"VariableDeclaration","scope":746,"src":"2198:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":643,"nodeType":"VariableDeclarationStatement","src":"2198:13:2"},{"AST":{"nodeType":"YulBlock","src":"2278:157:2","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:2","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:2"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:2","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:2"},"nodeType":"YulFunctionCall","src":"2319:6:2"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:2"},"nodeType":"YulFunctionCall","src":"2306:20:2"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:2","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:2","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:2"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:2"},"nodeType":"YulFunctionCall","src":"2352:9:2"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:2"}]},{"nodeType":"YulAssignment","src":"2378:43:2","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:2"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:2"},"nodeType":"YulFunctionCall","src":"2391:14:2"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:2"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:2"},"nodeType":"YulFunctionCall","src":"2407:13:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:2"},"nodeType":"YulFunctionCall","src":"2387:34:2"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":639,"isOffset":false,"isSlot":false,"src":"2343:5:2","valueSize":1},{"declaration":639,"isOffset":false,"isSlot":false,"src":"2399:5:2","valueSize":1},{"declaration":639,"isOffset":false,"isSlot":false,"src":"2414:5:2","valueSize":1},{"declaration":642,"isOffset":false,"isSlot":false,"src":"2378:5:2","valueSize":1},{"declaration":629,"isOffset":false,"isSlot":false,"src":"2313:1:2","valueSize":1},{"declaration":629,"isOffset":false,"isSlot":false,"src":"2356:1:2","valueSize":1},{"declaration":631,"isOffset":false,"isSlot":false,"src":"2316:1:2","valueSize":1},{"declaration":631,"isOffset":false,"isSlot":false,"src":"2359:1:2","valueSize":1}],"id":644,"nodeType":"InlineAssembly","src":"2269:166:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":645,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"2516:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":653,"nodeType":"IfStatement","src":"2512:75:2","trueBody":{"id":652,"nodeType":"Block","src":"2528:59:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":648,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"2553:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":649,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"2561:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":637,"id":651,"nodeType":"Return","src":"2546:26:2"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"2697:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":656,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"2711:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":654,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2689:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":659,"nodeType":"ExpressionStatement","src":"2689:28:2"},{"assignments":[661],"declarations":[{"constant":false,"id":661,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:2","nodeType":"VariableDeclaration","scope":746,"src":"2973:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":662,"nodeType":"VariableDeclarationStatement","src":"2973:17:2"},{"AST":{"nodeType":"YulBlock","src":"3013:291:2","statements":[{"nodeType":"YulAssignment","src":"3082:38:2","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:2"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:2"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:2"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:2"},"nodeType":"YulFunctionCall","src":"3095:25:2"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:2"}]},{"nodeType":"YulAssignment","src":"3202:41:2","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:2"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:2"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:2"},"nodeType":"YulFunctionCall","src":"3222:20:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:2"},"nodeType":"YulFunctionCall","src":"3211:32:2"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:2"}]},{"nodeType":"YulAssignment","src":"3260:30:2","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:2"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:2"},"nodeType":"YulFunctionCall","src":"3269:21:2"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":633,"isOffset":false,"isSlot":false,"src":"3108:11:2","valueSize":1},{"declaration":639,"isOffset":false,"isSlot":false,"src":"3236:5:2","valueSize":1},{"declaration":639,"isOffset":false,"isSlot":false,"src":"3260:5:2","valueSize":1},{"declaration":639,"isOffset":false,"isSlot":false,"src":"3273:5:2","valueSize":1},{"declaration":642,"isOffset":false,"isSlot":false,"src":"3202:5:2","valueSize":1},{"declaration":642,"isOffset":false,"isSlot":false,"src":"3215:5:2","valueSize":1},{"declaration":661,"isOffset":false,"isSlot":false,"src":"3082:9:2","valueSize":1},{"declaration":661,"isOffset":false,"isSlot":false,"src":"3225:9:2","valueSize":1},{"declaration":661,"isOffset":false,"isSlot":false,"src":"3280:9:2","valueSize":1},{"declaration":629,"isOffset":false,"isSlot":false,"src":"3102:1:2","valueSize":1},{"declaration":631,"isOffset":false,"isSlot":false,"src":"3105:1:2","valueSize":1}],"id":663,"nodeType":"InlineAssembly","src":"3004:300:2"},{"assignments":[665],"declarations":[{"constant":false,"id":665,"mutability":"mutable","name":"twos","nameLocation":"3619:4:2","nodeType":"VariableDeclaration","scope":746,"src":"3611:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":673,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":666,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"3626:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:2","subExpression":{"id":667,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"3642:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:2"},{"AST":{"nodeType":"YulBlock","src":"3681:362:2","statements":[{"nodeType":"YulAssignment","src":"3746:37:2","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:2"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:2"},"nodeType":"YulFunctionCall","src":"3761:22:2"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:2"}]},{"nodeType":"YulAssignment","src":"3850:25:2","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:2"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:2"},"nodeType":"YulFunctionCall","src":"3859:16:2"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:2"}]},{"nodeType":"YulAssignment","src":"3990:39:2","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:2","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:2"},"nodeType":"YulFunctionCall","src":"4006:12:2"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:2"},"nodeType":"YulFunctionCall","src":"4002:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:2"},"nodeType":"YulFunctionCall","src":"3998:31:2"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":633,"isOffset":false,"isSlot":false,"src":"3746:11:2","valueSize":1},{"declaration":633,"isOffset":false,"isSlot":false,"src":"3765:11:2","valueSize":1},{"declaration":639,"isOffset":false,"isSlot":false,"src":"3850:5:2","valueSize":1},{"declaration":639,"isOffset":false,"isSlot":false,"src":"3863:5:2","valueSize":1},{"declaration":665,"isOffset":false,"isSlot":false,"src":"3778:4:2","valueSize":1},{"declaration":665,"isOffset":false,"isSlot":false,"src":"3870:4:2","valueSize":1},{"declaration":665,"isOffset":false,"isSlot":false,"src":"3990:4:2","valueSize":1},{"declaration":665,"isOffset":false,"isSlot":false,"src":"4013:4:2","valueSize":1},{"declaration":665,"isOffset":false,"isSlot":false,"src":"4020:4:2","valueSize":1}],"id":674,"nodeType":"InlineAssembly","src":"3672:371:2"},{"expression":{"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":675,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"4109:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":676,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"4118:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":677,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"4126:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":680,"nodeType":"ExpressionStatement","src":"4109:21:2"},{"assignments":[682],"declarations":[{"constant":false,"id":682,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:2","nodeType":"VariableDeclaration","scope":746,"src":"4448:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":689,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:2","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":684,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4471:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:2"},{"expression":{"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":690,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4704:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":692,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4719:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":693,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4733:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":697,"nodeType":"ExpressionStatement","src":"4704:36:2"},{"expression":{"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":698,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4773:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":700,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4788:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":701,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4802:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":705,"nodeType":"ExpressionStatement","src":"4773:36:2"},{"expression":{"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":706,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4843:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":708,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4858:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":709,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4872:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":713,"nodeType":"ExpressionStatement","src":"4843:36:2"},{"expression":{"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":714,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4913:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":716,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4928:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":717,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4942:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":721,"nodeType":"ExpressionStatement","src":"4913:36:2"},{"expression":{"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":722,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4983:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":724,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4998:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":725,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5012:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":729,"nodeType":"ExpressionStatement","src":"4983:36:2"},{"expression":{"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":730,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5054:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":732,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"5069:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":733,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5083:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":737,"nodeType":"ExpressionStatement","src":"5054:36:2"},{"expression":{"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":738,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"5524:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":739,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"5533:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":740,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5541:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":743,"nodeType":"ExpressionStatement","src":"5524:24:2"},{"expression":{"id":744,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"5569:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":637,"id":745,"nodeType":"Return","src":"5562:13:2"}]}]},"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"1357:305:2","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:2","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"x","nameLocation":"1700:1:2","nodeType":"VariableDeclaration","scope":748,"src":"1692:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":628,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":631,"mutability":"mutable","name":"y","nameLocation":"1719:1:2","nodeType":"VariableDeclaration","scope":748,"src":"1711:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":630,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":633,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:2","nodeType":"VariableDeclaration","scope":748,"src":"1730:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":632,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:2"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"result","nameLocation":"1787:6:2","nodeType":"VariableDeclaration","scope":748,"src":"1779:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:2"},"scope":1400,"src":"1667:3925:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":791,"nodeType":"Block","src":"5872:189:2","statements":[{"assignments":[764],"declarations":[{"constant":false,"id":764,"mutability":"mutable","name":"result","nameLocation":"5890:6:2","nodeType":"VariableDeclaration","scope":791,"src":"5882:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":763,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":770,"initialValue":{"arguments":[{"id":766,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"5906:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":767,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"5909:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":768,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"5912:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":765,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[748,792],"referencedDeclaration":748,"src":"5899:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5899:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":771,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"5938:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":772,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"5950:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$542_$","typeString":"type(enum Math.Rounding)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5959:2:2","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":540,"src":"5950:11:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"}},"src":"5938:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":776,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"5972:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":777,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"5975:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":778,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"5978:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":775,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:2","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5965:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":788,"nodeType":"IfStatement","src":"5934:98:2","trueBody":{"id":787,"nodeType":"Block","src":"5996:36:2","statements":[{"expression":{"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"6010:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":786,"nodeType":"ExpressionStatement","src":"6010:11:2"}]}},{"expression":{"id":789,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"6048:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":762,"id":790,"nodeType":"Return","src":"6041:13:2"}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"5598:121:2","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":792,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:2","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"x","nameLocation":"5757:1:2","nodeType":"VariableDeclaration","scope":792,"src":"5749:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":750,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"y","nameLocation":"5776:1:2","nodeType":"VariableDeclaration","scope":792,"src":"5768:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":752,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:2","nodeType":"VariableDeclaration","scope":792,"src":"5787:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:2","nodeType":"VariableDeclaration","scope":792,"src":"5816:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"},"typeName":{"id":757,"nodeType":"UserDefinedTypeName","pathNode":{"id":756,"name":"Rounding","nameLocations":["5816:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":542,"src":"5816:8:2"},"referencedDeclaration":542,"src":"5816:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:2"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":792,"src":"5863:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:2"},"scope":1400,"src":"5724:337:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":903,"nodeType":"Block","src":"6337:1585:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":800,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"6351:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":806,"nodeType":"IfStatement","src":"6347:45:2","trueBody":{"id":805,"nodeType":"Block","src":"6359:33:2","statements":[{"expression":{"hexValue":"30","id":803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":799,"id":804,"nodeType":"Return","src":"6373:8:2"}]}},{"assignments":[808],"declarations":[{"constant":false,"id":808,"mutability":"mutable","name":"result","nameLocation":"7079:6:2","nodeType":"VariableDeclaration","scope":903,"src":"7071:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":817,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":811,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7099:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":810,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1072,1108],"referencedDeclaration":1072,"src":"7094:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7094:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":815,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:2"},{"id":902,"nodeType":"UncheckedBlock","src":"7508:408:2","statements":[{"expression":{"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":818,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7532:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":819,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7542:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":820,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7551:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7555:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":828,"nodeType":"ExpressionStatement","src":"7532:35:2"},{"expression":{"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":829,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7581:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":830,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7591:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7600:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":832,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7604:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":835,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":839,"nodeType":"ExpressionStatement","src":"7581:35:2"},{"expression":{"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":840,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7630:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":841,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7640:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":842,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7649:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":843,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7653:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":846,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":850,"nodeType":"ExpressionStatement","src":"7630:35:2"},{"expression":{"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":851,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7679:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":852,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7689:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":853,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7698:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":854,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7702:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":857,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":861,"nodeType":"ExpressionStatement","src":"7679:35:2"},{"expression":{"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":862,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7728:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":863,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7738:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":864,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7747:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7751:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":872,"nodeType":"ExpressionStatement","src":"7728:35:2"},{"expression":{"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":873,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7777:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":874,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7787:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":875,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7796:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7800:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":883,"nodeType":"ExpressionStatement","src":"7777:35:2"},{"expression":{"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":884,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7826:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":885,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7836:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":886,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7845:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7849:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":894,"nodeType":"ExpressionStatement","src":"7826:35:2"},{"expression":{"arguments":[{"id":896,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7886:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":897,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7894:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":898,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7898:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":895,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"7882:3:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7882:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":799,"id":901,"nodeType":"Return","src":"7875:30:2"}]}]},"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"6067:208:2","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":904,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:2","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"a","nameLocation":"6302:1:2","nodeType":"VariableDeclaration","scope":904,"src":"6294:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:2"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":904,"src":"6328:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:2"},"scope":1400,"src":"6280:1642:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":939,"nodeType":"Block","src":"8098:161:2","statements":[{"id":938,"nodeType":"UncheckedBlock","src":"8108:145:2","statements":[{"assignments":[916],"declarations":[{"constant":false,"id":916,"mutability":"mutable","name":"result","nameLocation":"8140:6:2","nodeType":"VariableDeclaration","scope":938,"src":"8132:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":920,"initialValue":{"arguments":[{"id":918,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"8154:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":917,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[904,940],"referencedDeclaration":904,"src":"8149:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8149:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":921,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"8177:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":922,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"8187:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":923,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"8199:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$542_$","typeString":"type(enum Math.Rounding)"}},"id":924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8208:2:2","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":540,"src":"8199:11:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"}},"src":"8187:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":926,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"8214:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":927,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"8223:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":929,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"8232:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:2","trueExpression":{"hexValue":"31","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":935,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":914,"id":937,"nodeType":"Return","src":"8170:72:2"}]}]},"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"7928:89:2","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":940,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:2","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"a","nameLocation":"8044:1:2","nodeType":"VariableDeclaration","scope":940,"src":"8036:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":906,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":910,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:2","nodeType":"VariableDeclaration","scope":940,"src":"8047:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"},"typeName":{"id":909,"nodeType":"UserDefinedTypeName","pathNode":{"id":908,"name":"Rounding","nameLocations":["8047:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":542,"src":"8047:8:2"},"referencedDeclaration":542,"src":"8047:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:2"},"returnParameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":940,"src":"8089:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":912,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:2"},"scope":1400,"src":"8022:237:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1071,"nodeType":"Block","src":"8444:922:2","statements":[{"assignments":[949],"declarations":[{"constant":false,"id":949,"mutability":"mutable","name":"result","nameLocation":"8462:6:2","nodeType":"VariableDeclaration","scope":1071,"src":"8454:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":951,"initialValue":{"hexValue":"30","id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:2"},{"id":1068,"nodeType":"UncheckedBlock","src":"8482:855:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"8510:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:2","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":966,"nodeType":"IfStatement","src":"8506:99:2","trueBody":{"id":965,"nodeType":"Block","src":"8528:77:2","statements":[{"expression":{"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"8546:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:2","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":960,"nodeType":"ExpressionStatement","src":"8546:13:2"},{"expression":{"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":961,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"8577:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:2","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":964,"nodeType":"ExpressionStatement","src":"8577:13:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"8622:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:2","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":981,"nodeType":"IfStatement","src":"8618:96:2","trueBody":{"id":980,"nodeType":"Block","src":"8639:75:2","statements":[{"expression":{"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"8657:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:2","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":975,"nodeType":"ExpressionStatement","src":"8657:12:2"},{"expression":{"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":976,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"8687:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:2","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":979,"nodeType":"ExpressionStatement","src":"8687:12:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"8731:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":996,"nodeType":"IfStatement","src":"8727:96:2","trueBody":{"id":995,"nodeType":"Block","src":"8748:75:2","statements":[{"expression":{"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"8766:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":990,"nodeType":"ExpressionStatement","src":"8766:12:2"},{"expression":{"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":991,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"8796:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":994,"nodeType":"ExpressionStatement","src":"8796:12:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"8840:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1011,"nodeType":"IfStatement","src":"8836:96:2","trueBody":{"id":1010,"nodeType":"Block","src":"8857:75:2","statements":[{"expression":{"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"8875:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1005,"nodeType":"ExpressionStatement","src":"8875:12:2"},{"expression":{"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1006,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"8905:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1009,"nodeType":"ExpressionStatement","src":"8905:12:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"8949:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1026,"nodeType":"IfStatement","src":"8945:93:2","trueBody":{"id":1025,"nodeType":"Block","src":"8965:73:2","statements":[{"expression":{"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"8983:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1020,"nodeType":"ExpressionStatement","src":"8983:11:2"},{"expression":{"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1021,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"9012:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1024,"nodeType":"ExpressionStatement","src":"9012:11:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"9055:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1041,"nodeType":"IfStatement","src":"9051:93:2","trueBody":{"id":1040,"nodeType":"Block","src":"9071:73:2","statements":[{"expression":{"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"9089:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1035,"nodeType":"ExpressionStatement","src":"9089:11:2"},{"expression":{"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1036,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"9118:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1039,"nodeType":"ExpressionStatement","src":"9118:11:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"9161:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1056,"nodeType":"IfStatement","src":"9157:93:2","trueBody":{"id":1055,"nodeType":"Block","src":"9177:73:2","statements":[{"expression":{"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"9195:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1050,"nodeType":"ExpressionStatement","src":"9195:11:2"},{"expression":{"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1051,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"9224:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1054,"nodeType":"ExpressionStatement","src":"9224:11:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"9267:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1067,"nodeType":"IfStatement","src":"9263:64:2","trueBody":{"id":1066,"nodeType":"Block","src":"9283:44:2","statements":[{"expression":{"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1062,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"9301:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1065,"nodeType":"ExpressionStatement","src":"9301:11:2"}]}}]},{"expression":{"id":1069,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"9353:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":947,"id":1070,"nodeType":"Return","src":"9346:13:2"}]},"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"8265:113:2","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1072,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:2","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"value","nameLocation":"8405:5:2","nodeType":"VariableDeclaration","scope":1072,"src":"8397:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:2"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1072,"src":"8435:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:2"},"scope":1400,"src":"8383:983:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1107,"nodeType":"Block","src":"9599:165:2","statements":[{"id":1106,"nodeType":"UncheckedBlock","src":"9609:149:2","statements":[{"assignments":[1084],"declarations":[{"constant":false,"id":1084,"mutability":"mutable","name":"result","nameLocation":"9641:6:2","nodeType":"VariableDeclaration","scope":1106,"src":"9633:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1088,"initialValue":{"arguments":[{"id":1086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"9655:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1085,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1072,1108],"referencedDeclaration":1072,"src":"9650:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9650:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1089,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"9682:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1090,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"9692:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1091,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"9704:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$542_$","typeString":"type(enum Math.Rounding)"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9713:2:2","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":540,"src":"9704:11:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"}},"src":"9692:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"9724:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"9733:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:2","trueExpression":{"hexValue":"31","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1082,"id":1105,"nodeType":"Return","src":"9675:72:2"}]}]},"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"9372:142:2","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1108,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:2","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"value","nameLocation":"9541:5:2","nodeType":"VariableDeclaration","scope":1108,"src":"9533:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:2","nodeType":"VariableDeclaration","scope":1108,"src":"9548:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"},"typeName":{"id":1077,"nodeType":"UserDefinedTypeName","pathNode":{"id":1076,"name":"Rounding","nameLocations":["9548:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":542,"src":"9548:8:2"},"referencedDeclaration":542,"src":"9548:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:2"},"returnParameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1108,"src":"9590:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:2"},"scope":1400,"src":"9519:245:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1236,"nodeType":"Block","src":"9951:828:2","statements":[{"assignments":[1117],"declarations":[{"constant":false,"id":1117,"mutability":"mutable","name":"result","nameLocation":"9969:6:2","nodeType":"VariableDeclaration","scope":1236,"src":"9961:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1119,"initialValue":{"hexValue":"30","id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:2"},{"id":1233,"nodeType":"UncheckedBlock","src":"9989:761:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"10017:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:2","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:2","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1136,"nodeType":"IfStatement","src":"10013:99:2","trueBody":{"id":1135,"nodeType":"Block","src":"10034:78:2","statements":[{"expression":{"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"10052:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:2","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:2","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1130,"nodeType":"ExpressionStatement","src":"10052:15:2"},{"expression":{"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1131,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"10085:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:2","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1134,"nodeType":"ExpressionStatement","src":"10085:12:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"10129:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1153,"nodeType":"IfStatement","src":"10125:99:2","trueBody":{"id":1152,"nodeType":"Block","src":"10146:78:2","statements":[{"expression":{"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"10164:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1147,"nodeType":"ExpressionStatement","src":"10164:15:2"},{"expression":{"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1148,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"10197:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1151,"nodeType":"ExpressionStatement","src":"10197:12:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"10241:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:2","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1170,"nodeType":"IfStatement","src":"10237:99:2","trueBody":{"id":1169,"nodeType":"Block","src":"10258:78:2","statements":[{"expression":{"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"10276:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:2","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1164,"nodeType":"ExpressionStatement","src":"10276:15:2"},{"expression":{"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1165,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"10309:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1168,"nodeType":"ExpressionStatement","src":"10309:12:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"10353:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1187,"nodeType":"IfStatement","src":"10349:96:2","trueBody":{"id":1186,"nodeType":"Block","src":"10369:76:2","statements":[{"expression":{"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"10387:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1181,"nodeType":"ExpressionStatement","src":"10387:14:2"},{"expression":{"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1182,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"10419:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1185,"nodeType":"ExpressionStatement","src":"10419:11:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"10462:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:2","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1204,"nodeType":"IfStatement","src":"10458:96:2","trueBody":{"id":1203,"nodeType":"Block","src":"10478:76:2","statements":[{"expression":{"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"10496:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:2","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1198,"nodeType":"ExpressionStatement","src":"10496:14:2"},{"expression":{"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1199,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"10528:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1202,"nodeType":"ExpressionStatement","src":"10528:11:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"10571:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1221,"nodeType":"IfStatement","src":"10567:96:2","trueBody":{"id":1220,"nodeType":"Block","src":"10587:76:2","statements":[{"expression":{"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"10605:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1215,"nodeType":"ExpressionStatement","src":"10605:14:2"},{"expression":{"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1216,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"10637:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1219,"nodeType":"ExpressionStatement","src":"10637:11:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"10680:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1232,"nodeType":"IfStatement","src":"10676:64:2","trueBody":{"id":1231,"nodeType":"Block","src":"10696:44:2","statements":[{"expression":{"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1227,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"10714:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1230,"nodeType":"ExpressionStatement","src":"10714:11:2"}]}}]},{"expression":{"id":1234,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"10766:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1115,"id":1235,"nodeType":"Return","src":"10759:13:2"}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"9770:114:2","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1237,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:2","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"value","nameLocation":"9912:5:2","nodeType":"VariableDeclaration","scope":1237,"src":"9904:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1110,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:2"},"returnParameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1237,"src":"9942:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1113,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:2"},"scope":1400,"src":"9889:890:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1272,"nodeType":"Block","src":"11014:165:2","statements":[{"id":1271,"nodeType":"UncheckedBlock","src":"11024:149:2","statements":[{"assignments":[1249],"declarations":[{"constant":false,"id":1249,"mutability":"mutable","name":"result","nameLocation":"11056:6:2","nodeType":"VariableDeclaration","scope":1271,"src":"11048:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1253,"initialValue":{"arguments":[{"id":1251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"11071:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1250,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1237,1273],"referencedDeclaration":1237,"src":"11065:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11065:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"11098:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1255,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"11108:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1256,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"11120:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$542_$","typeString":"type(enum Math.Rounding)"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11129:2:2","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":540,"src":"11120:11:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"}},"src":"11108:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1260,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"11139:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"11148:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:2","trueExpression":{"hexValue":"31","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1247,"id":1270,"nodeType":"Return","src":"11091:71:2"}]}]},"documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"10785:143:2","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1273,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:2","nodeType":"FunctionDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"value","nameLocation":"10956:5:2","nodeType":"VariableDeclaration","scope":1273,"src":"10948:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1239,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:2","nodeType":"VariableDeclaration","scope":1273,"src":"10963:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"},"typeName":{"id":1242,"nodeType":"UserDefinedTypeName","pathNode":{"id":1241,"name":"Rounding","nameLocations":["10963:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":542,"src":"10963:8:2"},"referencedDeclaration":542,"src":"10963:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:2"},"returnParameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1273,"src":"11005:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:2"},"scope":1400,"src":"10933:246:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1359,"nodeType":"Block","src":"11493:600:2","statements":[{"assignments":[1282],"declarations":[{"constant":false,"id":1282,"mutability":"mutable","name":"result","nameLocation":"11511:6:2","nodeType":"VariableDeclaration","scope":1359,"src":"11503:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1284,"initialValue":{"hexValue":"30","id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:2"},{"id":1356,"nodeType":"UncheckedBlock","src":"11531:533:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"11559:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:2","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1299,"nodeType":"IfStatement","src":"11555:98:2","trueBody":{"id":1298,"nodeType":"Block","src":"11577:76:2","statements":[{"expression":{"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"11595:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:2","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1293,"nodeType":"ExpressionStatement","src":"11595:13:2"},{"expression":{"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1294,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"11626:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1297,"nodeType":"ExpressionStatement","src":"11626:12:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"11670:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:2","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1314,"nodeType":"IfStatement","src":"11666:95:2","trueBody":{"id":1313,"nodeType":"Block","src":"11687:74:2","statements":[{"expression":{"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"11705:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:2","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1308,"nodeType":"ExpressionStatement","src":"11705:12:2"},{"expression":{"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1309,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"11735:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1312,"nodeType":"ExpressionStatement","src":"11735:11:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"11778:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1329,"nodeType":"IfStatement","src":"11774:95:2","trueBody":{"id":1328,"nodeType":"Block","src":"11795:74:2","statements":[{"expression":{"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"11813:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1323,"nodeType":"ExpressionStatement","src":"11813:12:2"},{"expression":{"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1324,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"11843:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1327,"nodeType":"ExpressionStatement","src":"11843:11:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"11886:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1344,"nodeType":"IfStatement","src":"11882:95:2","trueBody":{"id":1343,"nodeType":"Block","src":"11903:74:2","statements":[{"expression":{"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"11921:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1338,"nodeType":"ExpressionStatement","src":"11921:12:2"},{"expression":{"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1339,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"11951:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1342,"nodeType":"ExpressionStatement","src":"11951:11:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"11994:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1355,"nodeType":"IfStatement","src":"11990:64:2","trueBody":{"id":1354,"nodeType":"Block","src":"12010:44:2","statements":[{"expression":{"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1350,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"12028:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1353,"nodeType":"ExpressionStatement","src":"12028:11:2"}]}}]},{"expression":{"id":1357,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"12080:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1280,"id":1358,"nodeType":"Return","src":"12073:13:2"}]},"documentation":{"id":1274,"nodeType":"StructuredDocumentation","src":"11185:240:2","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1360,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:2","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1276,"mutability":"mutable","name":"value","nameLocation":"11454:5:2","nodeType":"VariableDeclaration","scope":1360,"src":"11446:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:2"},"returnParameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1360,"src":"11484:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1278,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:2"},"scope":1400,"src":"11430:663:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1398,"nodeType":"Block","src":"12329:173:2","statements":[{"id":1397,"nodeType":"UncheckedBlock","src":"12339:157:2","statements":[{"assignments":[1372],"declarations":[{"constant":false,"id":1372,"mutability":"mutable","name":"result","nameLocation":"12371:6:2","nodeType":"VariableDeclaration","scope":1397,"src":"12363:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1376,"initialValue":{"arguments":[{"id":1374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"12387:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1373,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1360,1399],"referencedDeclaration":1360,"src":"12380:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12380:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"12414:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1378,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"12424:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1379,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"12436:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$542_$","typeString":"type(enum Math.Rounding)"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12445:2:2","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":540,"src":"12436:11:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"}},"src":"12424:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"12457:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"12471:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:2","trueExpression":{"hexValue":"31","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1394,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1370,"id":1396,"nodeType":"Return","src":"12407:78:2"}]}]},"documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"12099:143:2","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1399,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:2","nodeType":"FunctionDefinition","parameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"value","nameLocation":"12271:5:2","nodeType":"VariableDeclaration","scope":1399,"src":"12263:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1366,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:2","nodeType":"VariableDeclaration","scope":1399,"src":"12278:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"},"typeName":{"id":1365,"nodeType":"UserDefinedTypeName","pathNode":{"id":1364,"name":"Rounding","nameLocations":["12278:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":542,"src":"12278:8:2"},"referencedDeclaration":542,"src":"12278:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$542","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:2"},"returnParameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1399,"src":"12320:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:2"},"scope":1400,"src":"12247:255:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1401,"src":"202:12302:2","usedErrors":[]}],"src":"103:12402:2"},"id":2},"contracts/EnglishOwnerAdder.sol":{"ast":{"absolutePath":"contracts/EnglishOwnerAdder.sol","exportedSymbols":{"ECDSA":[535],"EnglishOwnerAdder":[1484],"Enum":[2033],"GnosisSafe":[2072],"Math":[1400],"Strings":[174],"TokenAuthenticated":[1800]},"id":1485,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1402,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:3"},{"absolutePath":"contracts/TokenAuthenticated.sol","file":"./TokenAuthenticated.sol","id":1403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1485,"sourceUnit":1801,"src":"58:34:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IGnosisSafe.sol","file":"./interfaces/IGnosisSafe.sol","id":1404,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1485,"sourceUnit":2073,"src":"93:38:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1405,"name":"TokenAuthenticated","nameLocations":["163:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"163:18:3"},"id":1406,"nodeType":"InheritanceSpecifier","src":"163:18:3"}],"canonicalName":"EnglishOwnerAdder","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1484,"linearizedBaseContracts":[1484,1800],"name":"EnglishOwnerAdder","nameLocation":"142:17:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":1412,"nodeType":"Block","src":"284:2:3","statements":[]},"id":1413,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4920617574686f72697a6520746869732064657669636520746f2073656e64207472616e73616374696f6e73206f6e206d7920626568616c662e","id":1409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"222:60:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_a7f8dc296605a91e2494b19fe37347ec15a2b43ea8d6a517cb64ff599fc1206c","typeString":"literal_string \"I authorize this device to send transactions on my behalf.\""},"value":"I authorize this device to send transactions on my behalf."}],"id":1410,"kind":"baseConstructorSpecifier","modifierName":{"id":1408,"name":"TokenAuthenticated","nameLocations":["203:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"203:18:3"},"nodeType":"ModifierInvocation","src":"203:80:3"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1407,"nodeType":"ParameterList","parameters":[],"src":"200:2:3"},"returnParameters":{"id":1411,"nodeType":"ParameterList","parameters":[],"src":"284:0:3"},"scope":1484,"src":"189:97:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1482,"nodeType":"Block","src":"421:702:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":1425,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"452:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}},{"id":1426,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"461:9:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1424,"name":"authenticate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"439:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_TokenRequest_$1638_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (struct TokenAuthenticated.TokenRequest calldata,bytes calldata) view returns (bool)"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"439:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1423,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"431:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"431:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1429,"nodeType":"ExpressionStatement","src":"431:41:3"},{"assignments":[1432],"declarations":[{"constant":false,"id":1432,"mutability":"mutable","name":"safe","nameLocation":"494:4:3","nodeType":"VariableDeclaration","scope":1482,"src":"483:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_GnosisSafe_$2072","typeString":"contract GnosisSafe"},"typeName":{"id":1431,"nodeType":"UserDefinedTypeName","pathNode":{"id":1430,"name":"GnosisSafe","nameLocations":["483:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":2072,"src":"483:10:3"},"referencedDeclaration":2072,"src":"483:10:3","typeDescriptions":{"typeIdentifier":"t_contract$_GnosisSafe_$2072","typeString":"contract GnosisSafe"}},"visibility":"internal"}],"id":1436,"initialValue":{"arguments":[{"id":1434,"name":"_safe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"512:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1433,"name":"GnosisSafe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"501:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GnosisSafe_$2072_$","typeString":"type(contract GnosisSafe)"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"501:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_GnosisSafe_$2072","typeString":"contract GnosisSafe"}},"nodeType":"VariableDeclarationStatement","src":"483:35:3"},{"id":1459,"nodeType":"Block","src":"529:279:3","statements":[{"assignments":[1438],"declarations":[{"constant":false,"id":1438,"mutability":"mutable","name":"threshold","nameLocation":"551:9:3","nodeType":"VariableDeclaration","scope":1459,"src":"543:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1437,"name":"uint256","nodeType":"ElementaryTypeName","src":"543:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1442,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1439,"name":"safe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"563:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_GnosisSafe_$2072","typeString":"contract GnosisSafe"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"568:12:3","memberName":"getThreshold","nodeType":"MemberAccess","referencedDeclaration":2053,"src":"563:17:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"563:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"543:39:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1444,"name":"threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"621:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"634:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"621:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792073616665277320776974682061207468726573686f6c64206f66206f6e652061726520737570706f72746564","id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"653:51:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05","typeString":"literal_string \"Only safe's with a threshold of one are supported\""},"value":"Only safe's with a threshold of one are supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05","typeString":"literal_string \"Only safe's with a threshold of one are supported\""}],"id":1443,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"596:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"596:122:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1449,"nodeType":"ExpressionStatement","src":"596:122:3"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1453,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"753:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"761:5:3","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"753:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1451,"name":"safe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"740:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_GnosisSafe_$2072","typeString":"contract GnosisSafe"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"745:7:3","memberName":"isOwner","nodeType":"MemberAccess","referencedDeclaration":2066,"src":"740:12:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"740:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e6572206973206e6f7420612073616665206f776e6572","id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"769:27:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b","typeString":"literal_string \"Owner is not a safe owner\""},"value":"Owner is not a safe owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b","typeString":"literal_string \"Owner is not a safe owner\""}],"id":1450,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"732:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"732:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1458,"nodeType":"ExpressionStatement","src":"732:65:3"}]},{"assignments":[1461],"declarations":[{"constant":false,"id":1461,"mutability":"mutable","name":"data","nameLocation":"831:4:3","nodeType":"VariableDeclaration","scope":1482,"src":"818:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1460,"name":"bytes","nodeType":"ElementaryTypeName","src":"818:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1469,"initialValue":{"arguments":[{"hexValue":"6164644f776e6572576974685468726573686f6c6428616464726573732c75696e7432353629","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"875:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d582f13d757778d349075a68bf5d92ef44d17aa3b3ca38da8eb82cb56c41c90","typeString":"literal_string \"addOwnerWithThreshold(address,uint256)\""},"value":"addOwnerWithThreshold(address,uint256)"},{"expression":{"id":1465,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"929:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"937:6:3","memberName":"device","nodeType":"MemberAccess","referencedDeclaration":1635,"src":"929:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"957:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0d582f13d757778d349075a68bf5d92ef44d17aa3b3ca38da8eb82cb56c41c90","typeString":"literal_string \"addOwnerWithThreshold(address,uint256)\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":1462,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"838:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"842:19:3","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"838:23:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"838:130:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"818:150:3"},{"expression":{"arguments":[{"id":1474,"name":"_safe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"1035:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1054:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1476,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"1069:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"expression":{"id":1477,"name":"Enum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1087:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Enum_$2033_$","typeString":"type(contract Enum)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1092:9:3","memberName":"Operation","nodeType":"MemberAccess","referencedDeclaration":2032,"src":"1087:14:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Operation_$2032_$","typeString":"type(enum Enum.Operation)"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1102:4:3","memberName":"Call","nodeType":"MemberAccess","referencedDeclaration":2030,"src":"1087:19:3","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$2032","typeString":"enum Enum.Operation"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_enum$_Operation_$2032","typeString":"enum Enum.Operation"}],"expression":{"arguments":[{"id":1471,"name":"_safe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"989:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1470,"name":"GnosisSafe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"978:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GnosisSafe_$2072_$","typeString":"type(contract GnosisSafe)"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"978:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_GnosisSafe_$2072","typeString":"contract GnosisSafe"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"996:25:3","memberName":"execTransactionFromModule","nodeType":"MemberAccess","referencedDeclaration":2048,"src":"978:43:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$2032_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"978:138:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1481,"nodeType":"ExpressionStatement","src":"978:138:3"}]},"functionSelector":"724e59c3","id":1483,"implemented":true,"kind":"function","modifiers":[],"name":"addOwner","nameLocation":"301:8:3","nodeType":"FunctionDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"_safe","nameLocation":"327:5:3","nodeType":"VariableDeclaration","scope":1483,"src":"319:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1414,"name":"address","nodeType":"ElementaryTypeName","src":"319:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"request","nameLocation":"364:7:3","nodeType":"VariableDeclaration","scope":1483,"src":"342:29:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest"},"typeName":{"id":1417,"nodeType":"UserDefinedTypeName","pathNode":{"id":1416,"name":"TokenRequest","nameLocations":["342:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1638,"src":"342:12:3"},"referencedDeclaration":1638,"src":"342:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_storage_ptr","typeString":"struct TokenAuthenticated.TokenRequest"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"signature","nameLocation":"396:9:3","nodeType":"VariableDeclaration","scope":1483,"src":"381:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1419,"name":"bytes","nodeType":"ElementaryTypeName","src":"381:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"309:102:3"},"returnParameters":{"id":1422,"nodeType":"ParameterList","parameters":[],"src":"421:0:3"},"scope":1484,"src":"292:831:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1485,"src":"133:993:3","usedErrors":[]}],"src":"32:1095:3"},"id":3},"contracts/EnglishOwnerRemover.sol":{"ast":{"absolutePath":"contracts/EnglishOwnerRemover.sol","exportedSymbols":{"ECDSA":[535],"EnglishOwnerRemover":[1571],"Enum":[2033],"GnosisSafe":[2072],"Math":[1400],"Strings":[174],"TokenAuthenticated":[1800]},"id":1572,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1486,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:4"},{"absolutePath":"contracts/TokenAuthenticated.sol","file":"./TokenAuthenticated.sol","id":1487,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1572,"sourceUnit":1801,"src":"58:34:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IGnosisSafe.sol","file":"./interfaces/IGnosisSafe.sol","id":1488,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1572,"sourceUnit":2073,"src":"93:38:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1489,"name":"TokenAuthenticated","nameLocations":["165:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"165:18:4"},"id":1490,"nodeType":"InheritanceSpecifier","src":"165:18:4"}],"canonicalName":"EnglishOwnerRemover","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1571,"linearizedBaseContracts":[1571,1800],"name":"EnglishOwnerRemover","nameLocation":"142:19:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1496,"nodeType":"Block","src":"273:2:4","statements":[]},"id":1497,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"492077616e7420746f2072656d6f76652074686973206465766963652066726f6d206d79206163636f756e742e","id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"224:47:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_ee6250da9c701645d87d957fbe52ef1d0440c1e5c0e2a045ecc7fb597f20ceb6","typeString":"literal_string \"I want to remove this device from my account.\""},"value":"I want to remove this device from my account."}],"id":1494,"kind":"baseConstructorSpecifier","modifierName":{"id":1492,"name":"TokenAuthenticated","nameLocations":["205:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"205:18:4"},"nodeType":"ModifierInvocation","src":"205:67:4"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1491,"nodeType":"ParameterList","parameters":[],"src":"202:2:4"},"returnParameters":{"id":1495,"nodeType":"ParameterList","parameters":[],"src":"273:0:4"},"scope":1571,"src":"191:84:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1569,"nodeType":"Block","src":"444:727:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":1511,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"475:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}},{"id":1512,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"484:9:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1510,"name":"authenticate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"462:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_TokenRequest_$1638_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (struct TokenAuthenticated.TokenRequest calldata,bytes calldata) view returns (bool)"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"462:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1509,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"454:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"454:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1515,"nodeType":"ExpressionStatement","src":"454:41:4"},{"assignments":[1518],"declarations":[{"constant":false,"id":1518,"mutability":"mutable","name":"safe","nameLocation":"517:4:4","nodeType":"VariableDeclaration","scope":1569,"src":"506:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_GnosisSafe_$2072","typeString":"contract GnosisSafe"},"typeName":{"id":1517,"nodeType":"UserDefinedTypeName","pathNode":{"id":1516,"name":"GnosisSafe","nameLocations":["506:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":2072,"src":"506:10:4"},"referencedDeclaration":2072,"src":"506:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_GnosisSafe_$2072","typeString":"contract GnosisSafe"}},"visibility":"internal"}],"id":1522,"initialValue":{"arguments":[{"id":1520,"name":"_safe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"535:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1519,"name":"GnosisSafe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"524:10:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GnosisSafe_$2072_$","typeString":"type(contract GnosisSafe)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"524:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_GnosisSafe_$2072","typeString":"contract GnosisSafe"}},"nodeType":"VariableDeclarationStatement","src":"506:35:4"},{"id":1545,"nodeType":"Block","src":"551:279:4","statements":[{"assignments":[1524],"declarations":[{"constant":false,"id":1524,"mutability":"mutable","name":"threshold","nameLocation":"573:9:4","nodeType":"VariableDeclaration","scope":1545,"src":"565:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1523,"name":"uint256","nodeType":"ElementaryTypeName","src":"565:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1528,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1525,"name":"safe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"585:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_GnosisSafe_$2072","typeString":"contract GnosisSafe"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"590:12:4","memberName":"getThreshold","nodeType":"MemberAccess","referencedDeclaration":2053,"src":"585:17:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"585:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"565:39:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1530,"name":"threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"643:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"656:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"643:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792073616665277320776974682061207468726573686f6c64206f66206f6e652061726520737570706f72746564","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"675:51:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05","typeString":"literal_string \"Only safe's with a threshold of one are supported\""},"value":"Only safe's with a threshold of one are supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05","typeString":"literal_string \"Only safe's with a threshold of one are supported\""}],"id":1529,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"618:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"618:122:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1535,"nodeType":"ExpressionStatement","src":"618:122:4"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1539,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"775:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"783:5:4","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"775:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1537,"name":"safe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"762:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_GnosisSafe_$2072","typeString":"contract GnosisSafe"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"767:7:4","memberName":"isOwner","nodeType":"MemberAccess","referencedDeclaration":2066,"src":"762:12:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"762:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e6572206973206e6f7420612073616665206f776e6572","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"791:27:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b","typeString":"literal_string \"Owner is not a safe owner\""},"value":"Owner is not a safe owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b","typeString":"literal_string \"Owner is not a safe owner\""}],"id":1536,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"754:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"754:65:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1544,"nodeType":"ExpressionStatement","src":"754:65:4"}]},{"assignments":[1547],"declarations":[{"constant":false,"id":1547,"mutability":"mutable","name":"data","nameLocation":"853:4:4","nodeType":"VariableDeclaration","scope":1569,"src":"840:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1546,"name":"bytes","nodeType":"ElementaryTypeName","src":"840:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1556,"initialValue":{"arguments":[{"hexValue":"72656d6f76654f776e657228616464726573732c616464726573732c75696e7432353629","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"897:38:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8dc5dd91c83c64a09d4878e686963ef56fde408d6dfdfe8047e612cc3e3702b","typeString":"literal_string \"removeOwner(address,address,uint256)\""},"value":"removeOwner(address,address,uint256)"},{"id":1551,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"949:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1552,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"976:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"984:6:4","memberName":"device","nodeType":"MemberAccess","referencedDeclaration":1635,"src":"976:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1004:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f8dc5dd91c83c64a09d4878e686963ef56fde408d6dfdfe8047e612cc3e3702b","typeString":"literal_string \"removeOwner(address,address,uint256)\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":1548,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"860:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"864:19:4","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"860:23:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"860:155:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"840:175:4"},{"expression":{"arguments":[{"id":1561,"name":"_safe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"1083:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1102:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1563,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"1117:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"expression":{"id":1564,"name":"Enum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1135:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Enum_$2033_$","typeString":"type(contract Enum)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1140:9:4","memberName":"Operation","nodeType":"MemberAccess","referencedDeclaration":2032,"src":"1135:14:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Operation_$2032_$","typeString":"type(enum Enum.Operation)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1150:4:4","memberName":"Call","nodeType":"MemberAccess","referencedDeclaration":2030,"src":"1135:19:4","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$2032","typeString":"enum Enum.Operation"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_enum$_Operation_$2032","typeString":"enum Enum.Operation"}],"expression":{"arguments":[{"id":1558,"name":"_safe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"1037:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1557,"name":"GnosisSafe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"1026:10:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GnosisSafe_$2072_$","typeString":"type(contract GnosisSafe)"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1026:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_GnosisSafe_$2072","typeString":"contract GnosisSafe"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1044:25:4","memberName":"execTransactionFromModule","nodeType":"MemberAccess","referencedDeclaration":2048,"src":"1026:43:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$2032_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1026:138:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1568,"nodeType":"ExpressionStatement","src":"1026:138:4"}]},"functionSelector":"142af66b","id":1570,"implemented":true,"kind":"function","modifiers":[],"name":"removeOwner","nameLocation":"290:11:4","nodeType":"FunctionDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"mutability":"mutable","name":"_safe","nameLocation":"319:5:4","nodeType":"VariableDeclaration","scope":1570,"src":"311:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1498,"name":"address","nodeType":"ElementaryTypeName","src":"311:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"previousOwner","nameLocation":"342:13:4","nodeType":"VariableDeclaration","scope":1570,"src":"334:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"334:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1504,"mutability":"mutable","name":"request","nameLocation":"387:7:4","nodeType":"VariableDeclaration","scope":1570,"src":"365:29:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest"},"typeName":{"id":1503,"nodeType":"UserDefinedTypeName","pathNode":{"id":1502,"name":"TokenRequest","nameLocations":["365:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":1638,"src":"365:12:4"},"referencedDeclaration":1638,"src":"365:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_storage_ptr","typeString":"struct TokenAuthenticated.TokenRequest"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"signature","nameLocation":"419:9:4","nodeType":"VariableDeclaration","scope":1570,"src":"404:24:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1505,"name":"bytes","nodeType":"ElementaryTypeName","src":"404:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"301:133:4"},"returnParameters":{"id":1508,"nodeType":"ParameterList","parameters":[],"src":"444:0:4"},"scope":1571,"src":"281:890:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1572,"src":"133:1041:4","usedErrors":[]}],"src":"32:1143:4"},"id":4},"contracts/SafeSetup.sol":{"ast":{"absolutePath":"contracts/SafeSetup.sol","exportedSymbols":{"Enum":[2033],"GnosisSafe":[2072],"SafeSetup":[1621]},"id":1622,"nodeType":"SourceUnit","nodes":[{"id":1573,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"0:24:5"},{"absolutePath":"contracts/interfaces/IGnosisSafe.sol","file":"./interfaces/IGnosisSafe.sol","id":1574,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1622,"sourceUnit":2073,"src":"26:38:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeSetup","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1621,"linearizedBaseContracts":[1621],"name":"SafeSetup","nameLocation":"75:9:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1576,"mutability":"immutable","name":"addOwnerModule","nameLocation":"109:14:5","nodeType":"VariableDeclaration","scope":1621,"src":"91:32:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1575,"name":"address","nodeType":"ElementaryTypeName","src":"91:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1578,"mutability":"immutable","name":"removeOwnerModule","nameLocation":"147:17:5","nodeType":"VariableDeclaration","scope":1621,"src":"129:35:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1577,"name":"address","nodeType":"ElementaryTypeName","src":"129:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"body":{"id":1593,"nodeType":"Block","src":"236:97:5","statements":[{"expression":{"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1585,"name":"addOwnerModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"246:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1586,"name":"_addOwnerModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"263:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"246:32:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1588,"nodeType":"ExpressionStatement","src":"246:32:5"},{"expression":{"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1589,"name":"removeOwnerModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"288:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1590,"name":"_removeOwnerModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"308:18:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"288:38:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1592,"nodeType":"ExpressionStatement","src":"288:38:5"}]},"id":1594,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"_addOwnerModule","nameLocation":"191:15:5","nodeType":"VariableDeclaration","scope":1594,"src":"183:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1579,"name":"address","nodeType":"ElementaryTypeName","src":"183:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"_removeOwnerModule","nameLocation":"216:18:5","nodeType":"VariableDeclaration","scope":1594,"src":"208:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"208:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"182:53:5"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[],"src":"236:0:5"},"scope":1621,"src":"171:162:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1619,"nodeType":"Block","src":"363:149:5","statements":[{"assignments":[1599],"declarations":[{"constant":false,"id":1599,"mutability":"mutable","name":"safe","nameLocation":"384:4:5","nodeType":"VariableDeclaration","scope":1619,"src":"373:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_GnosisSafe_$2072","typeString":"contract GnosisSafe"},"typeName":{"id":1598,"nodeType":"UserDefinedTypeName","pathNode":{"id":1597,"name":"GnosisSafe","nameLocations":["373:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":2072,"src":"373:10:5"},"referencedDeclaration":2072,"src":"373:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_GnosisSafe_$2072","typeString":"contract GnosisSafe"}},"visibility":"internal"}],"id":1606,"initialValue":{"arguments":[{"arguments":[{"id":1603,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"410:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeSetup_$1621","typeString":"contract SafeSetup"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeSetup_$1621","typeString":"contract SafeSetup"}],"id":1602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"402:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1601,"name":"address","nodeType":"ElementaryTypeName","src":"402:7:5","typeDescriptions":{}}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"402:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1600,"name":"GnosisSafe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"391:10:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GnosisSafe_$2072_$","typeString":"type(contract GnosisSafe)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"391:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_GnosisSafe_$2072","typeString":"contract GnosisSafe"}},"nodeType":"VariableDeclarationStatement","src":"373:43:5"},{"expression":{"arguments":[{"id":1610,"name":"addOwnerModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"444:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1607,"name":"safe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"426:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_GnosisSafe_$2072","typeString":"contract GnosisSafe"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"431:12:5","memberName":"enableModule","nodeType":"MemberAccess","referencedDeclaration":2071,"src":"426:17:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"426:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1612,"nodeType":"ExpressionStatement","src":"426:33:5"},{"expression":{"arguments":[{"id":1616,"name":"removeOwnerModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"487:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1613,"name":"safe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"469:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_GnosisSafe_$2072","typeString":"contract GnosisSafe"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"474:12:5","memberName":"enableModule","nodeType":"MemberAccess","referencedDeclaration":2071,"src":"469:17:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"469:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1618,"nodeType":"ExpressionStatement","src":"469:36:5"}]},"functionSelector":"ba0bba40","id":1620,"implemented":true,"kind":"function","modifiers":[],"name":"setup","nameLocation":"348:5:5","nodeType":"FunctionDefinition","parameters":{"id":1595,"nodeType":"ParameterList","parameters":[],"src":"353:2:5"},"returnParameters":{"id":1596,"nodeType":"ParameterList","parameters":[],"src":"363:0:5"},"scope":1621,"src":"339:173:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1622,"src":"66:448:5","usedErrors":[]}],"src":"0:515:5"},"id":5},"contracts/TokenAuthenticated.sol":{"ast":{"absolutePath":"contracts/TokenAuthenticated.sol","exportedSymbols":{"ECDSA":[535],"Math":[1400],"Strings":[174],"TokenAuthenticated":[1800]},"id":1801,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1623,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"33:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":1624,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1801,"sourceUnit":536,"src":"59:62:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":1625,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1801,"sourceUnit":175,"src":"122:51:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"TokenAuthenticated","contractDependencies":[],"contractKind":"contract","documentation":{"id":1626,"nodeType":"StructuredDocumentation","src":"209:102:6","text":" @title TokenAuthenticated\n @dev allow a user to authenticate with a signed english token."},"fullyImplemented":true,"id":1800,"linearizedBaseContracts":[1800],"name":"TokenAuthenticated","nameLocation":"321:18:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"bebc479c","id":1628,"mutability":"mutable","name":"STATEMENT","nameLocation":"360:9:6","nodeType":"VariableDeclaration","scope":1800,"src":"346:23:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1627,"name":"string","nodeType":"ElementaryTypeName","src":"346:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"cb2e6043","id":1631,"mutability":"mutable","name":"lengthOfToken","nameLocation":"391:13:6","nodeType":"VariableDeclaration","scope":1800,"src":"376:33:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1629,"name":"uint256","nodeType":"ElementaryTypeName","src":"376:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3135","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"407:2:6","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"visibility":"public"},{"canonicalName":"TokenAuthenticated.TokenRequest","id":1638,"members":[{"constant":false,"id":1633,"mutability":"mutable","name":"owner","nameLocation":"461:5:6","nodeType":"VariableDeclaration","scope":1638,"src":"453:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"453:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"device","nameLocation":"484:6:6","nodeType":"VariableDeclaration","scope":1638,"src":"476:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1634,"name":"address","nodeType":"ElementaryTypeName","src":"476:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1637,"mutability":"mutable","name":"issuedAt","nameLocation":"508:8:6","nodeType":"VariableDeclaration","scope":1638,"src":"500:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"500:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TokenRequest","nameLocation":"430:12:6","nodeType":"StructDefinition","scope":1800,"src":"423:100:6","visibility":"public"},{"body":{"id":1647,"nodeType":"Block","src":"567:39:6","statements":[{"expression":{"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1643,"name":"STATEMENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"577:9:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1644,"name":"_statement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"589:10:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"577:22:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1646,"nodeType":"ExpressionStatement","src":"577:22:6"}]},"id":1648,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"_statement","nameLocation":"555:10:6","nodeType":"VariableDeclaration","scope":1648,"src":"541:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1639,"name":"string","nodeType":"ElementaryTypeName","src":"541:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"540:26:6"},"returnParameters":{"id":1642,"nodeType":"ParameterList","parameters":[],"src":"567:0:6"},"scope":1800,"src":"529:77:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1657,"nodeType":"Block","src":"675:41:6","statements":[{"expression":{"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1653,"name":"STATEMENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"685:9:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1654,"name":"newStatement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"697:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"685:24:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1656,"nodeType":"ExpressionStatement","src":"685:24:6"}]},"id":1658,"implemented":true,"kind":"function","modifiers":[],"name":"_updateStatement","nameLocation":"621:16:6","nodeType":"FunctionDefinition","parameters":{"id":1651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1650,"mutability":"mutable","name":"newStatement","nameLocation":"652:12:6","nodeType":"VariableDeclaration","scope":1658,"src":"638:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1649,"name":"string","nodeType":"ElementaryTypeName","src":"638:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"637:28:6"},"returnParameters":{"id":1652,"nodeType":"ParameterList","parameters":[],"src":"675:0:6"},"scope":1800,"src":"612:104:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1667,"nodeType":"Block","src":"780:42:6","statements":[{"expression":{"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1663,"name":"lengthOfToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"790:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1664,"name":"newLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"806:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"790:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1666,"nodeType":"ExpressionStatement","src":"790:25:6"}]},"id":1668,"implemented":true,"kind":"function","modifiers":[],"name":"_updateLengthOfToken","nameLocation":"731:20:6","nodeType":"FunctionDefinition","parameters":{"id":1661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"newLength","nameLocation":"760:9:6","nodeType":"VariableDeclaration","scope":1668,"src":"752:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"752:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"751:19:6"},"returnParameters":{"id":1662,"nodeType":"ParameterList","parameters":[],"src":"780:0:6"},"scope":1800,"src":"722:100:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1713,"nodeType":"Block","src":"958:323:6","statements":[{"assignments":[1679],"declarations":[{"constant":false,"id":1679,"mutability":"mutable","name":"msgHash","nameLocation":"976:7:6","nodeType":"VariableDeclaration","scope":1713,"src":"968:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"968:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1683,"initialValue":{"arguments":[{"id":1681,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"999:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}],"id":1680,"name":"hashForToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"986:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_TokenRequest_$1638_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (struct TokenAuthenticated.TokenRequest calldata) view returns (bytes32)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"986:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"968:39:6"},{"assignments":[1685],"declarations":[{"constant":false,"id":1685,"mutability":"mutable","name":"signer","nameLocation":"1025:6:6","nodeType":"VariableDeclaration","scope":1713,"src":"1017:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1684,"name":"address","nodeType":"ElementaryTypeName","src":"1017:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1691,"initialValue":{"arguments":[{"id":1688,"name":"msgHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1048:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1689,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"1057:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1686,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"1034:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$535_$","typeString":"type(library ECDSA)"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:7:6","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":301,"src":"1034:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1034:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1017:50:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1693,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"1085:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1694,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"1095:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1103:5:6","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"1095:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1085:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c6964207369676e6174757265","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1110:19:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a","typeString":"literal_string \"invalid signature\""},"value":"invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a","typeString":"literal_string \"invalid signature\""}],"id":1692,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1077:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1077:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1699,"nodeType":"ExpressionStatement","src":"1077:53:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1701,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"1161:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1169:8:6","memberName":"issuedAt","nodeType":"MemberAccess","referencedDeclaration":1637,"src":"1161:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1703,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1181:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1187:6:6","memberName":"number","nodeType":"MemberAccess","src":"1181:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1705,"name":"lengthOfToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"1196:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1181:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1161:48:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265717565737420697320746f6f206f6c64","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1223:20:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5","typeString":"literal_string \"Request is too old\""},"value":"Request is too old"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5","typeString":"literal_string \"Request is too old\""}],"id":1700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1140:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1140:113:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1710,"nodeType":"ExpressionStatement","src":"1140:113:6"},{"expression":{"hexValue":"74727565","id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1270:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1677,"id":1712,"nodeType":"Return","src":"1263:11:6"}]},"id":1714,"implemented":true,"kind":"function","modifiers":[],"name":"authenticate","nameLocation":"837:12:6","nodeType":"FunctionDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"request","nameLocation":"881:7:6","nodeType":"VariableDeclaration","scope":1714,"src":"859:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest"},"typeName":{"id":1670,"nodeType":"UserDefinedTypeName","pathNode":{"id":1669,"name":"TokenRequest","nameLocations":["859:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1638,"src":"859:12:6"},"referencedDeclaration":1638,"src":"859:12:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_storage_ptr","typeString":"struct TokenAuthenticated.TokenRequest"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"signature","nameLocation":"913:9:6","nodeType":"VariableDeclaration","scope":1714,"src":"898:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1672,"name":"bytes","nodeType":"ElementaryTypeName","src":"898:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:79:6"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1714,"src":"952:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1675,"name":"bool","nodeType":"ElementaryTypeName","src":"952:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"951:6:6"},"scope":1800,"src":"828:453:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1743,"nodeType":"Block","src":"1433:194:6","statements":[{"expression":{"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1726,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"1443:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_memory_ptr","typeString":"struct TokenAuthenticated.TokenRequest memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1728,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"1487:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1729,"name":"device","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"1514:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1730,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1544:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1550:6:6","memberName":"number","nodeType":"MemberAccess","src":"1544:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1559:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1544:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1727,"name":"TokenRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"1453:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TokenRequest_$1638_storage_ptr_$","typeString":"type(struct TokenAuthenticated.TokenRequest storage pointer)"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1480:5:6","1506:6:6","1534:8:6"],"names":["owner","device","issuedAt"],"nodeType":"FunctionCall","src":"1453:118:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_memory_ptr","typeString":"struct TokenAuthenticated.TokenRequest memory"}},"src":"1443:128:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_memory_ptr","typeString":"struct TokenAuthenticated.TokenRequest memory"}},"id":1736,"nodeType":"ExpressionStatement","src":"1443:128:6"},{"expression":{"components":[{"id":1737,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"1589:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_memory_ptr","typeString":"struct TokenAuthenticated.TokenRequest memory"}},{"arguments":[{"id":1739,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"1611:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_memory_ptr","typeString":"struct TokenAuthenticated.TokenRequest memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TokenRequest_$1638_memory_ptr","typeString":"struct TokenAuthenticated.TokenRequest memory"}],"id":1738,"name":"stringToSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"1598:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_TokenRequest_$1638_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (struct TokenAuthenticated.TokenRequest memory) view returns (string memory)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1598:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":1741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1588:32:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_TokenRequest_$1638_memory_ptr_$_t_string_memory_ptr_$","typeString":"tuple(struct TokenAuthenticated.TokenRequest memory,string memory)"}},"functionReturnParameters":1725,"id":1742,"nodeType":"Return","src":"1581:39:6"}]},"functionSelector":"b6ad16a8","id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"createTokenRequest","nameLocation":"1296:18:6","nodeType":"FunctionDefinition","parameters":{"id":1719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"owner","nameLocation":"1332:5:6","nodeType":"VariableDeclaration","scope":1744,"src":"1324:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"1324:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1718,"mutability":"mutable","name":"device","nameLocation":"1355:6:6","nodeType":"VariableDeclaration","scope":1744,"src":"1347:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1717,"name":"address","nodeType":"ElementaryTypeName","src":"1347:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1314:53:6"},"returnParameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1722,"mutability":"mutable","name":"request","nameLocation":"1409:7:6","nodeType":"VariableDeclaration","scope":1744,"src":"1389:27:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_memory_ptr","typeString":"struct TokenAuthenticated.TokenRequest"},"typeName":{"id":1721,"nodeType":"UserDefinedTypeName","pathNode":{"id":1720,"name":"TokenRequest","nameLocations":["1389:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1638,"src":"1389:12:6"},"referencedDeclaration":1638,"src":"1389:12:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_storage_ptr","typeString":"struct TokenAuthenticated.TokenRequest"}},"visibility":"internal"},{"constant":false,"id":1724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1744,"src":"1418:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1723,"name":"string","nodeType":"ElementaryTypeName","src":"1418:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1388:44:6"},"scope":1800,"src":"1287:340:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1779,"nodeType":"Block","src":"1955:305:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1757,"name":"STATEMENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"2009:9:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"0a0a4d653a20","id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2032:10:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262","typeString":"literal_string hex\"0a0a4d653a20\""},"value":"\n\nMe: "},{"arguments":[{"expression":{"id":1761,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2076:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_memory_ptr","typeString":"struct TokenAuthenticated.TokenRequest memory"}},"id":1762,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2084:5:6","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"2076:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1759,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"2056:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$174_$","typeString":"type(library Strings)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2064:11:6","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":173,"src":"2056:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2056:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"0a4465766963653a20","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2104:12:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60","typeString":"literal_string hex\"0a4465766963653a20\""},"value":"\nDevice: "},{"arguments":[{"expression":{"id":1767,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2150:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_memory_ptr","typeString":"struct TokenAuthenticated.TokenRequest memory"}},"id":1768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2158:6:6","memberName":"device","nodeType":"MemberAccess","referencedDeclaration":1635,"src":"2150:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1765,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"2130:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$174_$","typeString":"type(library Strings)"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2138:11:6","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":173,"src":"2130:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2130:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"0a4973737565642061743a20","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2179:15:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb","typeString":"literal_string hex\"0a4973737565642061743a20\""},"value":"\nIssued at: "},{"arguments":[{"expression":{"id":1773,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2225:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_memory_ptr","typeString":"struct TokenAuthenticated.TokenRequest memory"}},"id":1774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2233:8:6","memberName":"issuedAt","nodeType":"MemberAccess","referencedDeclaration":1637,"src":"2225:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1771,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"2208:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$174_$","typeString":"type(library Strings)"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2216:8:6","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":57,"src":"2208:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2208:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262","typeString":"literal_string hex\"0a0a4d653a20\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60","typeString":"literal_string hex\"0a4465766963653a20\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb","typeString":"literal_string hex\"0a4973737565642061743a20\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1755,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1979:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1983:12:6","memberName":"encodePacked","nodeType":"MemberAccess","src":"1979:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1979:273:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1972:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1753,"name":"string","nodeType":"ElementaryTypeName","src":"1972:6:6","typeDescriptions":{}}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1972:281:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1752,"id":1778,"nodeType":"Return","src":"1965:288:6"}]},"documentation":{"id":1745,"nodeType":"StructuredDocumentation","src":"1634:213:6","text":" @dev Returns the string to sign of the provided WalletCreateRequest.\n @param request The WalletCreateRequest struct containing the owner address, device address, and issuedAt block number."},"id":1780,"implemented":true,"kind":"function","modifiers":[],"name":"stringToSign","nameLocation":"1861:12:6","nodeType":"FunctionDefinition","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1748,"mutability":"mutable","name":"request","nameLocation":"1903:7:6","nodeType":"VariableDeclaration","scope":1780,"src":"1883:27:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_memory_ptr","typeString":"struct TokenAuthenticated.TokenRequest"},"typeName":{"id":1747,"nodeType":"UserDefinedTypeName","pathNode":{"id":1746,"name":"TokenRequest","nameLocations":["1883:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1638,"src":"1883:12:6"},"referencedDeclaration":1638,"src":"1883:12:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_storage_ptr","typeString":"struct TokenAuthenticated.TokenRequest"}},"visibility":"internal"}],"src":"1873:43:6"},"returnParameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1780,"src":"1940:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1750,"name":"string","nodeType":"ElementaryTypeName","src":"1940:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1939:15:6"},"scope":1800,"src":"1852:408:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1798,"nodeType":"Block","src":"2365:82:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1793,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"2430:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}],"id":1792,"name":"stringToSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"2417:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_TokenRequest_$1638_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (struct TokenAuthenticated.TokenRequest memory) view returns (string memory)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2417:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2411:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1790,"name":"bytes","nodeType":"ElementaryTypeName","src":"2411:5:6","typeDescriptions":{}}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2411:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1788,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"2382:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$535_$","typeString":"type(library ECDSA)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2388:22:6","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":514,"src":"2382:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2382:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1787,"id":1797,"nodeType":"Return","src":"2375:65:6"}]},"id":1799,"implemented":true,"kind":"function","modifiers":[],"name":"hashForToken","nameLocation":"2275:12:6","nodeType":"FunctionDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"request","nameLocation":"2319:7:6","nodeType":"VariableDeclaration","scope":1799,"src":"2297:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest"},"typeName":{"id":1782,"nodeType":"UserDefinedTypeName","pathNode":{"id":1781,"name":"TokenRequest","nameLocations":["2297:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1638,"src":"2297:12:6"},"referencedDeclaration":1638,"src":"2297:12:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_storage_ptr","typeString":"struct TokenAuthenticated.TokenRequest"}},"visibility":"internal"}],"src":"2287:45:6"},"returnParameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1799,"src":"2356:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2356:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2355:9:6"},"scope":1800,"src":"2266:181:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1801,"src":"312:2137:6","usedErrors":[]}],"src":"33:2416:6"},"id":6},"contracts/WalletDeployer.sol":{"ast":{"absolutePath":"contracts/WalletDeployer.sol","exportedSymbols":{"ECDSA":[535],"IProxyFactory":[1815],"Math":[1400],"Strings":[174],"TokenAuthenticated":[1800],"WalletDeployer":[2027]},"id":2028,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1802,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"33:24:7"},{"absolutePath":"contracts/TokenAuthenticated.sol","file":"./TokenAuthenticated.sol","id":1803,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2028,"sourceUnit":1801,"src":"59:34:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IProxyFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1815,"linearizedBaseContracts":[1815],"name":"IProxyFactory","nameLocation":"139:13:7","nodeType":"ContractDefinition","nodes":[{"functionSelector":"1688f0b9","id":1814,"implemented":false,"kind":"function","modifiers":[],"name":"createProxyWithNonce","nameLocation":"168:20:7","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"_mastercopy","nameLocation":"206:11:7","nodeType":"VariableDeclaration","scope":1814,"src":"198:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1804,"name":"address","nodeType":"ElementaryTypeName","src":"198:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1807,"mutability":"mutable","name":"initializer","nameLocation":"240:11:7","nodeType":"VariableDeclaration","scope":1814,"src":"227:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1806,"name":"bytes","nodeType":"ElementaryTypeName","src":"227:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1809,"mutability":"mutable","name":"saltNonce","nameLocation":"269:9:7","nodeType":"VariableDeclaration","scope":1814,"src":"261:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1808,"name":"uint256","nodeType":"ElementaryTypeName","src":"261:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"188:96:7"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"proxy","nameLocation":"311:5:7","nodeType":"VariableDeclaration","scope":1814,"src":"303:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1811,"name":"address","nodeType":"ElementaryTypeName","src":"303:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"302:15:7"},"scope":1815,"src":"159:159:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2028,"src":"129:191:7","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":1817,"name":"TokenAuthenticated","nameLocations":["650:18:7"],"nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"650:18:7"},"id":1818,"nodeType":"InheritanceSpecifier","src":"650:18:7"}],"canonicalName":"WalletDeployer","contractDependencies":[],"contractKind":"contract","documentation":{"id":1816,"nodeType":"StructuredDocumentation","src":"322:300:7","text":" @title WalletDeployer\n @dev A contract that allows a user to create a Gnosis Safe wallet by signing an English message.\n      It sets up a a safe by calling the SafeStetup.sol contract which adds the correct modules and the TokenRequest\n      device and owner as owners to the safe. "},"fullyImplemented":true,"id":2027,"linearizedBaseContracts":[2027,1800],"name":"WalletDeployer","nameLocation":"632:14:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"85e1f4d0","id":1820,"mutability":"mutable","name":"CHAIN_ID","nameLocation":"689:8:7","nodeType":"VariableDeclaration","scope":2027,"src":"675:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1819,"name":"string","nodeType":"ElementaryTypeName","src":"675:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"id":1822,"mutability":"immutable","name":"_gnosisSafeContract","nameLocation":"730:19:7","nodeType":"VariableDeclaration","scope":2027,"src":"704:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"704:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":1824,"mutability":"immutable","name":"_gnosisSafeProxyFactory","nameLocation":"781:23:7","nodeType":"VariableDeclaration","scope":2027,"src":"755:49:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1823,"name":"address","nodeType":"ElementaryTypeName","src":"755:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":1826,"mutability":"immutable","name":"_defaultFallackhandler","nameLocation":"836:22:7","nodeType":"VariableDeclaration","scope":2027,"src":"810:48:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"810:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":1828,"mutability":"immutable","name":"_setupHandler","nameLocation":"891:13:7","nodeType":"VariableDeclaration","scope":2027,"src":"865:39:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"865:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"id":1836,"mutability":"constant","name":"SETUP_DATA","nameLocation":"935:10:7","nodeType":"VariableDeclaration","scope":2027,"src":"911:65:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1829,"name":"bytes4","nodeType":"ElementaryTypeName","src":"911:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"arguments":[{"hexValue":"73657475702829","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"965:9:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba0bba4095ecad0767dabb900dd55e5814c8416ec02c5ddd7e9946fb3c22df0f","typeString":"literal_string \"setup()\""},"value":"setup()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ba0bba4095ecad0767dabb900dd55e5814c8416ec02c5ddd7e9946fb3c22df0f","typeString":"literal_string \"setup()\""}],"id":1832,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"955:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"948:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1830,"name":"bytes4","nodeType":"ElementaryTypeName","src":"948:6:7","typeDescriptions":{}}},"id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"948:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"functionSelector":"5e619a4a","id":1840,"mutability":"mutable","name":"ownerToSafe","nameLocation":"1060:11:7","nodeType":"VariableDeclaration","scope":2027,"src":"1025:46:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1839,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1837,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1025:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1838,"name":"address","nodeType":"ElementaryTypeName","src":"1044:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"06634e88","id":1844,"mutability":"mutable","name":"safeToOwner","nameLocation":"1112:11:7","nodeType":"VariableDeclaration","scope":2027,"src":"1077:46:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1843,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1841,"name":"address","nodeType":"ElementaryTypeName","src":"1085:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1077:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1842,"name":"address","nodeType":"ElementaryTypeName","src":"1096:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"body":{"id":1882,"nodeType":"Block","src":"1409:262:7","statements":[{"expression":{"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1858,"name":"CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"1419:8:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1861,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1447:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1453:7:7","memberName":"chainid","nodeType":"MemberAccess","src":"1447:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1859,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"1430:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$174_$","typeString":"type(library Strings)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1438:8:7","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":57,"src":"1430:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1419:42:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1865,"nodeType":"ExpressionStatement","src":"1419:42:7"},{"expression":{"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1866,"name":"_gnosisSafeContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"1471:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1867,"name":"gnosisSafeContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"1493:18:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1471:40:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1869,"nodeType":"ExpressionStatement","src":"1471:40:7"},{"expression":{"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1870,"name":"_gnosisSafeProxyFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"1521:23:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1871,"name":"gnosisSafeProxyFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"1547:22:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1521:48:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1873,"nodeType":"ExpressionStatement","src":"1521:48:7"},{"expression":{"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1874,"name":"_defaultFallackhandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"1579:22:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1875,"name":"defaultFallbackHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"1604:22:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1579:47:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1877,"nodeType":"ExpressionStatement","src":"1579:47:7"},{"expression":{"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1878,"name":"_setupHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"1636:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1879,"name":"setupHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"1652:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1636:28:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1881,"nodeType":"ExpressionStatement","src":"1636:28:7"}]},"id":1883,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4920617574686f72697a6520746869732064657669636520746f2073656e64207472616e73616374696f6e73206f6e206d7920626568616c662e","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1334:60:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a7f8dc296605a91e2494b19fe37347ec15a2b43ea8d6a517cb64ff599fc1206c","typeString":"literal_string \"I authorize this device to send transactions on my behalf.\""},"value":"I authorize this device to send transactions on my behalf."}],"id":1856,"kind":"baseConstructorSpecifier","modifierName":{"id":1854,"name":"TokenAuthenticated","nameLocations":["1302:18:7"],"nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"1302:18:7"},"nodeType":"ModifierInvocation","src":"1302:102:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"gnosisSafeContract","nameLocation":"1159:18:7","nodeType":"VariableDeclaration","scope":1883,"src":"1151:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1845,"name":"address","nodeType":"ElementaryTypeName","src":"1151:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"gnosisSafeProxyFactory","nameLocation":"1195:22:7","nodeType":"VariableDeclaration","scope":1883,"src":"1187:30:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1847,"name":"address","nodeType":"ElementaryTypeName","src":"1187:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"defaultFallbackHandler","nameLocation":"1235:22:7","nodeType":"VariableDeclaration","scope":1883,"src":"1227:30:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"setupHandler","nameLocation":"1275:12:7","nodeType":"VariableDeclaration","scope":1883,"src":"1267:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1851,"name":"address","nodeType":"ElementaryTypeName","src":"1267:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1141:152:7"},"returnParameters":{"id":1857,"nodeType":"ParameterList","parameters":[],"src":"1409:0:7"},"scope":2027,"src":"1130:541:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2025,"nodeType":"Block","src":"2105:1600:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1893,"name":"ownerToSafe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"2136:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1896,"indexExpression":{"expression":{"id":1894,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"2148:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2156:5:7","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"2148:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2136:26:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2174:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2166:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1897,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:7","typeDescriptions":{}}},"id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2166:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2136:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666520616c72656164792065786973747320666f72206f776e6572","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2190:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_2b169aa240367a5e3346a41789403357443f05db737a1f62bf4f351d642c4775","typeString":"literal_string \"Safe already exists for owner\""},"value":"Safe already exists for owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2b169aa240367a5e3346a41789403357443f05db737a1f62bf4f351d642c4775","typeString":"literal_string \"Safe already exists for owner\""}],"id":1892,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2115:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2115:116:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1904,"nodeType":"ExpressionStatement","src":"2115:116:7"},{"expression":{"arguments":[{"arguments":[{"id":1907,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"2262:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}},{"id":1908,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"2271:9:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1906,"name":"authenticate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"2249:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_TokenRequest_$1638_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (struct TokenAuthenticated.TokenRequest calldata,bytes calldata) view returns (bool)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1905,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2241:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2241:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1911,"nodeType":"ExpressionStatement","src":"2241:41:7"},{"assignments":[1916],"declarations":[{"constant":false,"id":1916,"mutability":"mutable","name":"owners","nameLocation":"2444:6:7","nodeType":"VariableDeclaration","scope":2025,"src":"2427:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1914,"name":"address","nodeType":"ElementaryTypeName","src":"2427:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1915,"nodeType":"ArrayTypeName","src":"2427:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1917,"nodeType":"VariableDeclarationStatement","src":"2427:23:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1918,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"2464:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2472:6:7","memberName":"device","nodeType":"MemberAccess","referencedDeclaration":1635,"src":"2464:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2490:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2482:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1920,"name":"address","nodeType":"ElementaryTypeName","src":"2482:7:7","typeDescriptions":{}}},"id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2482:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2464:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1963,"nodeType":"Block","src":"2589:129:7","statements":[{"expression":{"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1941,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"2603:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"32","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2626:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":1944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2612:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1942,"name":"address","nodeType":"ElementaryTypeName","src":"2616:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1943,"nodeType":"ArrayTypeName","src":"2616:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2612:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"2603:25:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1948,"nodeType":"ExpressionStatement","src":"2603:25:7"},{"expression":{"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1949,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"2642:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1951,"indexExpression":{"hexValue":"30","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2649:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2642:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1952,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"2654:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2662:5:7","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"2654:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2642:25:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1955,"nodeType":"ExpressionStatement","src":"2642:25:7"},{"expression":{"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1956,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"2681:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1958,"indexExpression":{"hexValue":"31","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2681:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1959,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"2693:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2701:6:7","memberName":"device","nodeType":"MemberAccess","referencedDeclaration":1635,"src":"2693:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2681:26:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1962,"nodeType":"ExpressionStatement","src":"2681:26:7"}]},"id":1964,"nodeType":"IfStatement","src":"2460:258:7","trueBody":{"id":1940,"nodeType":"Block","src":"2494:89:7","statements":[{"expression":{"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1925,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"2508:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2531:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2517:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1926,"name":"address","nodeType":"ElementaryTypeName","src":"2521:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1927,"nodeType":"ArrayTypeName","src":"2521:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"2508:25:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1932,"nodeType":"ExpressionStatement","src":"2508:25:7"},{"expression":{"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1933,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"2547:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1935,"indexExpression":{"hexValue":"30","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2554:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2547:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1936,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"2559:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2567:5:7","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"2559:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2547:25:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1939,"nodeType":"ExpressionStatement","src":"2547:25:7"}]}},{"assignments":[1966],"declarations":[{"constant":false,"id":1966,"mutability":"mutable","name":"initializer","nameLocation":"2741:11:7","nodeType":"VariableDeclaration","scope":2025,"src":"2728:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1965,"name":"bytes","nodeType":"ElementaryTypeName","src":"2728:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1998,"initialValue":{"arguments":[{"hexValue":"736574757028616464726573735b5d2c75696e743235362c616464726573732c62797465732c616464726573732c616464726573732c75696e743235362c6164647265737329","id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2792:72:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b63e800d34f56a9238e5b86a8547a23865164bec371bede606e899182da118bf","typeString":"literal_string \"setup(address[],uint256,address,bytes,address,address,uint256,address)\""},"value":"setup(address[],uint256,address,bytes,address,address,uint256,address)"},{"id":1970,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"2878:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"arguments":[{"hexValue":"31","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2942:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"2942:7:7","typeDescriptions":{}}},"id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2942:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1975,"name":"_setupHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"3028:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"73657475702829","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3103:9:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba0bba4095ecad0767dabb900dd55e5814c8416ec02c5ddd7e9946fb3c22df0f","typeString":"literal_string \"setup()\""},"value":"setup()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ba0bba4095ecad0767dabb900dd55e5814c8416ec02c5ddd7e9946fb3c22df0f","typeString":"literal_string \"setup()\""}],"expression":{"id":1976,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3079:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3083:19:7","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"3079:23:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1980,"name":"_defaultFallackhandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"3148:22:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3228:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3220:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"3220:7:7","typeDescriptions":{}}},"id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3220:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3285:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3277:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1985,"name":"address","nodeType":"ElementaryTypeName","src":"3277:7:7","typeDescriptions":{}}},"id":1988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3277:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3342:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3334:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1989,"name":"uint256","nodeType":"ElementaryTypeName","src":"3334:7:7","typeDescriptions":{}}},"id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3334:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3397:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3389:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1993,"name":"address","nodeType":"ElementaryTypeName","src":"3389:7:7","typeDescriptions":{}}},"id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3389:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b63e800d34f56a9238e5b86a8547a23865164bec371bede606e899182da118bf","typeString":"literal_string \"setup(address[],uint256,address,bytes,address,address,uint256,address)\""},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1967,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2755:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2759:19:7","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"2755:23:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2755:694:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2728:721:7"},{"assignments":[2000],"declarations":[{"constant":false,"id":2000,"mutability":"mutable","name":"proxyAddr","nameLocation":"3468:9:7","nodeType":"VariableDeclaration","scope":2025,"src":"3460:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1999,"name":"address","nodeType":"ElementaryTypeName","src":"3460:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2010,"initialValue":{"arguments":[{"id":2005,"name":"_gnosisSafeContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"3553:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2006,"name":"initializer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"3574:11:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":2007,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3587:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3593:7:7","memberName":"chainid","nodeType":"MemberAccess","src":"3587:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2002,"name":"_gnosisSafeProxyFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"3494:23:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2001,"name":"IProxyFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"3480:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IProxyFactory_$1815_$","typeString":"type(contract IProxyFactory)"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3480:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IProxyFactory_$1815","typeString":"contract IProxyFactory"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3532:20:7","memberName":"createProxyWithNonce","nodeType":"MemberAccess","referencedDeclaration":1814,"src":"3480:72:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$","typeString":"function (address,bytes memory,uint256) external returns (address)"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3480:121:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3460:141:7"},{"expression":{"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2011,"name":"ownerToSafe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"3612:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2014,"indexExpression":{"expression":{"id":2012,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"3624:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3632:5:7","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"3624:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3612:26:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2015,"name":"proxyAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"3641:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3612:38:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2017,"nodeType":"ExpressionStatement","src":"3612:38:7"},{"expression":{"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2018,"name":"safeToOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"3660:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2020,"indexExpression":{"id":2019,"name":"proxyAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"3672:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3660:22:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2021,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"3685:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest calldata"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3693:5:7","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"3685:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3660:38:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2024,"nodeType":"ExpressionStatement","src":"3660:38:7"}]},"documentation":{"id":1884,"nodeType":"StructuredDocumentation","src":"1677:317:7","text":" @dev Creates a Gnosis Safe wallet using the provided WalletCreateRequest and signature.\n @param request The WalletCreateRequest struct containing the owner address, first device address, and issuedAt block number.\n @param signature The signature signed by the owner to verify ownership."},"functionSelector":"24f669b4","id":2026,"implemented":true,"kind":"function","modifiers":[],"name":"createSafe","nameLocation":"2008:10:7","nodeType":"FunctionDefinition","parameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"request","nameLocation":"2050:7:7","nodeType":"VariableDeclaration","scope":2026,"src":"2028:29:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_calldata_ptr","typeString":"struct TokenAuthenticated.TokenRequest"},"typeName":{"id":1886,"nodeType":"UserDefinedTypeName","pathNode":{"id":1885,"name":"TokenRequest","nameLocations":["2028:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":1638,"src":"2028:12:7"},"referencedDeclaration":1638,"src":"2028:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_TokenRequest_$1638_storage_ptr","typeString":"struct TokenAuthenticated.TokenRequest"}},"visibility":"internal"},{"constant":false,"id":1889,"mutability":"mutable","name":"signature","nameLocation":"2082:9:7","nodeType":"VariableDeclaration","scope":2026,"src":"2067:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1888,"name":"bytes","nodeType":"ElementaryTypeName","src":"2067:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2018:79:7"},"returnParameters":{"id":1891,"nodeType":"ParameterList","parameters":[],"src":"2105:0:7"},"scope":2027,"src":"1999:1706:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2028,"src":"623:3084:7","usedErrors":[]}],"src":"33:3675:7"},"id":7},"contracts/interfaces/IGnosisSafe.sol":{"ast":{"absolutePath":"contracts/interfaces/IGnosisSafe.sol","exportedSymbols":{"Enum":[2033],"GnosisSafe":[2072]},"id":2073,"nodeType":"SourceUnit","nodes":[{"id":2029,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"0:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Enum","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2033,"linearizedBaseContracts":[2033],"name":"Enum","nameLocation":"35:4:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Enum.Operation","id":2032,"members":[{"id":2030,"name":"Call","nameLocation":"71:4:8","nodeType":"EnumValue","src":"71:4:8"},{"id":2031,"name":"DelegateCall","nameLocation":"85:12:8","nodeType":"EnumValue","src":"85:12:8"}],"name":"Operation","nameLocation":"51:9:8","nodeType":"EnumDefinition","src":"46:57:8"}],"scope":2073,"src":"26:79:8","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"GnosisSafe","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2072,"linearizedBaseContracts":[2072],"name":"GnosisSafe","nameLocation":"117:10:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2034,"nodeType":"StructuredDocumentation","src":"134:325:8","text":"@dev Allows a Module to execute a Safe transaction without any further confirmations.\n @param to Destination address of module transaction.\n @param value Ether value of module transaction.\n @param data Data payload of module transaction.\n @param operation Operation type of module transaction."},"functionSelector":"468721a7","id":2048,"implemented":false,"kind":"function","modifiers":[],"name":"execTransactionFromModule","nameLocation":"473:25:8","nodeType":"FunctionDefinition","parameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"to","nameLocation":"516:2:8","nodeType":"VariableDeclaration","scope":2048,"src":"508:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2035,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2038,"mutability":"mutable","name":"value","nameLocation":"536:5:8","nodeType":"VariableDeclaration","scope":2048,"src":"528:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"528:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2040,"mutability":"mutable","name":"data","nameLocation":"566:4:8","nodeType":"VariableDeclaration","scope":2048,"src":"551:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2039,"name":"bytes","nodeType":"ElementaryTypeName","src":"551:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2043,"mutability":"mutable","name":"operation","nameLocation":"595:9:8","nodeType":"VariableDeclaration","scope":2048,"src":"580:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$2032","typeString":"enum Enum.Operation"},"typeName":{"id":2042,"nodeType":"UserDefinedTypeName","pathNode":{"id":2041,"name":"Enum.Operation","nameLocations":["580:4:8","585:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":2032,"src":"580:14:8"},"referencedDeclaration":2032,"src":"580:14:8","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$2032","typeString":"enum Enum.Operation"}},"visibility":"internal"}],"src":"498:112:8"},"returnParameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"success","nameLocation":"634:7:8","nodeType":"VariableDeclaration","scope":2048,"src":"629:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2045,"name":"bool","nodeType":"ElementaryTypeName","src":"629:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"628:14:8"},"scope":2072,"src":"464:179:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e75235b8","id":2053,"implemented":false,"kind":"function","modifiers":[],"name":"getThreshold","nameLocation":"658:12:8","nodeType":"FunctionDefinition","parameters":{"id":2049,"nodeType":"ParameterList","parameters":[],"src":"670:2:8"},"returnParameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2053,"src":"696:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2050,"name":"uint256","nodeType":"ElementaryTypeName","src":"696:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"695:9:8"},"scope":2072,"src":"649:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a0e67e2b","id":2059,"implemented":false,"kind":"function","modifiers":[],"name":"getOwners","nameLocation":"720:9:8","nodeType":"FunctionDefinition","parameters":{"id":2054,"nodeType":"ParameterList","parameters":[],"src":"729:2:8"},"returnParameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2059,"src":"755:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2055,"name":"address","nodeType":"ElementaryTypeName","src":"755:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2056,"nodeType":"ArrayTypeName","src":"755:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"754:18:8"},"scope":2072,"src":"711:62:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"2f54bf6e","id":2066,"implemented":false,"kind":"function","modifiers":[],"name":"isOwner","nameLocation":"788:7:8","nodeType":"FunctionDefinition","parameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2061,"mutability":"mutable","name":"owner","nameLocation":"804:5:8","nodeType":"VariableDeclaration","scope":2066,"src":"796:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2060,"name":"address","nodeType":"ElementaryTypeName","src":"796:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"795:15:8"},"returnParameters":{"id":2065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2066,"src":"834:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2063,"name":"bool","nodeType":"ElementaryTypeName","src":"834:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"833:6:8"},"scope":2072,"src":"779:61:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"610b5925","id":2071,"implemented":false,"kind":"function","modifiers":[],"name":"enableModule","nameLocation":"855:12:8","nodeType":"FunctionDefinition","parameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"module","nameLocation":"876:6:8","nodeType":"VariableDeclaration","scope":2071,"src":"868:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2067,"name":"address","nodeType":"ElementaryTypeName","src":"868:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"867:16:8"},"returnParameters":{"id":2070,"nodeType":"ParameterList","parameters":[],"src":"892:0:8"},"scope":2072,"src":"846:47:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2073,"src":"107:788:8","usedErrors":[]}],"src":"0:896:8"},"id":8},"contracts/testOnly/TestContract.sol":{"ast":{"absolutePath":"contracts/testOnly/TestContract.sol","exportedSymbols":{"TestContract":[2105]},"id":2106,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2074,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"TestContract","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2105,"linearizedBaseContracts":[2105],"name":"TestContract","nameLocation":"67:12:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"fa597f1c4433c480d1ab0fd6340c62ceb83fe757f4ae45f844d898474af1bfa5","id":2080,"name":"EchoEvent","nameLocation":"93:9:9","nodeType":"EventDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"119:6:9","nodeType":"VariableDeclaration","scope":2080,"src":"103:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2075,"name":"address","nodeType":"ElementaryTypeName","src":"103:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2078,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"134:7:9","nodeType":"VariableDeclaration","scope":2080,"src":"127:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2077,"name":"string","nodeType":"ElementaryTypeName","src":"127:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"102:40:9"},"src":"87:56:9"},{"constant":false,"functionSelector":"6e018700","id":2083,"mutability":"mutable","name":"somethingToRead","nameLocation":"163:15:9","nodeType":"VariableDeclaration","scope":2105,"src":"149:44:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2081,"name":"string","nodeType":"ElementaryTypeName","src":"149:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"68656c6c6f576f726c64","id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"181:12:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_12b096b6159082166a8da265c1a00fd80f36fd02f81cc45f3d5e11f7ee38143a","typeString":"literal_string \"helloWorld\""},"value":"helloWorld"},"visibility":"public"},{"body":{"id":2103,"nodeType":"Block","src":"266:120:9","statements":[{"eventCall":{"arguments":[{"expression":{"id":2091,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"291:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"295:6:9","memberName":"sender","nodeType":"MemberAccess","src":"291:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2093,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"303:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2090,"name":"EchoEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"281:9:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"281:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2095,"nodeType":"EmitStatement","src":"276:35:9"},{"condition":{"id":2096,"name":"revertMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"325:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2102,"nodeType":"IfStatement","src":"321:59:9","trueBody":{"id":2101,"nodeType":"Block","src":"340:40:9","statements":[{"expression":{"arguments":[{"id":2098,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"361:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2097,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"354:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"354:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2100,"nodeType":"ExpressionStatement","src":"354:15:9"}]}}]},"functionSelector":"8d2f3ef5","id":2104,"implemented":true,"kind":"function","modifiers":[],"name":"echo","nameLocation":"209:4:9","nodeType":"FunctionDefinition","parameters":{"id":2088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"message","nameLocation":"228:7:9","nodeType":"VariableDeclaration","scope":2104,"src":"214:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2084,"name":"string","nodeType":"ElementaryTypeName","src":"214:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2087,"mutability":"mutable","name":"revertMessage","nameLocation":"242:13:9","nodeType":"VariableDeclaration","scope":2104,"src":"237:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2086,"name":"bool","nodeType":"ElementaryTypeName","src":"237:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"213:43:9"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[],"src":"266:0:9"},"scope":2105,"src":"200:186:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2106,"src":"58:330:9","usedErrors":[]}],"src":"32:357:9"},"id":9}},"contracts":{"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f6fcee844cee868fddc553ea683831fa0f88e7627b0f1ed53b85758ca9e079a64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH16 0xCEE844CEE868FDDC553EA683831FA0F8 DUP15 PUSH23 0x27B0F1ED53B85758CA9E079A64736F6C63430008130033 ","sourceMap":"188:2065:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f6fcee844cee868fddc553ea683831fa0f88e7627b0f1ed53b85758ca9e079a64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH16 0xCEE844CEE868FDDC553EA683831FA0F8 DUP15 PUSH23 0x27B0F1ED53B85758CA9E079A64736F6C63430008130033 ","sourceMap":"188:2065:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"devdoc":{"details":"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220626297f92319ab765fc10da58dc547990232a88d8350755c83d2a6e841525c8064736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x6297F9 0x23 NOT 0xAB PUSH23 0x5FC10DA58DC547990232A88D8350755C83D2A6E841525C DUP1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"369:8168:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220626297f92319ab765fc10da58dc547990232a88d8350755c83d2a6e841525c8064736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x6297F9 0x23 NOT 0xAB PUSH23 0x5FC10DA58DC547990232A88D8350755C83D2A6E841525C DUP1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"369:8168:1:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_throwError(enum ECDSA.RecoverError)":"infinite","recover(bytes32,bytes memory)":"infinite","recover(bytes32,bytes32,bytes32)":"infinite","recover(bytes32,uint8,bytes32,bytes32)":"infinite","toEthSignedMessageHash(bytes memory)":"infinite","toEthSignedMessageHash(bytes32)":"infinite","toTypedDataHash(bytes32,bytes32)":"infinite","tryRecover(bytes32,bytes memory)":"infinite","tryRecover(bytes32,bytes32,bytes32)":"infinite","tryRecover(bytes32,uint8,bytes32,bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Strings.sol\\\";\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS,\\n        InvalidSignatureV // Deprecated in v4.8\\n    }\\n\\n    function _throwError(RecoverError error) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert(\\\"ECDSA: invalid signature\\\");\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature` or error string. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address, RecoverError) {\\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\\n        return tryRecover(hash, v, r, s);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     *\\n     * _Available since v4.2._\\n     */\\n    function recover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address, RecoverError) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature);\\n        }\\n\\n        return (signer, RecoverError.NoError);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\", Strings.toString(s.length), s));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Typed Data, created from a\\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\\n     * to the one signed with the\\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\\n     * JSON-RPC method as part of EIP-712.\\n     *\\n     * See {recover}.\\n     */\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n    }\\n}\\n\",\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9ed6dd1d6acc358b17594139318d95fb346b7a26ec39b0f5f81e943601d4bc364736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xED PUSH14 0xD1D6ACC358B17594139318D95FB3 CHAINID 0xB7 LOG2 PUSH15 0xC39B0F5F81E943601D4BC364736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"202:12302:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9ed6dd1d6acc358b17594139318d95fb346b7a26ec39b0f5f81e943601d4bc364736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xED PUSH14 0xD1D6ACC358B17594139318D95FB3 CHAINID 0xB7 LOG2 PUSH15 0xC39B0F5F81E943601D4BC364736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"202:12302:2:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/EnglishOwnerAdder.sol":{"EnglishOwnerAdder":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"STATEMENT","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_safe","type":"address"},{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"device","type":"address"},{"internalType":"uint256","name":"issuedAt","type":"uint256"}],"internalType":"struct TokenAuthenticated.TokenRequest","name":"request","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"addOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"device","type":"address"}],"name":"createTokenRequest","outputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"device","type":"address"},{"internalType":"uint256","name":"issuedAt","type":"uint256"}],"internalType":"struct TokenAuthenticated.TokenRequest","name":"request","type":"tuple"},{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lengthOfToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1413":{"entryPoint":null,"id":1413,"parameterSlots":0,"returnSlots":0},"@_1648":{"entryPoint":null,"id":1648,"parameterSlots":1,"returnSlots":0},"array_dataslot_t_string_storage":{"entryPoint":232,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":74,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":553,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":368,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":514,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":388,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":708,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":253,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":179,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":678,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":378,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":646,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":132,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":85,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":428,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":269,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":633,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":486,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":282,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":438,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":481,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5231:10","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:10","statements":[{"nodeType":"YulAssignment","src":"77:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:10"},"nodeType":"YulFunctionCall","src":"87:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:10"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:10","type":""}],"src":"7:99:10"},{"body":{"nodeType":"YulBlock","src":"140:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:10"},"nodeType":"YulFunctionCall","src":"150:88:10"},"nodeType":"YulExpressionStatement","src":"150:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:10"},"nodeType":"YulFunctionCall","src":"247:15:10"},"nodeType":"YulExpressionStatement","src":"247:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:10"},"nodeType":"YulFunctionCall","src":"271:15:10"},"nodeType":"YulExpressionStatement","src":"271:15:10"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:10"},{"body":{"nodeType":"YulBlock","src":"326:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:10"},"nodeType":"YulFunctionCall","src":"336:88:10"},"nodeType":"YulExpressionStatement","src":"336:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:10"},"nodeType":"YulFunctionCall","src":"433:15:10"},"nodeType":"YulExpressionStatement","src":"433:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:10"},"nodeType":"YulFunctionCall","src":"457:15:10"},"nodeType":"YulExpressionStatement","src":"457:15:10"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:10"},{"body":{"nodeType":"YulBlock","src":"535:269:10","statements":[{"nodeType":"YulAssignment","src":"545:22:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:10","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:10"},"nodeType":"YulFunctionCall","src":"555:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:10","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:10"},"nodeType":"YulFunctionCall","src":"602:12:10"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:10","statements":[{"nodeType":"YulAssignment","src":"667:27:10","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:10"},"nodeType":"YulFunctionCall","src":"677:17:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:10"},"nodeType":"YulFunctionCall","src":"626:26:10"},"nodeType":"YulIf","src":"623:81:10"},{"body":{"nodeType":"YulBlock","src":"756:42:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:10"},"nodeType":"YulFunctionCall","src":"770:18:10"},"nodeType":"YulExpressionStatement","src":"770:18:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:10"},"nodeType":"YulFunctionCall","src":"740:14:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:10"},"nodeType":"YulFunctionCall","src":"717:38:10"},"nodeType":"YulIf","src":"714:84:10"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:10","type":""}],"src":"484:320:10"},{"body":{"nodeType":"YulBlock","src":"864:87:10","statements":[{"nodeType":"YulAssignment","src":"874:11:10","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:10"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:10","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:10"},"nodeType":"YulFunctionCall","src":"895:14:10"},"nodeType":"YulExpressionStatement","src":"895:14:10"},{"nodeType":"YulAssignment","src":"918:26:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:10"},"nodeType":"YulFunctionCall","src":"926:18:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:10"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:10","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:10","type":""}],"src":"810:141:10"},{"body":{"nodeType":"YulBlock","src":"1001:49:10","statements":[{"nodeType":"YulAssignment","src":"1011:33:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:10"},"nodeType":"YulFunctionCall","src":"1025:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:10","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:10"},"nodeType":"YulFunctionCall","src":"1021:23:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:10"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:10","type":""}],"src":"957:93:10"},{"body":{"nodeType":"YulBlock","src":"1109:54:10","statements":[{"nodeType":"YulAssignment","src":"1119:37:10","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:10"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:10"},"nodeType":"YulFunctionCall","src":"1140:16:10"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:10"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:10","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:10","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:10","type":""}],"src":"1056:107:10"},{"body":{"nodeType":"YulBlock","src":"1245:317:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:10","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:10","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:10"},"nodeType":"YulFunctionCall","src":"1272:18:10"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:10","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:10"},"nodeType":"YulFunctionCall","src":"1311:97:10"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:10","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:10","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:10"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:10"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:10"},"nodeType":"YulFunctionCall","src":"1429:39:10"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:10"}]},{"nodeType":"YulAssignment","src":"1477:30:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:10"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:10"},"nodeType":"YulFunctionCall","src":"1497:9:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:10"},"nodeType":"YulFunctionCall","src":"1486:21:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:10"}]},{"nodeType":"YulAssignment","src":"1516:40:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:10"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:10"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:10"},"nodeType":"YulFunctionCall","src":"1536:19:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:10"},"nodeType":"YulFunctionCall","src":"1526:30:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:10"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:10","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:10","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:10","type":""}],"src":"1169:393:10"},{"body":{"nodeType":"YulBlock","src":"1613:32:10","statements":[{"nodeType":"YulAssignment","src":"1623:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:10"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:10","type":""}],"src":"1568:77:10"},{"body":{"nodeType":"YulBlock","src":"1683:28:10","statements":[{"nodeType":"YulAssignment","src":"1693:12:10","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:10"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:10","type":""}],"src":"1651:60:10"},{"body":{"nodeType":"YulBlock","src":"1777:82:10","statements":[{"nodeType":"YulAssignment","src":"1787:66:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:10"},"nodeType":"YulFunctionCall","src":"1827:24:10"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:10"},"nodeType":"YulFunctionCall","src":"1818:34:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:10"},"nodeType":"YulFunctionCall","src":"1800:53:10"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:10"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:10","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:10","type":""}],"src":"1717:142:10"},{"body":{"nodeType":"YulBlock","src":"1912:28:10","statements":[{"nodeType":"YulAssignment","src":"1922:12:10","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:10"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:10","type":""}],"src":"1865:75:10"},{"body":{"nodeType":"YulBlock","src":"2022:193:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:10","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:10"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:10"},"nodeType":"YulFunctionCall","src":"2056:39:10"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:10"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:10"},"nodeType":"YulFunctionCall","src":"2145:11:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:10"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:10"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:10"},"nodeType":"YulFunctionCall","src":"2166:41:10"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:10"},"nodeType":"YulFunctionCall","src":"2117:91:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:10"},"nodeType":"YulFunctionCall","src":"2104:105:10"},"nodeType":"YulExpressionStatement","src":"2104:105:10"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:10","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:10","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:10","type":""}],"src":"1946:269:10"},{"body":{"nodeType":"YulBlock","src":"2270:24:10","statements":[{"nodeType":"YulAssignment","src":"2280:8:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:10","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:10"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:10","type":""}],"src":"2221:73:10"},{"body":{"nodeType":"YulBlock","src":"2353:136:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:10","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:10"},"nodeType":"YulFunctionCall","src":"2377:32:10"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:10"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:10"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:10"},"nodeType":"YulFunctionCall","src":"2418:65:10"},"nodeType":"YulExpressionStatement","src":"2418:65:10"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:10","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:10","type":""}],"src":"2300:189:10"},{"body":{"nodeType":"YulBlock","src":"2545:136:10","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:10","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:10","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:10"},"nodeType":"YulFunctionCall","src":"2626:39:10"},"nodeType":"YulExpressionStatement","src":"2626:39:10"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:10"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:10"},"nodeType":"YulFunctionCall","src":"2562:14:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:10","statements":[{"nodeType":"YulAssignment","src":"2579:22:10","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:10"},"nodeType":"YulFunctionCall","src":"2588:13:10"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:10"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:10","statements":[]},"src":"2555:120:10"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:10","type":""}],"src":"2495:186:10"},{"body":{"nodeType":"YulBlock","src":"2766:464:10","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:10","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:10"},"nodeType":"YulFunctionCall","src":"2822:38:10"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:10","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:10"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:10"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:10"},"nodeType":"YulFunctionCall","src":"2906:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:10"},"nodeType":"YulFunctionCall","src":"2892:44:10"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:10","statements":[{"nodeType":"YulAssignment","src":"3095:23:10","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:10"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:10"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:10"},"nodeType":"YulFunctionCall","src":"3074:18:10"},"nodeType":"YulIf","src":"3071:49:10"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:10"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:10"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:10"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:10"},"nodeType":"YulFunctionCall","src":"3189:22:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:10"},"nodeType":"YulFunctionCall","src":"3175:37:10"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:10"},"nodeType":"YulFunctionCall","src":"3133:80:10"},"nodeType":"YulExpressionStatement","src":"3133:80:10"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:10"},"nodeType":"YulFunctionCall","src":"2780:11:10"},"nodeType":"YulIf","src":"2777:446:10"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:10","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:10","type":""}],"src":"2687:543:10"},{"body":{"nodeType":"YulBlock","src":"3299:54:10","statements":[{"nodeType":"YulAssignment","src":"3309:37:10","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:10"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:10"},"nodeType":"YulFunctionCall","src":"3330:16:10"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:10"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:10","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:10","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:10","type":""}],"src":"3236:117:10"},{"body":{"nodeType":"YulBlock","src":"3410:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:10","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:10"},"nodeType":"YulFunctionCall","src":"3465:13:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:10"},"nodeType":"YulFunctionCall","src":"3480:6:10"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:10"},"nodeType":"YulFunctionCall","src":"3436:51:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:10"},"nodeType":"YulFunctionCall","src":"3432:56:10"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:10","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:10"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:10"},"nodeType":"YulFunctionCall","src":"3507:15:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:10"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:10","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:10","type":""}],"src":"3359:169:10"},{"body":{"nodeType":"YulBlock","src":"3614:214:10","statements":[{"nodeType":"YulAssignment","src":"3747:37:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:10"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:10"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:10"},"nodeType":"YulFunctionCall","src":"3755:29:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:10"}]},{"nodeType":"YulAssignment","src":"3793:29:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:10","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:10"},"nodeType":"YulFunctionCall","src":"3810:11:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:10"},"nodeType":"YulFunctionCall","src":"3801:21:10"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:10"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:10","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:10","type":""}],"src":"3533:295:10"},{"body":{"nodeType":"YulBlock","src":"3925:1303:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:10","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:10"},"nodeType":"YulFunctionCall","src":"3950:37:10"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:10"},"nodeType":"YulFunctionCall","src":"4074:18:10"},"nodeType":"YulExpressionStatement","src":"4074:18:10"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:10"},"nodeType":"YulFunctionCall","src":"4041:30:10"},"nodeType":"YulIf","src":"4038:56:10"},{"nodeType":"YulVariableDeclaration","src":"4104:52:10","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:10"},"nodeType":"YulFunctionCall","src":"4144:11:10"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:10"},"nodeType":"YulFunctionCall","src":"4118:38:10"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:10"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:10"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:10"},"nodeType":"YulFunctionCall","src":"4203:67:10"},"nodeType":"YulExpressionStatement","src":"4203:67:10"},{"nodeType":"YulVariableDeclaration","src":"4280:18:10","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:10","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:10","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:10","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:10","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:10"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:10","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:10","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:10"},"nodeType":"YulFunctionCall","src":"4413:9:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:10"},"nodeType":"YulFunctionCall","src":"4401:22:10"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:10","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:10"},"nodeType":"YulFunctionCall","src":"4451:37:10"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:10","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:10"},"nodeType":"YulFunctionCall","src":"4608:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:10"},"nodeType":"YulFunctionCall","src":"4602:26:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:10"},"nodeType":"YulFunctionCall","src":"4587:42:10"},"nodeType":"YulExpressionStatement","src":"4587:42:10"},{"nodeType":"YulAssignment","src":"4646:24:10","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:10"},"nodeType":"YulFunctionCall","src":"4656:14:10"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:10"}]},{"nodeType":"YulAssignment","src":"4687:31:10","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:10"},"nodeType":"YulFunctionCall","src":"4700:18:10"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:10"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:10"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:10"},"nodeType":"YulFunctionCall","src":"4532:14:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:10","statements":[{"nodeType":"YulAssignment","src":"4549:17:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:10"},"nodeType":"YulFunctionCall","src":"4554:12:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:10","statements":[]},"src":"4524:208:10"},{"body":{"nodeType":"YulBlock","src":"4768:156:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:10","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:10"},"nodeType":"YulFunctionCall","src":"4809:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:10"},"nodeType":"YulFunctionCall","src":"4803:26:10"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:10","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:10"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:10"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:10","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:10"},"nodeType":"YulFunctionCall","src":"4891:17:10"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:10"},"nodeType":"YulFunctionCall","src":"4861:48:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:10"},"nodeType":"YulFunctionCall","src":"4846:64:10"},"nodeType":"YulExpressionStatement","src":"4846:64:10"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:10"},"nodeType":"YulFunctionCall","src":"4748:19:10"},"nodeType":"YulIf","src":"4745:179:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:10"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:10","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:10"},"nodeType":"YulFunctionCall","src":"4954:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:10"},"nodeType":"YulFunctionCall","src":"4950:22:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:10"},"nodeType":"YulFunctionCall","src":"4937:36:10"},"nodeType":"YulExpressionStatement","src":"4937:36:10"}]},"nodeType":"YulCase","src":"4365:618:10","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:10","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:10","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:10","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:10","statements":[{"nodeType":"YulAssignment","src":"5069:35:10","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:10"},"nodeType":"YulFunctionCall","src":"5084:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:10"},"nodeType":"YulFunctionCall","src":"5078:26:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:10"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:10"},"nodeType":"YulIf","src":"5041:77:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:10"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:10"},"nodeType":"YulFunctionCall","src":"5144:67:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:10"},"nodeType":"YulFunctionCall","src":"5131:81:10"},"nodeType":"YulExpressionStatement","src":"5131:81:10"}]},"nodeType":"YulCase","src":"4992:230:10","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:10"},"nodeType":"YulFunctionCall","src":"4342:14:10"},"nodeType":"YulSwitch","src":"4335:887:10"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:10","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:10","type":""}],"src":"3833:1395:10"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xF PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2208 PUSH1 0x3A SWAP2 CODECOPY DUP1 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x42 SWAP2 SWAP1 PUSH3 0x2C4 JUMP JUMPDEST POP POP PUSH3 0x3AB JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xCC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xE2 JUMPI PUSH3 0xE1 PUSH3 0x84 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x14C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x10D JUMP JUMPDEST PUSH3 0x158 DUP7 DUP4 PUSH3 0x10D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A5 PUSH3 0x19F PUSH3 0x199 DUP5 PUSH3 0x170 JUMP JUMPDEST PUSH3 0x17A JUMP JUMPDEST PUSH3 0x170 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1C1 DUP4 PUSH3 0x184 JUMP JUMPDEST PUSH3 0x1D9 PUSH3 0x1D0 DUP3 PUSH3 0x1AC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x11A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x1F0 PUSH3 0x1E1 JUMP JUMPDEST PUSH3 0x1FD DUP2 DUP5 DUP5 PUSH3 0x1B6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x225 JUMPI PUSH3 0x219 PUSH1 0x0 DUP3 PUSH3 0x1E6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x203 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x274 JUMPI PUSH3 0x23E DUP2 PUSH3 0xE8 JUMP JUMPDEST PUSH3 0x249 DUP5 PUSH3 0xFD JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x259 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x271 PUSH3 0x268 DUP6 PUSH3 0xFD JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x202 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x299 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x279 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2B4 DUP4 DUP4 PUSH3 0x286 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2CF DUP3 PUSH3 0x4A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2EB JUMPI PUSH3 0x2EA PUSH3 0x55 JUMP JUMPDEST JUMPDEST PUSH3 0x2F7 DUP3 SLOAD PUSH3 0xB3 JUMP JUMPDEST PUSH3 0x304 DUP3 DUP3 DUP6 PUSH3 0x229 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x33C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x327 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x333 DUP6 DUP3 PUSH3 0x2A6 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x3A3 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x34C DUP7 PUSH3 0xE8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x376 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x34F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x396 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x392 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x286 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E4D DUP1 PUSH3 0x3BB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x724E59C3 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xB6AD16A8 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xBEBC479C EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0xCB2E6043 EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xF3D JUMP JUMPDEST PUSH2 0xDA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82 SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95 SWAP3 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE5 DUP4 DUP4 DUP4 PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE75235B8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x140 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1193 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 EQ PUSH2 0x1A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A0 SWAP1 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F54BF6E DUP7 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x211 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP5 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x29D SWAP3 SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xD582F1300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x468721A7 DUP8 PUSH1 0x0 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x37C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x12E1 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3B1 PUSH2 0xDF5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 NUMBER PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x1577 JUMP JUMPDEST DUP2 MSTORE POP SWAP2 POP DUP2 PUSH2 0x412 DUP4 PUSH2 0x5F2 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x42A SWAP1 PUSH2 0x15DA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x456 SWAP1 PUSH2 0x15DA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x478 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x486 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4BD DUP6 PUSH2 0x646 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x50F DUP3 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x670 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x591 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD NUMBER PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x1577 JUMP JUMPDEST DUP7 PUSH1 0x40 ADD CALLDATALOAD LT ISZERO PUSH2 0x5E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP1 PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x603 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x697 JUMP JUMPDEST PUSH2 0x610 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x697 JUMP JUMPDEST PUSH2 0x61D DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x630 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x669 PUSH2 0x664 DUP4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65F SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST PUSH2 0x792 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x67F DUP6 DUP6 PUSH2 0x7CD JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x68C DUP2 PUSH2 0x81E JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6BD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x984 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x6D3 DUP5 PUSH2 0xBC0 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6F2 JUMPI PUSH2 0x6F1 PUSH2 0x18FF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x724 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x787 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x77B JUMPI PUSH2 0x77A PUSH2 0x1A20 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x732 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79E DUP3 MLOAD PUSH2 0x6C4 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7B0 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x41 DUP4 MLOAD SUB PUSH2 0x80E JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x802 DUP8 DUP3 DUP6 DUP6 PUSH2 0xD13 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x817 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x832 JUMPI PUSH2 0x831 PUSH2 0x1485 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x845 JUMPI PUSH2 0x844 PUSH2 0x1485 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x981 JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x85F JUMPI PUSH2 0x85E PUSH2 0x1485 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x872 JUMPI PUSH2 0x871 PUSH2 0x1485 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A9 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x8C6 JUMPI PUSH2 0x8C5 PUSH2 0x1485 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x8D9 JUMPI PUSH2 0x8D8 PUSH2 0x1485 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x919 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x910 SWAP1 PUSH2 0x1BBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x92D JUMPI PUSH2 0x92C PUSH2 0x1485 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x940 JUMPI PUSH2 0x93F PUSH2 0x1485 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x980 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x977 SWAP1 PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x997 SWAP2 SWAP1 PUSH2 0x1C70 JUMP JUMPDEST PUSH2 0x9A1 SWAP2 SWAP1 PUSH2 0x1CB2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9BA JUMPI PUSH2 0x9B9 PUSH2 0x18FF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9EC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA24 JUMPI PUSH2 0xA23 PUSH2 0x1CE6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA88 JUMPI PUSH2 0xA87 PUSH2 0x1CE6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xAC8 SWAP2 SWAP1 PUSH2 0x1C70 JUMP JUMPDEST PUSH2 0xAD2 SWAP2 SWAP1 PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB72 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xB14 JUMPI PUSH2 0xB13 PUSH2 0x1CE6 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB2B JUMPI PUSH2 0xB2A PUSH2 0x1CE6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xB6B SWAP1 PUSH2 0x1D15 JUMP JUMPDEST SWAP1 POP PUSH2 0xAD5 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0xBB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAD SWAP1 PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0xC1E JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0xC14 JUMPI PUSH2 0xC13 PUSH2 0x1A20 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC5B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0xC51 JUMPI PUSH2 0xC50 PUSH2 0x1A20 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC8A JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0x1A20 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xCB3 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0xCA9 JUMPI PUSH2 0xCA8 PUSH2 0x1A20 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xCD8 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0xCCE JUMPI PUSH2 0xCCD PUSH2 0x1A20 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xCFB JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0xCF1 JUMPI PUSH2 0xCF0 PUSH2 0x1A20 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0xD0A JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0xD4E JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xD73 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD95 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDE3 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0xDEC JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE81 DUP3 PUSH2 0xE56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE91 DUP2 PUSH2 0xE76 JUMP JUMPDEST DUP2 EQ PUSH2 0xE9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEAE DUP2 PUSH2 0xE88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECF JUMPI PUSH2 0xECE PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xEFD JUMPI PUSH2 0xEFC PUSH2 0xED8 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF1A JUMPI PUSH2 0xF19 PUSH2 0xEDD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xF36 JUMPI PUSH2 0xF35 PUSH2 0xEE2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF57 JUMPI PUSH2 0xF56 PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF65 DUP8 DUP3 DUP9 ADD PUSH2 0xE9F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xF76 DUP8 DUP3 DUP9 ADD PUSH2 0xEB9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF97 JUMPI PUSH2 0xF96 PUSH2 0xE51 JUMP JUMPDEST JUMPDEST PUSH2 0xFA3 DUP8 DUP3 DUP9 ADD PUSH2 0xEE7 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC8 JUMPI PUSH2 0xFC7 PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFD6 DUP6 DUP3 DUP7 ADD PUSH2 0xE9F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFE7 DUP6 DUP3 DUP7 ADD PUSH2 0xE9F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFA DUP2 PUSH2 0xE76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1013 DUP2 PUSH2 0x1000 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x102F PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xFF1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1042 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xFF1 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1055 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x100A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1095 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x107A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BD DUP3 PUSH2 0x105B JUMP JUMPDEST PUSH2 0x10C7 DUP2 DUP6 PUSH2 0x1066 JUMP JUMPDEST SWAP4 POP PUSH2 0x10D7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x10E0 DUP2 PUSH2 0x10A1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1100 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1019 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1112 DUP2 DUP5 PUSH2 0x10B2 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1135 DUP2 DUP5 PUSH2 0x10B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1146 DUP2 PUSH2 0x1000 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1161 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x113D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1170 DUP2 PUSH2 0x1000 JUMP JUMPDEST DUP2 EQ PUSH2 0x117B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x118D DUP2 PUSH2 0x1167 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A9 JUMPI PUSH2 0x11A8 PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11B7 DUP5 DUP3 DUP6 ADD PUSH2 0x117E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792073616665277320776974682061207468726573686F6C64206F6620 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E652061726520737570706F72746564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121C PUSH1 0x31 DUP4 PUSH2 0x1066 JUMP JUMPDEST SWAP2 POP PUSH2 0x1227 DUP3 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x124B DUP2 PUSH2 0x120F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1268 JUMPI PUSH2 0x1267 PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1276 DUP5 DUP3 DUP6 ADD PUSH2 0xE9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1288 DUP2 PUSH2 0xE76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x127F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BE DUP2 PUSH2 0x12A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x12C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12DB DUP2 PUSH2 0x12B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F7 JUMPI PUSH2 0x12F6 PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1305 DUP5 DUP3 DUP6 ADD PUSH2 0x12CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E6572206973206E6F7420612073616665206F776E657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1344 PUSH1 0x19 DUP4 PUSH2 0x1066 JUMP JUMPDEST SWAP2 POP PUSH2 0x134F DUP3 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1373 DUP2 PUSH2 0x1337 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B6 PUSH2 0x13B1 PUSH2 0x13AC DUP5 PUSH2 0x137A JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST PUSH2 0x1384 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C6 DUP2 PUSH2 0x139B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13E1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x127F JUMP JUMPDEST PUSH2 0x13EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141A PUSH2 0x1415 PUSH2 0x1410 DUP5 PUSH2 0x13F5 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x142A DUP2 PUSH2 0x13FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1457 DUP3 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x1461 DUP2 DUP6 PUSH2 0x143B JUMP JUMPDEST SWAP4 POP PUSH2 0x1471 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x147A DUP2 PUSH2 0x10A1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x14C5 JUMPI PUSH2 0x14C4 PUSH2 0x1485 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x14D6 DUP3 PUSH2 0x14B4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E6 DUP3 PUSH2 0x14C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F6 DUP2 PUSH2 0x14DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1511 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x127F JUMP JUMPDEST PUSH2 0x151E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1421 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1530 DUP2 DUP6 PUSH2 0x144C JUMP JUMPDEST SWAP1 POP PUSH2 0x153F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x14ED JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1582 DUP3 PUSH2 0x1000 JUMP JUMPDEST SWAP2 POP PUSH2 0x158D DUP4 PUSH2 0x1000 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A4 PUSH2 0x1548 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x15F2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1605 JUMPI PUSH2 0x1604 PUSH2 0x15AB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1641 PUSH1 0x11 DUP4 PUSH2 0x1066 JUMP JUMPDEST SWAP2 POP PUSH2 0x164C DUP3 PUSH2 0x160B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1670 DUP2 PUSH2 0x1634 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265717565737420697320746F6F206F6C640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16AD PUSH1 0x12 DUP4 PUSH2 0x1066 JUMP JUMPDEST SWAP2 POP PUSH2 0x16B8 DUP3 PUSH2 0x1677 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16DC DUP2 PUSH2 0x16A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x1710 DUP2 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x171A DUP2 DUP7 PUSH2 0x16E3 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x1735 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x174A JUMPI PUSH2 0x177D JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x177D JUMP JUMPDEST PUSH2 0x1753 DUP6 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1775 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1756 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA0A4D653A200000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17BC PUSH1 0x6 DUP4 PUSH2 0x16E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C7 DUP3 PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DD DUP3 PUSH2 0x105B JUMP JUMPDEST PUSH2 0x17E7 DUP2 DUP6 PUSH2 0x16E3 JUMP JUMPDEST SWAP4 POP PUSH2 0x17F7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1077 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA4465766963653A200000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1839 PUSH1 0x9 DUP4 PUSH2 0x16E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1844 DUP3 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA4973737565642061743A200000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1885 PUSH1 0xC DUP4 PUSH2 0x16E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1890 DUP3 PUSH2 0x184F JUMP JUMPDEST PUSH1 0xC DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A7 DUP3 DUP8 PUSH2 0x1703 JUMP JUMPDEST SWAP2 POP PUSH2 0x18B2 DUP3 PUSH2 0x17AF JUMP JUMPDEST SWAP2 POP PUSH2 0x18BE DUP3 DUP7 PUSH2 0x17D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C9 DUP3 PUSH2 0x182C JUMP JUMPDEST SWAP2 POP PUSH2 0x18D5 DUP3 DUP6 PUSH2 0x17D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x18E0 DUP3 PUSH2 0x1878 JUMP JUMPDEST SWAP2 POP PUSH2 0x18EC DUP3 DUP5 PUSH2 0x17D2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1937 DUP3 PUSH2 0x10A1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1956 JUMPI PUSH2 0x1955 PUSH2 0x18FF JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1969 PUSH2 0xE42 JUMP JUMPDEST SWAP1 POP PUSH2 0x1975 DUP3 DUP3 PUSH2 0x192E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1989 DUP2 PUSH2 0x1167 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A5 JUMPI PUSH2 0x19A4 PUSH2 0x18FA JUMP JUMPDEST JUMPDEST PUSH2 0x19AF PUSH1 0x60 PUSH2 0x195F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x19BF DUP5 DUP3 DUP6 ADD PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x19D3 DUP5 DUP3 DUP6 ADD PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x19E7 DUP5 DUP3 DUP6 ADD PUSH2 0x197A JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A09 JUMPI PUSH2 0x1A08 PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A17 DUP5 DUP3 DUP6 ADD PUSH2 0x198F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A85 PUSH1 0x1A DUP4 PUSH2 0x16E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A90 DUP3 PUSH2 0x1A4F JUMP JUMPDEST PUSH1 0x1A DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB1 DUP3 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x1ABB DUP2 DUP6 PUSH2 0x1A9B JUMP JUMPDEST SWAP4 POP PUSH2 0x1ACB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1077 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE2 DUP3 PUSH2 0x1A78 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AEE DUP3 DUP6 PUSH2 0x17D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AFA DUP3 DUP5 PUSH2 0x1AA6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3C PUSH1 0x18 DUP4 PUSH2 0x1066 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B47 DUP3 PUSH2 0x1B06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B6B DUP2 PUSH2 0x1B2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA8 PUSH1 0x1F DUP4 PUSH2 0x1066 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB3 DUP3 PUSH2 0x1B72 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD7 DUP2 PUSH2 0x1B9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3A PUSH1 0x22 DUP4 PUSH2 0x1066 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C45 DUP3 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C69 DUP2 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7B DUP3 PUSH2 0x1000 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C86 DUP4 PUSH2 0x1000 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C94 DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1CAB JUMPI PUSH2 0x1CAA PUSH2 0x1548 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CBD DUP3 PUSH2 0x1000 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC8 DUP4 PUSH2 0x1000 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CE0 JUMPI PUSH2 0x1CDF PUSH2 0x1548 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D20 DUP3 PUSH2 0x1000 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1D33 JUMPI PUSH2 0x1D32 PUSH2 0x1548 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D74 PUSH1 0x20 DUP4 PUSH2 0x1066 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7F DUP3 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA3 DUP2 PUSH2 0x1D67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DBD DUP2 PUSH2 0x1DAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1DCC DUP2 PUSH2 0x1384 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1DE7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x1DF4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DC3 JUMP JUMPDEST PUSH2 0x1E01 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x1E0E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1DB4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F PUSH20 0x3FD7AA5B7698F0084CEAE10BC0AE2EE988894EF2 SWAP12 0xBE 0xDD 0x5D 0xC9 0xAA 0x5D GASLIMIT GASPRICE PUSH11 0x64736F6C63430008130033 0x49 KECCAK256 PUSH2 0x7574 PUSH9 0x6F72697A6520746869 PUSH20 0x2064657669636520746F2073656E64207472616E PUSH20 0x616374696F6E73206F6E206D7920626568616C66 0x2E ","sourceMap":"133:993:3:-:0;;;407:2:6;376:33;;189:97:3;;;;;;;;;;529:77:6;;;;;;;;;;;;;;;;;589:10;577:9;:22;;;;;;:::i;:::-;;529:77;133:993:3;;7:99:10;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;133:993:3:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@STATEMENT_1628":{"entryPoint":1053,"id":1628,"parameterSlots":0,"returnSlots":0},"@_throwError_228":{"entryPoint":2078,"id":228,"parameterSlots":1,"returnSlots":0},"@addOwner_1483":{"entryPoint":218,"id":1483,"parameterSlots":4,"returnSlots":0},"@authenticate_1714":{"entryPoint":1201,"id":1714,"parameterSlots":3,"returnSlots":1},"@createTokenRequest_1744":{"entryPoint":937,"id":1744,"parameterSlots":2,"returnSlots":2},"@hashForToken_1799":{"entryPoint":1606,"id":1799,"parameterSlots":1,"returnSlots":1},"@lengthOfToken_1631":{"entryPoint":1195,"id":1631,"parameterSlots":0,"returnSlots":0},"@log10_1237":{"entryPoint":3008,"id":1237,"parameterSlots":1,"returnSlots":1},"@recover_301":{"entryPoint":1648,"id":301,"parameterSlots":2,"returnSlots":1},"@stringToSign_1780":{"entryPoint":1522,"id":1780,"parameterSlots":1,"returnSlots":1},"@toEthSignedMessageHash_514":{"entryPoint":1938,"id":514,"parameterSlots":1,"returnSlots":1},"@toHexString_153":{"entryPoint":2436,"id":153,"parameterSlots":2,"returnSlots":1},"@toHexString_173":{"entryPoint":1687,"id":173,"parameterSlots":1,"returnSlots":1},"@toString_57":{"entryPoint":1732,"id":57,"parameterSlots":1,"returnSlots":1},"@tryRecover_274":{"entryPoint":1997,"id":274,"parameterSlots":2,"returnSlots":2},"@tryRecover_442":{"entryPoint":3347,"id":442,"parameterSlots":4,"returnSlots":2},"abi_decode_t_address":{"entryPoint":3743,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":4812,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":3815,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_struct$_TokenRequest_$1638_calldata_ptr":{"entryPoint":3769,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_TokenRequest_$1638_memory_ptr":{"entryPoint":6543,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6522,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":4478,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4690,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4017,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_struct$_TokenRequest_$1638_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":3901,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":4833,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_TokenRequest_$1638_memory_ptr":{"entryPoint":6643,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":4499,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":4081,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4735,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":7604,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":5196,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6822,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_Operation_$2032_to_t_uint8_fromStack":{"entryPoint":5357,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack":{"entryPoint":5153,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack":{"entryPoint":5053,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4274,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6098,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5891,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack":{"entryPoint":6959,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack":{"entryPoint":7527,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack":{"entryPoint":5684,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack":{"entryPoint":7067,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack":{"entryPoint":7213,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6264,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6776,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b_to_t_string_memory_ptr_fromStack":{"entryPoint":4919,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05_to_t_string_memory_ptr_fromStack":{"entryPoint":4623,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6188,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6063,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5_to_t_string_memory_ptr_fromStack":{"entryPoint":5792,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack":{"entryPoint":4121,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":4106,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4413,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":7619,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_storage_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_t_string_memory_ptr_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_t_string_memory_ptr_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6299,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_t_string_memory_ptr_t_bytes_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6871,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4750,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_rational_0_by_1_t_bytes_memory_ptr_t_enum$_Operation_$2032__to_t_address_t_uint256_t_bytes_memory_ptr_t_uint8__fromStack_reversed":{"entryPoint":5372,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_rational_1_by_1__to_t_address_t_uint8__fromStack_reversed":{"entryPoint":5068,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":7634,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4379,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6994,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7562,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5719,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7102,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7248,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4954,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4658,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5827,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__to_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4331,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4428,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6495,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3650,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":5870,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":5168,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4187,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":5179,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6811,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4198,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5859,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7346,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7280,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5495,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3702,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4777,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7594,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Operation_$2032":{"entryPoint":5320,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_0_by_1":{"entryPoint":5109,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":4986,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3670,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4096,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":4996,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_Operation_$2032_to_t_uint8":{"entryPoint":5339,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_0_by_1_to_t_uint256":{"entryPoint":5119,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint8":{"entryPoint":5019,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4215,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":7445,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5594,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6446,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":5009,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5448,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":6688,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":5253,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":5547,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7398,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6399,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":3805,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3800,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":3764,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":6394,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3810,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3665,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3660,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4257,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be":{"entryPoint":6918,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2":{"entryPoint":7486,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a":{"entryPoint":5643,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77":{"entryPoint":7026,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd":{"entryPoint":7134,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb":{"entryPoint":6223,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4":{"entryPoint":6735,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b":{"entryPoint":4878,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05":{"entryPoint":4544,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60":{"entryPoint":6147,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262":{"entryPoint":6022,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5":{"entryPoint":5751,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_Operation_$2032":{"entryPoint":5300,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3720,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":4789,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4455,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:32326:10","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:10","statements":[{"nodeType":"YulAssignment","src":"57:19:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:10"},"nodeType":"YulFunctionCall","src":"67:9:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:10"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:10","type":""}],"src":"7:75:10"},{"body":{"nodeType":"YulBlock","src":"177:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:10"},"nodeType":"YulFunctionCall","src":"187:12:10"},"nodeType":"YulExpressionStatement","src":"187:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:10"},{"body":{"nodeType":"YulBlock","src":"300:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:10"},"nodeType":"YulFunctionCall","src":"310:12:10"},"nodeType":"YulExpressionStatement","src":"310:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:10"},{"body":{"nodeType":"YulBlock","src":"379:81:10","statements":[{"nodeType":"YulAssignment","src":"389:65:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:10"},"nodeType":"YulFunctionCall","src":"400:54:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:10"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:10","type":""}],"src":"334:126:10"},{"body":{"nodeType":"YulBlock","src":"511:51:10","statements":[{"nodeType":"YulAssignment","src":"521:35:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:10"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:10"},"nodeType":"YulFunctionCall","src":"532:24:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:10"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:10","type":""}],"src":"466:96:10"},{"body":{"nodeType":"YulBlock","src":"611:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:10"},"nodeType":"YulFunctionCall","src":"670:12:10"},"nodeType":"YulExpressionStatement","src":"670:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:10"},"nodeType":"YulFunctionCall","src":"641:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:10"},"nodeType":"YulFunctionCall","src":"631:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:10"},"nodeType":"YulFunctionCall","src":"624:43:10"},"nodeType":"YulIf","src":"621:63:10"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:10","type":""}],"src":"568:122:10"},{"body":{"nodeType":"YulBlock","src":"748:87:10","statements":[{"nodeType":"YulAssignment","src":"758:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:10"},"nodeType":"YulFunctionCall","src":"767:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:10"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:10"},"nodeType":"YulFunctionCall","src":"796:33:10"},"nodeType":"YulExpressionStatement","src":"796:33:10"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:10","type":""}],"src":"696:139:10"},{"body":{"nodeType":"YulBlock","src":"930:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"947:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"950:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"940:6:10"},"nodeType":"YulFunctionCall","src":"940:12:10"},"nodeType":"YulExpressionStatement","src":"940:12:10"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulFunctionDefinition","src":"841:117:10"},{"body":{"nodeType":"YulBlock","src":"1094:152:10","statements":[{"body":{"nodeType":"YulBlock","src":"1133:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulIdentifier","src":"1135:77:10"},"nodeType":"YulFunctionCall","src":"1135:79:10"},"nodeType":"YulExpressionStatement","src":"1135:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"1115:3:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1120:6:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1111:3:10"},"nodeType":"YulFunctionCall","src":"1111:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"1129:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1107:3:10"},"nodeType":"YulFunctionCall","src":"1107:25:10"},"nodeType":"YulIf","src":"1104:112:10"},{"nodeType":"YulAssignment","src":"1225:15:10","value":{"name":"offset","nodeType":"YulIdentifier","src":"1234:6:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1225:5:10"}]}]},"name":"abi_decode_t_struct$_TokenRequest_$1638_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1072:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"1080:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1088:5:10","type":""}],"src":"1010:236:10"},{"body":{"nodeType":"YulBlock","src":"1341:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1358:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1361:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1351:6:10"},"nodeType":"YulFunctionCall","src":"1351:12:10"},"nodeType":"YulExpressionStatement","src":"1351:12:10"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1252:117:10"},{"body":{"nodeType":"YulBlock","src":"1464:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1481:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1484:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1474:6:10"},"nodeType":"YulFunctionCall","src":"1474:12:10"},"nodeType":"YulExpressionStatement","src":"1474:12:10"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"1375:117:10"},{"body":{"nodeType":"YulBlock","src":"1587:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1604:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1607:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1597:6:10"},"nodeType":"YulFunctionCall","src":"1597:12:10"},"nodeType":"YulExpressionStatement","src":"1597:12:10"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1498:117:10"},{"body":{"nodeType":"YulBlock","src":"1708:478:10","statements":[{"body":{"nodeType":"YulBlock","src":"1757:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1759:77:10"},"nodeType":"YulFunctionCall","src":"1759:79:10"},"nodeType":"YulExpressionStatement","src":"1759:79:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1736:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"1744:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1732:3:10"},"nodeType":"YulFunctionCall","src":"1732:17:10"},{"name":"end","nodeType":"YulIdentifier","src":"1751:3:10"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1728:3:10"},"nodeType":"YulFunctionCall","src":"1728:27:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1721:6:10"},"nodeType":"YulFunctionCall","src":"1721:35:10"},"nodeType":"YulIf","src":"1718:122:10"},{"nodeType":"YulAssignment","src":"1849:30:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1872:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1859:12:10"},"nodeType":"YulFunctionCall","src":"1859:20:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1849:6:10"}]},{"body":{"nodeType":"YulBlock","src":"1922:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1924:77:10"},"nodeType":"YulFunctionCall","src":"1924:79:10"},"nodeType":"YulExpressionStatement","src":"1924:79:10"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1894:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"1902:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1891:2:10"},"nodeType":"YulFunctionCall","src":"1891:30:10"},"nodeType":"YulIf","src":"1888:117:10"},{"nodeType":"YulAssignment","src":"2014:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2030:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2038:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2026:3:10"},"nodeType":"YulFunctionCall","src":"2026:17:10"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2014:8:10"}]},{"body":{"nodeType":"YulBlock","src":"2097:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2099:77:10"},"nodeType":"YulFunctionCall","src":"2099:79:10"},"nodeType":"YulExpressionStatement","src":"2099:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2062:8:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2076:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2084:4:10","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2072:3:10"},"nodeType":"YulFunctionCall","src":"2072:17:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2058:3:10"},"nodeType":"YulFunctionCall","src":"2058:32:10"},{"name":"end","nodeType":"YulIdentifier","src":"2092:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2055:2:10"},"nodeType":"YulFunctionCall","src":"2055:41:10"},"nodeType":"YulIf","src":"2052:128:10"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1675:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"1683:3:10","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1691:8:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"1701:6:10","type":""}],"src":"1634:552:10"},{"body":{"nodeType":"YulBlock","src":"2343:732:10","statements":[{"body":{"nodeType":"YulBlock","src":"2390:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2392:77:10"},"nodeType":"YulFunctionCall","src":"2392:79:10"},"nodeType":"YulExpressionStatement","src":"2392:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2364:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"2373:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2360:3:10"},"nodeType":"YulFunctionCall","src":"2360:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"2385:3:10","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2356:3:10"},"nodeType":"YulFunctionCall","src":"2356:33:10"},"nodeType":"YulIf","src":"2353:120:10"},{"nodeType":"YulBlock","src":"2483:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2498:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2512:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2502:6:10","type":""}]},{"nodeType":"YulAssignment","src":"2527:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2562:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2573:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2558:3:10"},"nodeType":"YulFunctionCall","src":"2558:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2582:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2537:20:10"},"nodeType":"YulFunctionCall","src":"2537:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2527:6:10"}]}]},{"nodeType":"YulBlock","src":"2610:150:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2625:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2639:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2629:6:10","type":""}]},{"nodeType":"YulAssignment","src":"2655:95:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2722:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2733:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2718:3:10"},"nodeType":"YulFunctionCall","src":"2718:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2742:7:10"}],"functionName":{"name":"abi_decode_t_struct$_TokenRequest_$1638_calldata_ptr","nodeType":"YulIdentifier","src":"2665:52:10"},"nodeType":"YulFunctionCall","src":"2665:85:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2655:6:10"}]}]},{"nodeType":"YulBlock","src":"2770:298:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2785:47:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2816:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2827:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2812:3:10"},"nodeType":"YulFunctionCall","src":"2812:19:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2799:12:10"},"nodeType":"YulFunctionCall","src":"2799:33:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2789:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"2879:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2881:77:10"},"nodeType":"YulFunctionCall","src":"2881:79:10"},"nodeType":"YulExpressionStatement","src":"2881:79:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2859:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2848:2:10"},"nodeType":"YulFunctionCall","src":"2848:30:10"},"nodeType":"YulIf","src":"2845:117:10"},{"nodeType":"YulAssignment","src":"2976:82:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3030:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"3041:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3026:3:10"},"nodeType":"YulFunctionCall","src":"3026:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3050:7:10"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"2994:31:10"},"nodeType":"YulFunctionCall","src":"2994:64:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2976:6:10"},{"name":"value3","nodeType":"YulIdentifier","src":"2984:6:10"}]}]}]},"name":"abi_decode_tuple_t_addresst_struct$_TokenRequest_$1638_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2289:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2300:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2312:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2320:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2328:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2336:6:10","type":""}],"src":"2192:883:10"},{"body":{"nodeType":"YulBlock","src":"3164:391:10","statements":[{"body":{"nodeType":"YulBlock","src":"3210:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3212:77:10"},"nodeType":"YulFunctionCall","src":"3212:79:10"},"nodeType":"YulExpressionStatement","src":"3212:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3185:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"3194:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3181:3:10"},"nodeType":"YulFunctionCall","src":"3181:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"3206:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3177:3:10"},"nodeType":"YulFunctionCall","src":"3177:32:10"},"nodeType":"YulIf","src":"3174:119:10"},{"nodeType":"YulBlock","src":"3303:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3318:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"3332:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3322:6:10","type":""}]},{"nodeType":"YulAssignment","src":"3347:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3382:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"3393:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3378:3:10"},"nodeType":"YulFunctionCall","src":"3378:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3402:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3357:20:10"},"nodeType":"YulFunctionCall","src":"3357:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3347:6:10"}]}]},{"nodeType":"YulBlock","src":"3430:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3445:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"3459:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3449:6:10","type":""}]},{"nodeType":"YulAssignment","src":"3475:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3510:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"3521:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3506:3:10"},"nodeType":"YulFunctionCall","src":"3506:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3530:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3485:20:10"},"nodeType":"YulFunctionCall","src":"3485:53:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3475:6:10"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3126:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3137:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3149:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3157:6:10","type":""}],"src":"3081:474:10"},{"body":{"nodeType":"YulBlock","src":"3616:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3633:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3656:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3638:17:10"},"nodeType":"YulFunctionCall","src":"3638:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3626:6:10"},"nodeType":"YulFunctionCall","src":"3626:37:10"},"nodeType":"YulExpressionStatement","src":"3626:37:10"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3604:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3611:3:10","type":""}],"src":"3561:108:10"},{"body":{"nodeType":"YulBlock","src":"3720:32:10","statements":[{"nodeType":"YulAssignment","src":"3730:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"3741:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3730:7:10"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3702:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3712:7:10","type":""}],"src":"3675:77:10"},{"body":{"nodeType":"YulBlock","src":"3813:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3830:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3853:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3835:17:10"},"nodeType":"YulFunctionCall","src":"3835:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3823:6:10"},"nodeType":"YulFunctionCall","src":"3823:37:10"},"nodeType":"YulExpressionStatement","src":"3823:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3801:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3808:3:10","type":""}],"src":"3758:108:10"},{"body":{"nodeType":"YulBlock","src":"4086:572:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4096:26:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4112:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4117:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4108:3:10"},"nodeType":"YulFunctionCall","src":"4108:14:10"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"4100:4:10","type":""}]},{"nodeType":"YulBlock","src":"4132:165:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4168:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4198:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"4205:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4194:3:10"},"nodeType":"YulFunctionCall","src":"4194:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4188:5:10"},"nodeType":"YulFunctionCall","src":"4188:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4172:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4258:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4276:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4281:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4272:3:10"},"nodeType":"YulFunctionCall","src":"4272:14:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"4224:33:10"},"nodeType":"YulFunctionCall","src":"4224:63:10"},"nodeType":"YulExpressionStatement","src":"4224:63:10"}]},{"nodeType":"YulBlock","src":"4307:166:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4344:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4374:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"4381:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4370:3:10"},"nodeType":"YulFunctionCall","src":"4370:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4364:5:10"},"nodeType":"YulFunctionCall","src":"4364:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4348:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4434:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4452:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4457:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4448:3:10"},"nodeType":"YulFunctionCall","src":"4448:14:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"4400:33:10"},"nodeType":"YulFunctionCall","src":"4400:63:10"},"nodeType":"YulExpressionStatement","src":"4400:63:10"}]},{"nodeType":"YulBlock","src":"4483:168:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4522:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4552:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"4559:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4548:3:10"},"nodeType":"YulFunctionCall","src":"4548:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4542:5:10"},"nodeType":"YulFunctionCall","src":"4542:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4526:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4612:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4630:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4635:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4626:3:10"},"nodeType":"YulFunctionCall","src":"4626:14:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"4578:33:10"},"nodeType":"YulFunctionCall","src":"4578:63:10"},"nodeType":"YulExpressionStatement","src":"4578:63:10"}]}]},"name":"abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4073:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4080:3:10","type":""}],"src":"3960:698:10"},{"body":{"nodeType":"YulBlock","src":"4723:40:10","statements":[{"nodeType":"YulAssignment","src":"4734:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4750:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4744:5:10"},"nodeType":"YulFunctionCall","src":"4744:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4734:6:10"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4706:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4716:6:10","type":""}],"src":"4664:99:10"},{"body":{"nodeType":"YulBlock","src":"4865:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4882:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"4887:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4875:6:10"},"nodeType":"YulFunctionCall","src":"4875:19:10"},"nodeType":"YulExpressionStatement","src":"4875:19:10"},{"nodeType":"YulAssignment","src":"4903:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4922:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4927:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4918:3:10"},"nodeType":"YulFunctionCall","src":"4918:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4903:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4837:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"4842:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4853:11:10","type":""}],"src":"4769:169:10"},{"body":{"nodeType":"YulBlock","src":"5006:184:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5016:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"5025:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5020:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"5085:63:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5110:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"5115:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5106:3:10"},"nodeType":"YulFunctionCall","src":"5106:11:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5129:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"5134:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5125:3:10"},"nodeType":"YulFunctionCall","src":"5125:11:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5119:5:10"},"nodeType":"YulFunctionCall","src":"5119:18:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5099:6:10"},"nodeType":"YulFunctionCall","src":"5099:39:10"},"nodeType":"YulExpressionStatement","src":"5099:39:10"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5046:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"5049:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5043:2:10"},"nodeType":"YulFunctionCall","src":"5043:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5057:19:10","statements":[{"nodeType":"YulAssignment","src":"5059:15:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5068:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"5071:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5064:3:10"},"nodeType":"YulFunctionCall","src":"5064:10:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5059:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"5039:3:10","statements":[]},"src":"5035:113:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5168:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"5173:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5164:3:10"},"nodeType":"YulFunctionCall","src":"5164:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"5182:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5157:6:10"},"nodeType":"YulFunctionCall","src":"5157:27:10"},"nodeType":"YulExpressionStatement","src":"5157:27:10"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4988:3:10","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4993:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"4998:6:10","type":""}],"src":"4944:246:10"},{"body":{"nodeType":"YulBlock","src":"5244:54:10","statements":[{"nodeType":"YulAssignment","src":"5254:38:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5272:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"5279:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5268:3:10"},"nodeType":"YulFunctionCall","src":"5268:14:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5288:2:10","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5284:3:10"},"nodeType":"YulFunctionCall","src":"5284:7:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5264:3:10"},"nodeType":"YulFunctionCall","src":"5264:28:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5254:6:10"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5227:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5237:6:10","type":""}],"src":"5196:102:10"},{"body":{"nodeType":"YulBlock","src":"5396:285:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5406:53:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5453:5:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5420:32:10"},"nodeType":"YulFunctionCall","src":"5420:39:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5410:6:10","type":""}]},{"nodeType":"YulAssignment","src":"5468:78:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5534:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"5539:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5475:58:10"},"nodeType":"YulFunctionCall","src":"5475:71:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5468:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5594:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"5601:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5590:3:10"},"nodeType":"YulFunctionCall","src":"5590:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"5608:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"5613:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5555:34:10"},"nodeType":"YulFunctionCall","src":"5555:65:10"},"nodeType":"YulExpressionStatement","src":"5555:65:10"},{"nodeType":"YulAssignment","src":"5629:46:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5640:3:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5667:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5645:21:10"},"nodeType":"YulFunctionCall","src":"5645:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5636:3:10"},"nodeType":"YulFunctionCall","src":"5636:39:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5629:3:10"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5377:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5384:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5392:3:10","type":""}],"src":"5304:377:10"},{"body":{"nodeType":"YulBlock","src":"5893:338:10","statements":[{"nodeType":"YulAssignment","src":"5903:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5915:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5926:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5911:3:10"},"nodeType":"YulFunctionCall","src":"5911:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5903:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6044:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6057:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6068:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6053:3:10"},"nodeType":"YulFunctionCall","src":"6053:17:10"}],"functionName":{"name":"abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5940:103:10"},"nodeType":"YulFunctionCall","src":"5940:131:10"},"nodeType":"YulExpressionStatement","src":"5940:131:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6092:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6103:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6088:3:10"},"nodeType":"YulFunctionCall","src":"6088:18:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6112:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"6118:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6108:3:10"},"nodeType":"YulFunctionCall","src":"6108:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6081:6:10"},"nodeType":"YulFunctionCall","src":"6081:48:10"},"nodeType":"YulExpressionStatement","src":"6081:48:10"},{"nodeType":"YulAssignment","src":"6138:86:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6210:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"6219:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6146:63:10"},"nodeType":"YulFunctionCall","src":"6146:78:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6138:4:10"}]}]},"name":"abi_encode_tuple_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__to_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5857:9:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5869:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5877:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5888:4:10","type":""}],"src":"5687:544:10"},{"body":{"nodeType":"YulBlock","src":"6355:195:10","statements":[{"nodeType":"YulAssignment","src":"6365:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6377:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6388:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6373:3:10"},"nodeType":"YulFunctionCall","src":"6373:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6365:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6412:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6423:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6408:3:10"},"nodeType":"YulFunctionCall","src":"6408:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6431:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"6437:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6427:3:10"},"nodeType":"YulFunctionCall","src":"6427:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6401:6:10"},"nodeType":"YulFunctionCall","src":"6401:47:10"},"nodeType":"YulExpressionStatement","src":"6401:47:10"},{"nodeType":"YulAssignment","src":"6457:86:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6529:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"6538:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6465:63:10"},"nodeType":"YulFunctionCall","src":"6465:78:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6457:4:10"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6327:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6339:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6350:4:10","type":""}],"src":"6237:313:10"},{"body":{"nodeType":"YulBlock","src":"6621:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6638:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6661:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6643:17:10"},"nodeType":"YulFunctionCall","src":"6643:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6631:6:10"},"nodeType":"YulFunctionCall","src":"6631:37:10"},"nodeType":"YulExpressionStatement","src":"6631:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6609:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6616:3:10","type":""}],"src":"6556:118:10"},{"body":{"nodeType":"YulBlock","src":"6778:124:10","statements":[{"nodeType":"YulAssignment","src":"6788:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6800:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6811:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6796:3:10"},"nodeType":"YulFunctionCall","src":"6796:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6788:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6868:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6881:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6892:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6877:3:10"},"nodeType":"YulFunctionCall","src":"6877:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6824:43:10"},"nodeType":"YulFunctionCall","src":"6824:71:10"},"nodeType":"YulExpressionStatement","src":"6824:71:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6750:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6762:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6773:4:10","type":""}],"src":"6680:222:10"},{"body":{"nodeType":"YulBlock","src":"6951:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"7008:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7017:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7020:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7010:6:10"},"nodeType":"YulFunctionCall","src":"7010:12:10"},"nodeType":"YulExpressionStatement","src":"7010:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6974:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6999:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6981:17:10"},"nodeType":"YulFunctionCall","src":"6981:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6971:2:10"},"nodeType":"YulFunctionCall","src":"6971:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6964:6:10"},"nodeType":"YulFunctionCall","src":"6964:43:10"},"nodeType":"YulIf","src":"6961:63:10"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6944:5:10","type":""}],"src":"6908:122:10"},{"body":{"nodeType":"YulBlock","src":"7099:80:10","statements":[{"nodeType":"YulAssignment","src":"7109:22:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7124:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7118:5:10"},"nodeType":"YulFunctionCall","src":"7118:13:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7109:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7167:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"7140:26:10"},"nodeType":"YulFunctionCall","src":"7140:33:10"},"nodeType":"YulExpressionStatement","src":"7140:33:10"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7077:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"7085:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7093:5:10","type":""}],"src":"7036:143:10"},{"body":{"nodeType":"YulBlock","src":"7262:274:10","statements":[{"body":{"nodeType":"YulBlock","src":"7308:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7310:77:10"},"nodeType":"YulFunctionCall","src":"7310:79:10"},"nodeType":"YulExpressionStatement","src":"7310:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7283:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"7292:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7279:3:10"},"nodeType":"YulFunctionCall","src":"7279:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"7304:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7275:3:10"},"nodeType":"YulFunctionCall","src":"7275:32:10"},"nodeType":"YulIf","src":"7272:119:10"},{"nodeType":"YulBlock","src":"7401:128:10","statements":[{"nodeType":"YulVariableDeclaration","src":"7416:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"7430:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7420:6:10","type":""}]},{"nodeType":"YulAssignment","src":"7445:74:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7491:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"7502:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7487:3:10"},"nodeType":"YulFunctionCall","src":"7487:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7511:7:10"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"7455:31:10"},"nodeType":"YulFunctionCall","src":"7455:64:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7445:6:10"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7232:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7243:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7255:6:10","type":""}],"src":"7185:351:10"},{"body":{"nodeType":"YulBlock","src":"7648:130:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7670:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"7678:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7666:3:10"},"nodeType":"YulFunctionCall","src":"7666:14:10"},{"hexValue":"4f6e6c792073616665277320776974682061207468726573686f6c64206f6620","kind":"string","nodeType":"YulLiteral","src":"7682:34:10","type":"","value":"Only safe's with a threshold of "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7659:6:10"},"nodeType":"YulFunctionCall","src":"7659:58:10"},"nodeType":"YulExpressionStatement","src":"7659:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7738:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"7746:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7734:3:10"},"nodeType":"YulFunctionCall","src":"7734:15:10"},{"hexValue":"6f6e652061726520737570706f72746564","kind":"string","nodeType":"YulLiteral","src":"7751:19:10","type":"","value":"one are supported"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7727:6:10"},"nodeType":"YulFunctionCall","src":"7727:44:10"},"nodeType":"YulExpressionStatement","src":"7727:44:10"}]},"name":"store_literal_in_memory_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7640:6:10","type":""}],"src":"7542:236:10"},{"body":{"nodeType":"YulBlock","src":"7930:220:10","statements":[{"nodeType":"YulAssignment","src":"7940:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8006:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"8011:2:10","type":"","value":"49"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7947:58:10"},"nodeType":"YulFunctionCall","src":"7947:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7940:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8112:3:10"}],"functionName":{"name":"store_literal_in_memory_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05","nodeType":"YulIdentifier","src":"8023:88:10"},"nodeType":"YulFunctionCall","src":"8023:93:10"},"nodeType":"YulExpressionStatement","src":"8023:93:10"},{"nodeType":"YulAssignment","src":"8125:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8136:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"8141:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8132:3:10"},"nodeType":"YulFunctionCall","src":"8132:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8125:3:10"}]}]},"name":"abi_encode_t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7918:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7926:3:10","type":""}],"src":"7784:366:10"},{"body":{"nodeType":"YulBlock","src":"8327:248:10","statements":[{"nodeType":"YulAssignment","src":"8337:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8349:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8360:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8345:3:10"},"nodeType":"YulFunctionCall","src":"8345:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8337:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8395:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:10"},"nodeType":"YulFunctionCall","src":"8380:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8403:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"8409:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8399:3:10"},"nodeType":"YulFunctionCall","src":"8399:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8373:6:10"},"nodeType":"YulFunctionCall","src":"8373:47:10"},"nodeType":"YulExpressionStatement","src":"8373:47:10"},{"nodeType":"YulAssignment","src":"8429:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8563:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8437:124:10"},"nodeType":"YulFunctionCall","src":"8437:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8429:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8307:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8322:4:10","type":""}],"src":"8156:419:10"},{"body":{"nodeType":"YulBlock","src":"8647:263:10","statements":[{"body":{"nodeType":"YulBlock","src":"8693:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8695:77:10"},"nodeType":"YulFunctionCall","src":"8695:79:10"},"nodeType":"YulExpressionStatement","src":"8695:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8668:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"8677:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8664:3:10"},"nodeType":"YulFunctionCall","src":"8664:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"8689:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8660:3:10"},"nodeType":"YulFunctionCall","src":"8660:32:10"},"nodeType":"YulIf","src":"8657:119:10"},{"nodeType":"YulBlock","src":"8786:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"8801:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"8815:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8805:6:10","type":""}]},{"nodeType":"YulAssignment","src":"8830:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8865:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"8876:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8861:3:10"},"nodeType":"YulFunctionCall","src":"8861:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8885:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8840:20:10"},"nodeType":"YulFunctionCall","src":"8840:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8830:6:10"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8617:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8628:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8640:6:10","type":""}],"src":"8581:329:10"},{"body":{"nodeType":"YulBlock","src":"8981:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8998:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9021:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9003:17:10"},"nodeType":"YulFunctionCall","src":"9003:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8991:6:10"},"nodeType":"YulFunctionCall","src":"8991:37:10"},"nodeType":"YulExpressionStatement","src":"8991:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8969:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8976:3:10","type":""}],"src":"8916:118:10"},{"body":{"nodeType":"YulBlock","src":"9138:124:10","statements":[{"nodeType":"YulAssignment","src":"9148:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9160:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9171:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9156:3:10"},"nodeType":"YulFunctionCall","src":"9156:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9148:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9228:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9241:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9252:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9237:3:10"},"nodeType":"YulFunctionCall","src":"9237:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9184:43:10"},"nodeType":"YulFunctionCall","src":"9184:71:10"},"nodeType":"YulExpressionStatement","src":"9184:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9110:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9122:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9133:4:10","type":""}],"src":"9040:222:10"},{"body":{"nodeType":"YulBlock","src":"9310:48:10","statements":[{"nodeType":"YulAssignment","src":"9320:32:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9345:5:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9338:6:10"},"nodeType":"YulFunctionCall","src":"9338:13:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9331:6:10"},"nodeType":"YulFunctionCall","src":"9331:21:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9320:7:10"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9292:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9302:7:10","type":""}],"src":"9268:90:10"},{"body":{"nodeType":"YulBlock","src":"9404:76:10","statements":[{"body":{"nodeType":"YulBlock","src":"9458:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9467:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9470:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9460:6:10"},"nodeType":"YulFunctionCall","src":"9460:12:10"},"nodeType":"YulExpressionStatement","src":"9460:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9427:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9449:5:10"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9434:14:10"},"nodeType":"YulFunctionCall","src":"9434:21:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9424:2:10"},"nodeType":"YulFunctionCall","src":"9424:32:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9417:6:10"},"nodeType":"YulFunctionCall","src":"9417:40:10"},"nodeType":"YulIf","src":"9414:60:10"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9397:5:10","type":""}],"src":"9364:116:10"},{"body":{"nodeType":"YulBlock","src":"9546:77:10","statements":[{"nodeType":"YulAssignment","src":"9556:22:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9571:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9565:5:10"},"nodeType":"YulFunctionCall","src":"9565:13:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9556:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9611:5:10"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"9587:23:10"},"nodeType":"YulFunctionCall","src":"9587:30:10"},"nodeType":"YulExpressionStatement","src":"9587:30:10"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9524:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"9532:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9540:5:10","type":""}],"src":"9486:137:10"},{"body":{"nodeType":"YulBlock","src":"9703:271:10","statements":[{"body":{"nodeType":"YulBlock","src":"9749:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9751:77:10"},"nodeType":"YulFunctionCall","src":"9751:79:10"},"nodeType":"YulExpressionStatement","src":"9751:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9724:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"9733:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9720:3:10"},"nodeType":"YulFunctionCall","src":"9720:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"9745:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9716:3:10"},"nodeType":"YulFunctionCall","src":"9716:32:10"},"nodeType":"YulIf","src":"9713:119:10"},{"nodeType":"YulBlock","src":"9842:125:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9857:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"9871:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9861:6:10","type":""}]},{"nodeType":"YulAssignment","src":"9886:71:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9929:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"9940:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9925:3:10"},"nodeType":"YulFunctionCall","src":"9925:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9949:7:10"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"9896:28:10"},"nodeType":"YulFunctionCall","src":"9896:61:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9886:6:10"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9673:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9684:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9696:6:10","type":""}],"src":"9629:345:10"},{"body":{"nodeType":"YulBlock","src":"10086:69:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10108:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"10116:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10104:3:10"},"nodeType":"YulFunctionCall","src":"10104:14:10"},{"hexValue":"4f776e6572206973206e6f7420612073616665206f776e6572","kind":"string","nodeType":"YulLiteral","src":"10120:27:10","type":"","value":"Owner is not a safe owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10097:6:10"},"nodeType":"YulFunctionCall","src":"10097:51:10"},"nodeType":"YulExpressionStatement","src":"10097:51:10"}]},"name":"store_literal_in_memory_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10078:6:10","type":""}],"src":"9980:175:10"},{"body":{"nodeType":"YulBlock","src":"10307:220:10","statements":[{"nodeType":"YulAssignment","src":"10317:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10383:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"10388:2:10","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10324:58:10"},"nodeType":"YulFunctionCall","src":"10324:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10317:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10489:3:10"}],"functionName":{"name":"store_literal_in_memory_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b","nodeType":"YulIdentifier","src":"10400:88:10"},"nodeType":"YulFunctionCall","src":"10400:93:10"},"nodeType":"YulExpressionStatement","src":"10400:93:10"},{"nodeType":"YulAssignment","src":"10502:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10513:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"10518:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10509:3:10"},"nodeType":"YulFunctionCall","src":"10509:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10502:3:10"}]}]},"name":"abi_encode_t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10295:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10303:3:10","type":""}],"src":"10161:366:10"},{"body":{"nodeType":"YulBlock","src":"10704:248:10","statements":[{"nodeType":"YulAssignment","src":"10714:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10726:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10737:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10722:3:10"},"nodeType":"YulFunctionCall","src":"10722:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10714:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10761:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10772:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10757:3:10"},"nodeType":"YulFunctionCall","src":"10757:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10780:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"10786:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10776:3:10"},"nodeType":"YulFunctionCall","src":"10776:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10750:6:10"},"nodeType":"YulFunctionCall","src":"10750:47:10"},"nodeType":"YulExpressionStatement","src":"10750:47:10"},{"nodeType":"YulAssignment","src":"10806:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10940:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10814:124:10"},"nodeType":"YulFunctionCall","src":"10814:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10806:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10684:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10699:4:10","type":""}],"src":"10533:419:10"},{"body":{"nodeType":"YulBlock","src":"11011:32:10","statements":[{"nodeType":"YulAssignment","src":"11021:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"11032:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11021:7:10"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10993:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11003:7:10","type":""}],"src":"10958:85:10"},{"body":{"nodeType":"YulBlock","src":"11092:43:10","statements":[{"nodeType":"YulAssignment","src":"11102:27:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11117:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"11124:4:10","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11113:3:10"},"nodeType":"YulFunctionCall","src":"11113:16:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11102:7:10"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11074:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11084:7:10","type":""}],"src":"11049:86:10"},{"body":{"nodeType":"YulBlock","src":"11173:28:10","statements":[{"nodeType":"YulAssignment","src":"11183:12:10","value":{"name":"value","nodeType":"YulIdentifier","src":"11190:5:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11183:3:10"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11159:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11169:3:10","type":""}],"src":"11141:60:10"},{"body":{"nodeType":"YulBlock","src":"11273:88:10","statements":[{"nodeType":"YulAssignment","src":"11283:72:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11347:5:10"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"11321:25:10"},"nodeType":"YulFunctionCall","src":"11321:32:10"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"11312:8:10"},"nodeType":"YulFunctionCall","src":"11312:42:10"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"11296:15:10"},"nodeType":"YulFunctionCall","src":"11296:59:10"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"11283:9:10"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11253:5:10","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"11263:9:10","type":""}],"src":"11207:154:10"},{"body":{"nodeType":"YulBlock","src":"11438:72:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11455:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11497:5:10"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"11460:36:10"},"nodeType":"YulFunctionCall","src":"11460:43:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11448:6:10"},"nodeType":"YulFunctionCall","src":"11448:56:10"},"nodeType":"YulExpressionStatement","src":"11448:56:10"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11426:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11433:3:10","type":""}],"src":"11367:143:10"},{"body":{"nodeType":"YulBlock","src":"11648:212:10","statements":[{"nodeType":"YulAssignment","src":"11658:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11670:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11681:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11666:3:10"},"nodeType":"YulFunctionCall","src":"11666:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11658:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11738:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11751:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11762:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11747:3:10"},"nodeType":"YulFunctionCall","src":"11747:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11694:43:10"},"nodeType":"YulFunctionCall","src":"11694:71:10"},"nodeType":"YulExpressionStatement","src":"11694:71:10"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11825:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11838:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11849:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11834:3:10"},"nodeType":"YulFunctionCall","src":"11834:18:10"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"11775:49:10"},"nodeType":"YulFunctionCall","src":"11775:78:10"},"nodeType":"YulExpressionStatement","src":"11775:78:10"}]},"name":"abi_encode_tuple_t_address_t_rational_1_by_1__to_t_address_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11612:9:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11624:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11632:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11643:4:10","type":""}],"src":"11516:344:10"},{"body":{"nodeType":"YulBlock","src":"11919:32:10","statements":[{"nodeType":"YulAssignment","src":"11929:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"11940:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11929:7:10"}]}]},"name":"cleanup_t_rational_0_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11901:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11911:7:10","type":""}],"src":"11866:85:10"},{"body":{"nodeType":"YulBlock","src":"12025:90:10","statements":[{"nodeType":"YulAssignment","src":"12035:74:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12101:5:10"}],"functionName":{"name":"cleanup_t_rational_0_by_1","nodeType":"YulIdentifier","src":"12075:25:10"},"nodeType":"YulFunctionCall","src":"12075:32:10"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"12066:8:10"},"nodeType":"YulFunctionCall","src":"12066:42:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12048:17:10"},"nodeType":"YulFunctionCall","src":"12048:61:10"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12035:9:10"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12005:5:10","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12015:9:10","type":""}],"src":"11957:158:10"},{"body":{"nodeType":"YulBlock","src":"12194:74:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12211:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12255:5:10"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"12216:38:10"},"nodeType":"YulFunctionCall","src":"12216:45:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12204:6:10"},"nodeType":"YulFunctionCall","src":"12204:58:10"},"nodeType":"YulExpressionStatement","src":"12204:58:10"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12182:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12189:3:10","type":""}],"src":"12121:147:10"},{"body":{"nodeType":"YulBlock","src":"12332:40:10","statements":[{"nodeType":"YulAssignment","src":"12343:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12359:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12353:5:10"},"nodeType":"YulFunctionCall","src":"12353:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12343:6:10"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12315:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12325:6:10","type":""}],"src":"12274:98:10"},{"body":{"nodeType":"YulBlock","src":"12473:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12490:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"12495:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12483:6:10"},"nodeType":"YulFunctionCall","src":"12483:19:10"},"nodeType":"YulExpressionStatement","src":"12483:19:10"},{"nodeType":"YulAssignment","src":"12511:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12530:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"12535:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12526:3:10"},"nodeType":"YulFunctionCall","src":"12526:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12511:11:10"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12445:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"12450:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12461:11:10","type":""}],"src":"12378:168:10"},{"body":{"nodeType":"YulBlock","src":"12642:283:10","statements":[{"nodeType":"YulVariableDeclaration","src":"12652:52:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12698:5:10"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12666:31:10"},"nodeType":"YulFunctionCall","src":"12666:38:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12656:6:10","type":""}]},{"nodeType":"YulAssignment","src":"12713:77:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12778:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"12783:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12720:57:10"},"nodeType":"YulFunctionCall","src":"12720:70:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12713:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12838:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"12845:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12834:3:10"},"nodeType":"YulFunctionCall","src":"12834:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"12852:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"12857:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12799:34:10"},"nodeType":"YulFunctionCall","src":"12799:65:10"},"nodeType":"YulExpressionStatement","src":"12799:65:10"},{"nodeType":"YulAssignment","src":"12873:46:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12884:3:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12911:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"12889:21:10"},"nodeType":"YulFunctionCall","src":"12889:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12880:3:10"},"nodeType":"YulFunctionCall","src":"12880:39:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12873:3:10"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12623:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12630:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12638:3:10","type":""}],"src":"12552:373:10"},{"body":{"nodeType":"YulBlock","src":"12959:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12976:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12979:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12969:6:10"},"nodeType":"YulFunctionCall","src":"12969:88:10"},"nodeType":"YulExpressionStatement","src":"12969:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13073:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13076:4:10","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13066:6:10"},"nodeType":"YulFunctionCall","src":"13066:15:10"},"nodeType":"YulExpressionStatement","src":"13066:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13097:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13100:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13090:6:10"},"nodeType":"YulFunctionCall","src":"13090:15:10"},"nodeType":"YulExpressionStatement","src":"13090:15:10"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"12931:180:10"},{"body":{"nodeType":"YulBlock","src":"13174:62:10","statements":[{"body":{"nodeType":"YulBlock","src":"13208:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"13210:16:10"},"nodeType":"YulFunctionCall","src":"13210:18:10"},"nodeType":"YulExpressionStatement","src":"13210:18:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13197:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"13204:1:10","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13194:2:10"},"nodeType":"YulFunctionCall","src":"13194:12:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13187:6:10"},"nodeType":"YulFunctionCall","src":"13187:20:10"},"nodeType":"YulIf","src":"13184:46:10"}]},"name":"validator_assert_t_enum$_Operation_$2032","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13167:5:10","type":""}],"src":"13117:119:10"},{"body":{"nodeType":"YulBlock","src":"13301:80:10","statements":[{"nodeType":"YulAssignment","src":"13311:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"13322:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13311:7:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13369:5:10"}],"functionName":{"name":"validator_assert_t_enum$_Operation_$2032","nodeType":"YulIdentifier","src":"13328:40:10"},"nodeType":"YulFunctionCall","src":"13328:47:10"},"nodeType":"YulExpressionStatement","src":"13328:47:10"}]},"name":"cleanup_t_enum$_Operation_$2032","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13283:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13293:7:10","type":""}],"src":"13242:139:10"},{"body":{"nodeType":"YulBlock","src":"13459:67:10","statements":[{"nodeType":"YulAssignment","src":"13469:51:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13514:5:10"}],"functionName":{"name":"cleanup_t_enum$_Operation_$2032","nodeType":"YulIdentifier","src":"13482:31:10"},"nodeType":"YulFunctionCall","src":"13482:38:10"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"13469:9:10"}]}]},"name":"convert_t_enum$_Operation_$2032_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13439:5:10","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"13449:9:10","type":""}],"src":"13387:139:10"},{"body":{"nodeType":"YulBlock","src":"13609:78:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13626:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13674:5:10"}],"functionName":{"name":"convert_t_enum$_Operation_$2032_to_t_uint8","nodeType":"YulIdentifier","src":"13631:42:10"},"nodeType":"YulFunctionCall","src":"13631:49:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13619:6:10"},"nodeType":"YulFunctionCall","src":"13619:62:10"},"nodeType":"YulExpressionStatement","src":"13619:62:10"}]},"name":"abi_encode_t_enum$_Operation_$2032_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13597:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13604:3:10","type":""}],"src":"13532:155:10"},{"body":{"nodeType":"YulBlock","src":"13913:460:10","statements":[{"nodeType":"YulAssignment","src":"13923:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13935:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"13946:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13931:3:10"},"nodeType":"YulFunctionCall","src":"13931:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13923:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14004:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14017:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14028:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14013:3:10"},"nodeType":"YulFunctionCall","src":"14013:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13960:43:10"},"nodeType":"YulFunctionCall","src":"13960:71:10"},"nodeType":"YulExpressionStatement","src":"13960:71:10"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14093:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14106:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14117:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14102:3:10"},"nodeType":"YulFunctionCall","src":"14102:18:10"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14041:51:10"},"nodeType":"YulFunctionCall","src":"14041:80:10"},"nodeType":"YulExpressionStatement","src":"14041:80:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14142:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14153:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14138:3:10"},"nodeType":"YulFunctionCall","src":"14138:18:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14162:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"14168:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14158:3:10"},"nodeType":"YulFunctionCall","src":"14158:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14131:6:10"},"nodeType":"YulFunctionCall","src":"14131:48:10"},"nodeType":"YulExpressionStatement","src":"14131:48:10"},{"nodeType":"YulAssignment","src":"14188:84:10","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14258:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"14267:4:10"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14196:61:10"},"nodeType":"YulFunctionCall","src":"14196:76:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14188:4:10"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14338:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14351:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14362:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14347:3:10"},"nodeType":"YulFunctionCall","src":"14347:18:10"}],"functionName":{"name":"abi_encode_t_enum$_Operation_$2032_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"14282:55:10"},"nodeType":"YulFunctionCall","src":"14282:84:10"},"nodeType":"YulExpressionStatement","src":"14282:84:10"}]},"name":"abi_encode_tuple_t_address_t_rational_0_by_1_t_bytes_memory_ptr_t_enum$_Operation_$2032__to_t_address_t_uint256_t_bytes_memory_ptr_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13861:9:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13873:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13881:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13889:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13897:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13908:4:10","type":""}],"src":"13693:680:10"},{"body":{"nodeType":"YulBlock","src":"14407:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14424:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14427:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14417:6:10"},"nodeType":"YulFunctionCall","src":"14417:88:10"},"nodeType":"YulExpressionStatement","src":"14417:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14521:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14524:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14514:6:10"},"nodeType":"YulFunctionCall","src":"14514:15:10"},"nodeType":"YulExpressionStatement","src":"14514:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14545:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14548:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14538:6:10"},"nodeType":"YulFunctionCall","src":"14538:15:10"},"nodeType":"YulExpressionStatement","src":"14538:15:10"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14379:180:10"},{"body":{"nodeType":"YulBlock","src":"14610:149:10","statements":[{"nodeType":"YulAssignment","src":"14620:25:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14643:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14625:17:10"},"nodeType":"YulFunctionCall","src":"14625:20:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14620:1:10"}]},{"nodeType":"YulAssignment","src":"14654:25:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14677:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14659:17:10"},"nodeType":"YulFunctionCall","src":"14659:20:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14654:1:10"}]},{"nodeType":"YulAssignment","src":"14688:17:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14700:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"14703:1:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14696:3:10"},"nodeType":"YulFunctionCall","src":"14696:9:10"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"14688:4:10"}]},{"body":{"nodeType":"YulBlock","src":"14730:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14732:16:10"},"nodeType":"YulFunctionCall","src":"14732:18:10"},"nodeType":"YulExpressionStatement","src":"14732:18:10"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"14721:4:10"},{"name":"x","nodeType":"YulIdentifier","src":"14727:1:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14718:2:10"},"nodeType":"YulFunctionCall","src":"14718:11:10"},"nodeType":"YulIf","src":"14715:37:10"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14596:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"14599:1:10","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"14605:4:10","type":""}],"src":"14565:194:10"},{"body":{"nodeType":"YulBlock","src":"14793:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14810:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14813:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14803:6:10"},"nodeType":"YulFunctionCall","src":"14803:88:10"},"nodeType":"YulExpressionStatement","src":"14803:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14907:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14910:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14900:6:10"},"nodeType":"YulFunctionCall","src":"14900:15:10"},"nodeType":"YulExpressionStatement","src":"14900:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14931:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14934:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14924:6:10"},"nodeType":"YulFunctionCall","src":"14924:15:10"},"nodeType":"YulExpressionStatement","src":"14924:15:10"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"14765:180:10"},{"body":{"nodeType":"YulBlock","src":"15002:269:10","statements":[{"nodeType":"YulAssignment","src":"15012:22:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15026:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"15032:1:10","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15022:3:10"},"nodeType":"YulFunctionCall","src":"15022:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15012:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"15043:38:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15073:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"15079:1:10","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15069:3:10"},"nodeType":"YulFunctionCall","src":"15069:12:10"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"15047:18:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"15120:51:10","statements":[{"nodeType":"YulAssignment","src":"15134:27:10","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15148:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"15156:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15144:3:10"},"nodeType":"YulFunctionCall","src":"15144:17:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15134:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15100:18:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15093:6:10"},"nodeType":"YulFunctionCall","src":"15093:26:10"},"nodeType":"YulIf","src":"15090:81:10"},{"body":{"nodeType":"YulBlock","src":"15223:42:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"15237:16:10"},"nodeType":"YulFunctionCall","src":"15237:18:10"},"nodeType":"YulExpressionStatement","src":"15237:18:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15187:18:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15210:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"15218:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15207:2:10"},"nodeType":"YulFunctionCall","src":"15207:14:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15184:2:10"},"nodeType":"YulFunctionCall","src":"15184:38:10"},"nodeType":"YulIf","src":"15181:84:10"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14986:4:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"14995:6:10","type":""}],"src":"14951:320:10"},{"body":{"nodeType":"YulBlock","src":"15383:61:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15405:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"15413:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15401:3:10"},"nodeType":"YulFunctionCall","src":"15401:14:10"},{"hexValue":"696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"15417:19:10","type":"","value":"invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15394:6:10"},"nodeType":"YulFunctionCall","src":"15394:43:10"},"nodeType":"YulExpressionStatement","src":"15394:43:10"}]},"name":"store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15375:6:10","type":""}],"src":"15277:167:10"},{"body":{"nodeType":"YulBlock","src":"15596:220:10","statements":[{"nodeType":"YulAssignment","src":"15606:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15672:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15677:2:10","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15613:58:10"},"nodeType":"YulFunctionCall","src":"15613:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15606:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15778:3:10"}],"functionName":{"name":"store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a","nodeType":"YulIdentifier","src":"15689:88:10"},"nodeType":"YulFunctionCall","src":"15689:93:10"},"nodeType":"YulExpressionStatement","src":"15689:93:10"},{"nodeType":"YulAssignment","src":"15791:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15802:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15807:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15798:3:10"},"nodeType":"YulFunctionCall","src":"15798:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15791:3:10"}]}]},"name":"abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15584:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15592:3:10","type":""}],"src":"15450:366:10"},{"body":{"nodeType":"YulBlock","src":"15993:248:10","statements":[{"nodeType":"YulAssignment","src":"16003:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16015:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16026:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16011:3:10"},"nodeType":"YulFunctionCall","src":"16011:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16003:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16050:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16061:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16046:3:10"},"nodeType":"YulFunctionCall","src":"16046:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16069:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"16075:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16065:3:10"},"nodeType":"YulFunctionCall","src":"16065:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16039:6:10"},"nodeType":"YulFunctionCall","src":"16039:47:10"},"nodeType":"YulExpressionStatement","src":"16039:47:10"},{"nodeType":"YulAssignment","src":"16095:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16229:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16103:124:10"},"nodeType":"YulFunctionCall","src":"16103:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16095:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15973:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15988:4:10","type":""}],"src":"15822:419:10"},{"body":{"nodeType":"YulBlock","src":"16353:62:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16375:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"16383:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16371:3:10"},"nodeType":"YulFunctionCall","src":"16371:14:10"},{"hexValue":"5265717565737420697320746f6f206f6c64","kind":"string","nodeType":"YulLiteral","src":"16387:20:10","type":"","value":"Request is too old"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16364:6:10"},"nodeType":"YulFunctionCall","src":"16364:44:10"},"nodeType":"YulExpressionStatement","src":"16364:44:10"}]},"name":"store_literal_in_memory_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16345:6:10","type":""}],"src":"16247:168:10"},{"body":{"nodeType":"YulBlock","src":"16567:220:10","statements":[{"nodeType":"YulAssignment","src":"16577:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16643:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"16648:2:10","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16584:58:10"},"nodeType":"YulFunctionCall","src":"16584:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16577:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16749:3:10"}],"functionName":{"name":"store_literal_in_memory_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5","nodeType":"YulIdentifier","src":"16660:88:10"},"nodeType":"YulFunctionCall","src":"16660:93:10"},"nodeType":"YulExpressionStatement","src":"16660:93:10"},{"nodeType":"YulAssignment","src":"16762:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16773:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"16778:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16769:3:10"},"nodeType":"YulFunctionCall","src":"16769:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16762:3:10"}]}]},"name":"abi_encode_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16555:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16563:3:10","type":""}],"src":"16421:366:10"},{"body":{"nodeType":"YulBlock","src":"16964:248:10","statements":[{"nodeType":"YulAssignment","src":"16974:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16986:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16997:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16982:3:10"},"nodeType":"YulFunctionCall","src":"16982:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16974:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17021:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"17032:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17017:3:10"},"nodeType":"YulFunctionCall","src":"17017:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17040:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"17046:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17036:3:10"},"nodeType":"YulFunctionCall","src":"17036:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17010:6:10"},"nodeType":"YulFunctionCall","src":"17010:47:10"},"nodeType":"YulExpressionStatement","src":"17010:47:10"},{"nodeType":"YulAssignment","src":"17066:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17200:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17074:124:10"},"nodeType":"YulFunctionCall","src":"17074:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17066:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16944:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16959:4:10","type":""}],"src":"16793:419:10"},{"body":{"nodeType":"YulBlock","src":"17332:34:10","statements":[{"nodeType":"YulAssignment","src":"17342:18:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"17357:3:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17342:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17304:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"17309:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17320:11:10","type":""}],"src":"17218:148:10"},{"body":{"nodeType":"YulBlock","src":"17426:87:10","statements":[{"nodeType":"YulAssignment","src":"17436:11:10","value":{"name":"ptr","nodeType":"YulIdentifier","src":"17444:3:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17436:4:10"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17464:1:10","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"17467:3:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17457:6:10"},"nodeType":"YulFunctionCall","src":"17457:14:10"},"nodeType":"YulExpressionStatement","src":"17457:14:10"},{"nodeType":"YulAssignment","src":"17480:26:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17498:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17501:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17488:9:10"},"nodeType":"YulFunctionCall","src":"17488:18:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17480:4:10"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"17413:3:10","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"17421:4:10","type":""}],"src":"17372:141:10"},{"body":{"nodeType":"YulBlock","src":"17650:767:10","statements":[{"nodeType":"YulVariableDeclaration","src":"17660:29:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17683:5:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"17677:5:10"},"nodeType":"YulFunctionCall","src":"17677:12:10"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"17664:9:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17698:50:10","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"17738:9:10"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"17712:25:10"},"nodeType":"YulFunctionCall","src":"17712:36:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17702:6:10","type":""}]},{"nodeType":"YulAssignment","src":"17757:96:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17841:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"17846:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17764:76:10"},"nodeType":"YulFunctionCall","src":"17764:89:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17757:3:10"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"17902:159:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17955:3:10"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"17964:9:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17979:4:10","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17975:3:10"},"nodeType":"YulFunctionCall","src":"17975:9:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17960:3:10"},"nodeType":"YulFunctionCall","src":"17960:25:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17948:6:10"},"nodeType":"YulFunctionCall","src":"17948:38:10"},"nodeType":"YulExpressionStatement","src":"17948:38:10"},{"nodeType":"YulAssignment","src":"17999:52:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18010:3:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18019:6:10"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18041:6:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18034:6:10"},"nodeType":"YulFunctionCall","src":"18034:14:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18027:6:10"},"nodeType":"YulFunctionCall","src":"18027:22:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18015:3:10"},"nodeType":"YulFunctionCall","src":"18015:35:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18006:3:10"},"nodeType":"YulFunctionCall","src":"18006:45:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17999:3:10"}]}]},"nodeType":"YulCase","src":"17895:166:10","value":{"kind":"number","nodeType":"YulLiteral","src":"17900:1:10","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"18077:334:10","statements":[{"nodeType":"YulVariableDeclaration","src":"18122:53:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18169:5:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"18137:31:10"},"nodeType":"YulFunctionCall","src":"18137:38:10"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"18126:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18188:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"18197:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18192:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"18255:110:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18284:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"18289:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18280:3:10"},"nodeType":"YulFunctionCall","src":"18280:11:10"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"18299:7:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18293:5:10"},"nodeType":"YulFunctionCall","src":"18293:14:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18273:6:10"},"nodeType":"YulFunctionCall","src":"18273:35:10"},"nodeType":"YulExpressionStatement","src":"18273:35:10"},{"nodeType":"YulAssignment","src":"18325:26:10","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"18340:7:10"},{"kind":"number","nodeType":"YulLiteral","src":"18349:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18336:3:10"},"nodeType":"YulFunctionCall","src":"18336:15:10"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"18325:7:10"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18222:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"18225:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18219:2:10"},"nodeType":"YulFunctionCall","src":"18219:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18233:21:10","statements":[{"nodeType":"YulAssignment","src":"18235:17:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18244:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"18247:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18240:3:10"},"nodeType":"YulFunctionCall","src":"18240:12:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18235:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"18215:3:10","statements":[]},"src":"18211:154:10"},{"nodeType":"YulAssignment","src":"18378:23:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18389:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"18394:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18385:3:10"},"nodeType":"YulFunctionCall","src":"18385:16:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18378:3:10"}]}]},"nodeType":"YulCase","src":"18070:341:10","value":{"kind":"number","nodeType":"YulLiteral","src":"18075:1:10","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"17873:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"17884:1:10","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17869:3:10"},"nodeType":"YulFunctionCall","src":"17869:17:10"},"nodeType":"YulSwitch","src":"17862:549:10"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17631:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17638:3:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"17646:3:10","type":""}],"src":"17543:874:10"},{"body":{"nodeType":"YulBlock","src":"18529:108:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18551:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"18559:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18547:3:10"},"nodeType":"YulFunctionCall","src":"18547:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"18563:66:10","type":"","value":"0x0a0a4d653a200000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18540:6:10"},"nodeType":"YulFunctionCall","src":"18540:90:10"},"nodeType":"YulExpressionStatement","src":"18540:90:10"}]},"name":"store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18521:6:10","type":""}],"src":"18423:214:10"},{"body":{"nodeType":"YulBlock","src":"18807:236:10","statements":[{"nodeType":"YulAssignment","src":"18817:91:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18901:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18906:1:10","type":"","value":"6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18824:76:10"},"nodeType":"YulFunctionCall","src":"18824:84:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18817:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19006:3:10"}],"functionName":{"name":"store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262","nodeType":"YulIdentifier","src":"18917:88:10"},"nodeType":"YulFunctionCall","src":"18917:93:10"},"nodeType":"YulExpressionStatement","src":"18917:93:10"},{"nodeType":"YulAssignment","src":"19019:18:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19030:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"19035:1:10","type":"","value":"6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19026:3:10"},"nodeType":"YulFunctionCall","src":"19026:11:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19019:3:10"}]}]},"name":"abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18795:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18803:3:10","type":""}],"src":"18643:400:10"},{"body":{"nodeType":"YulBlock","src":"19159:280:10","statements":[{"nodeType":"YulVariableDeclaration","src":"19169:53:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19216:5:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19183:32:10"},"nodeType":"YulFunctionCall","src":"19183:39:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"19173:6:10","type":""}]},{"nodeType":"YulAssignment","src":"19231:96:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19315:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"19320:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19238:76:10"},"nodeType":"YulFunctionCall","src":"19238:89:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19231:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19375:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"19382:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19371:3:10"},"nodeType":"YulFunctionCall","src":"19371:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"19389:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"19394:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"19336:34:10"},"nodeType":"YulFunctionCall","src":"19336:65:10"},"nodeType":"YulExpressionStatement","src":"19336:65:10"},{"nodeType":"YulAssignment","src":"19410:23:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19421:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"19426:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19417:3:10"},"nodeType":"YulFunctionCall","src":"19417:16:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19410:3:10"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19140:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19147:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19155:3:10","type":""}],"src":"19049:390:10"},{"body":{"nodeType":"YulBlock","src":"19551:108:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19573:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"19581:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19569:3:10"},"nodeType":"YulFunctionCall","src":"19569:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"19585:66:10","type":"","value":"0x0a4465766963653a200000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19562:6:10"},"nodeType":"YulFunctionCall","src":"19562:90:10"},"nodeType":"YulExpressionStatement","src":"19562:90:10"}]},"name":"store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19543:6:10","type":""}],"src":"19445:214:10"},{"body":{"nodeType":"YulBlock","src":"19829:236:10","statements":[{"nodeType":"YulAssignment","src":"19839:91:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19923:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"19928:1:10","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19846:76:10"},"nodeType":"YulFunctionCall","src":"19846:84:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19839:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20028:3:10"}],"functionName":{"name":"store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60","nodeType":"YulIdentifier","src":"19939:88:10"},"nodeType":"YulFunctionCall","src":"19939:93:10"},"nodeType":"YulExpressionStatement","src":"19939:93:10"},{"nodeType":"YulAssignment","src":"20041:18:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20052:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"20057:1:10","type":"","value":"9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20048:3:10"},"nodeType":"YulFunctionCall","src":"20048:11:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20041:3:10"}]}]},"name":"abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19817:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19825:3:10","type":""}],"src":"19665:400:10"},{"body":{"nodeType":"YulBlock","src":"20177:108:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20199:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"20207:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20195:3:10"},"nodeType":"YulFunctionCall","src":"20195:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"20211:66:10","type":"","value":"0x0a4973737565642061743a200000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20188:6:10"},"nodeType":"YulFunctionCall","src":"20188:90:10"},"nodeType":"YulExpressionStatement","src":"20188:90:10"}]},"name":"store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20169:6:10","type":""}],"src":"20071:214:10"},{"body":{"nodeType":"YulBlock","src":"20455:238:10","statements":[{"nodeType":"YulAssignment","src":"20465:92:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20549:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"20554:2:10","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20472:76:10"},"nodeType":"YulFunctionCall","src":"20472:85:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20465:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20655:3:10"}],"functionName":{"name":"store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb","nodeType":"YulIdentifier","src":"20566:88:10"},"nodeType":"YulFunctionCall","src":"20566:93:10"},"nodeType":"YulExpressionStatement","src":"20566:93:10"},{"nodeType":"YulAssignment","src":"20668:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20679:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"20684:2:10","type":"","value":"12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20675:3:10"},"nodeType":"YulFunctionCall","src":"20675:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20668:3:10"}]}]},"name":"abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20443:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20451:3:10","type":""}],"src":"20291:402:10"},{"body":{"nodeType":"YulBlock","src":"21279:967:10","statements":[{"nodeType":"YulAssignment","src":"21290:99:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21376:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"21385:3:10"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21297:78:10"},"nodeType":"YulFunctionCall","src":"21297:92:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21290:3:10"}]},{"nodeType":"YulAssignment","src":"21399:155:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21550:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21406:142:10"},"nodeType":"YulFunctionCall","src":"21406:148:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21399:3:10"}]},{"nodeType":"YulAssignment","src":"21564:102:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21653:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"21662:3:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21571:81:10"},"nodeType":"YulFunctionCall","src":"21571:95:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21564:3:10"}]},{"nodeType":"YulAssignment","src":"21676:155:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21827:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21683:142:10"},"nodeType":"YulFunctionCall","src":"21683:148:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21676:3:10"}]},{"nodeType":"YulAssignment","src":"21841:102:10","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21930:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"21939:3:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21848:81:10"},"nodeType":"YulFunctionCall","src":"21848:95:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21841:3:10"}]},{"nodeType":"YulAssignment","src":"21953:155:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22104:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21960:142:10"},"nodeType":"YulFunctionCall","src":"21960:148:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21953:3:10"}]},{"nodeType":"YulAssignment","src":"22118:102:10","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22207:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"22216:3:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22125:81:10"},"nodeType":"YulFunctionCall","src":"22125:95:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22118:3:10"}]},{"nodeType":"YulAssignment","src":"22230:10:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"22237:3:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22230:3:10"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_t_string_memory_ptr_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_t_string_memory_ptr_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21234:3:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21240:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21248:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21256:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21264:6:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21275:3:10","type":""}],"src":"20699:1547:10"},{"body":{"nodeType":"YulBlock","src":"22341:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22358:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22361:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22351:6:10"},"nodeType":"YulFunctionCall","src":"22351:12:10"},"nodeType":"YulExpressionStatement","src":"22351:12:10"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"22252:117:10"},{"body":{"nodeType":"YulBlock","src":"22403:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22420:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22423:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22413:6:10"},"nodeType":"YulFunctionCall","src":"22413:88:10"},"nodeType":"YulExpressionStatement","src":"22413:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22517:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22520:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22510:6:10"},"nodeType":"YulFunctionCall","src":"22510:15:10"},"nodeType":"YulExpressionStatement","src":"22510:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22541:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22544:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22534:6:10"},"nodeType":"YulFunctionCall","src":"22534:15:10"},"nodeType":"YulExpressionStatement","src":"22534:15:10"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"22375:180:10"},{"body":{"nodeType":"YulBlock","src":"22604:238:10","statements":[{"nodeType":"YulVariableDeclaration","src":"22614:58:10","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22636:6:10"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"22666:4:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"22644:21:10"},"nodeType":"YulFunctionCall","src":"22644:27:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22632:3:10"},"nodeType":"YulFunctionCall","src":"22632:40:10"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"22618:10:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"22783:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"22785:16:10"},"nodeType":"YulFunctionCall","src":"22785:18:10"},"nodeType":"YulExpressionStatement","src":"22785:18:10"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"22726:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"22738:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22723:2:10"},"nodeType":"YulFunctionCall","src":"22723:34:10"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"22762:10:10"},{"name":"memPtr","nodeType":"YulIdentifier","src":"22774:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22759:2:10"},"nodeType":"YulFunctionCall","src":"22759:22:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"22720:2:10"},"nodeType":"YulFunctionCall","src":"22720:62:10"},"nodeType":"YulIf","src":"22717:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22821:2:10","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"22825:10:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22814:6:10"},"nodeType":"YulFunctionCall","src":"22814:22:10"},"nodeType":"YulExpressionStatement","src":"22814:22:10"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22590:6:10","type":""},{"name":"size","nodeType":"YulTypedName","src":"22598:4:10","type":""}],"src":"22561:281:10"},{"body":{"nodeType":"YulBlock","src":"22889:88:10","statements":[{"nodeType":"YulAssignment","src":"22899:30:10","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"22909:18:10"},"nodeType":"YulFunctionCall","src":"22909:20:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22899:6:10"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22958:6:10"},{"name":"size","nodeType":"YulIdentifier","src":"22966:4:10"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"22938:19:10"},"nodeType":"YulFunctionCall","src":"22938:33:10"},"nodeType":"YulExpressionStatement","src":"22938:33:10"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"22873:4:10","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"22882:6:10","type":""}],"src":"22848:129:10"},{"body":{"nodeType":"YulBlock","src":"23072:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23089:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23092:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23082:6:10"},"nodeType":"YulFunctionCall","src":"23082:12:10"},"nodeType":"YulExpressionStatement","src":"23082:12:10"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"22983:117:10"},{"body":{"nodeType":"YulBlock","src":"23158:87:10","statements":[{"nodeType":"YulAssignment","src":"23168:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23190:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23177:12:10"},"nodeType":"YulFunctionCall","src":"23177:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23168:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23233:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"23206:26:10"},"nodeType":"YulFunctionCall","src":"23206:33:10"},"nodeType":"YulExpressionStatement","src":"23206:33:10"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"23136:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"23144:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"23152:5:10","type":""}],"src":"23106:139:10"},{"body":{"nodeType":"YulBlock","src":"23382:662:10","statements":[{"body":{"nodeType":"YulBlock","src":"23426:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"23428:77:10"},"nodeType":"YulFunctionCall","src":"23428:79:10"},"nodeType":"YulExpressionStatement","src":"23428:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"23403:3:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"23408:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23399:3:10"},"nodeType":"YulFunctionCall","src":"23399:19:10"},{"kind":"number","nodeType":"YulLiteral","src":"23420:4:10","type":"","value":"0x60"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23395:3:10"},"nodeType":"YulFunctionCall","src":"23395:30:10"},"nodeType":"YulIf","src":"23392:117:10"},{"nodeType":"YulAssignment","src":"23518:30:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23543:4:10","type":"","value":"0x60"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"23527:15:10"},"nodeType":"YulFunctionCall","src":"23527:21:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23518:5:10"}]},{"nodeType":"YulBlock","src":"23558:151:10","statements":[{"nodeType":"YulVariableDeclaration","src":"23594:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"23608:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23598:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23634:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"23641:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23630:3:10"},"nodeType":"YulFunctionCall","src":"23630:16:10"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23673:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"23684:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23669:3:10"},"nodeType":"YulFunctionCall","src":"23669:22:10"},{"name":"end","nodeType":"YulIdentifier","src":"23693:3:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"23648:20:10"},"nodeType":"YulFunctionCall","src":"23648:49:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23623:6:10"},"nodeType":"YulFunctionCall","src":"23623:75:10"},"nodeType":"YulExpressionStatement","src":"23623:75:10"}]},{"nodeType":"YulBlock","src":"23719:153:10","statements":[{"nodeType":"YulVariableDeclaration","src":"23756:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"23770:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23760:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23797:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"23804:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23793:3:10"},"nodeType":"YulFunctionCall","src":"23793:16:10"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23836:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"23847:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23832:3:10"},"nodeType":"YulFunctionCall","src":"23832:22:10"},{"name":"end","nodeType":"YulIdentifier","src":"23856:3:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"23811:20:10"},"nodeType":"YulFunctionCall","src":"23811:49:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23786:6:10"},"nodeType":"YulFunctionCall","src":"23786:75:10"},"nodeType":"YulExpressionStatement","src":"23786:75:10"}]},{"nodeType":"YulBlock","src":"23882:155:10","statements":[{"nodeType":"YulVariableDeclaration","src":"23921:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"23935:2:10","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23925:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23962:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"23969:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23958:3:10"},"nodeType":"YulFunctionCall","src":"23958:16:10"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24001:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"24012:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23997:3:10"},"nodeType":"YulFunctionCall","src":"23997:22:10"},{"name":"end","nodeType":"YulIdentifier","src":"24021:3:10"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"23976:20:10"},"nodeType":"YulFunctionCall","src":"23976:49:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23951:6:10"},"nodeType":"YulFunctionCall","src":"23951:75:10"},"nodeType":"YulExpressionStatement","src":"23951:75:10"}]}]},"name":"abi_decode_t_struct$_TokenRequest_$1638_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23357:9:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"23368:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"23376:5:10","type":""}],"src":"23297:747:10"},{"body":{"nodeType":"YulBlock","src":"24146:293:10","statements":[{"body":{"nodeType":"YulBlock","src":"24192:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24194:77:10"},"nodeType":"YulFunctionCall","src":"24194:79:10"},"nodeType":"YulExpressionStatement","src":"24194:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24167:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"24176:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24163:3:10"},"nodeType":"YulFunctionCall","src":"24163:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"24188:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24159:3:10"},"nodeType":"YulFunctionCall","src":"24159:32:10"},"nodeType":"YulIf","src":"24156:119:10"},{"nodeType":"YulBlock","src":"24285:147:10","statements":[{"nodeType":"YulVariableDeclaration","src":"24300:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"24314:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24304:6:10","type":""}]},{"nodeType":"YulAssignment","src":"24329:93:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24394:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"24405:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24390:3:10"},"nodeType":"YulFunctionCall","src":"24390:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24414:7:10"}],"functionName":{"name":"abi_decode_t_struct$_TokenRequest_$1638_memory_ptr","nodeType":"YulIdentifier","src":"24339:50:10"},"nodeType":"YulFunctionCall","src":"24339:83:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24329:6:10"}]}]}]},"name":"abi_decode_tuple_t_struct$_TokenRequest_$1638_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24116:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24127:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24139:6:10","type":""}],"src":"24050:389:10"},{"body":{"nodeType":"YulBlock","src":"24473:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24490:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24493:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24483:6:10"},"nodeType":"YulFunctionCall","src":"24483:88:10"},"nodeType":"YulExpressionStatement","src":"24483:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24587:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24590:4:10","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24580:6:10"},"nodeType":"YulFunctionCall","src":"24580:15:10"},"nodeType":"YulExpressionStatement","src":"24580:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24611:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24614:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24604:6:10"},"nodeType":"YulFunctionCall","src":"24604:15:10"},"nodeType":"YulExpressionStatement","src":"24604:15:10"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"24445:180:10"},{"body":{"nodeType":"YulBlock","src":"24737:108:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24759:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"24767:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24755:3:10"},"nodeType":"YulFunctionCall","src":"24755:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"24771:66:10","type":"","value":"0x19457468657265756d205369676e6564204d6573736167653a0a000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24748:6:10"},"nodeType":"YulFunctionCall","src":"24748:90:10"},"nodeType":"YulExpressionStatement","src":"24748:90:10"}]},"name":"store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24729:6:10","type":""}],"src":"24631:214:10"},{"body":{"nodeType":"YulBlock","src":"25015:238:10","statements":[{"nodeType":"YulAssignment","src":"25025:92:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25109:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"25114:2:10","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25032:76:10"},"nodeType":"YulFunctionCall","src":"25032:85:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25025:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25215:3:10"}],"functionName":{"name":"store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","nodeType":"YulIdentifier","src":"25126:88:10"},"nodeType":"YulFunctionCall","src":"25126:93:10"},"nodeType":"YulExpressionStatement","src":"25126:93:10"},{"nodeType":"YulAssignment","src":"25228:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25239:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"25244:2:10","type":"","value":"26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25235:3:10"},"nodeType":"YulFunctionCall","src":"25235:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25228:3:10"}]}]},"name":"abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25003:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25011:3:10","type":""}],"src":"24851:402:10"},{"body":{"nodeType":"YulBlock","src":"25372:34:10","statements":[{"nodeType":"YulAssignment","src":"25382:18:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"25397:3:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"25382:11:10"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25344:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"25349:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"25360:11:10","type":""}],"src":"25259:147:10"},{"body":{"nodeType":"YulBlock","src":"25520:278:10","statements":[{"nodeType":"YulVariableDeclaration","src":"25530:52:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25576:5:10"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"25544:31:10"},"nodeType":"YulFunctionCall","src":"25544:38:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"25534:6:10","type":""}]},{"nodeType":"YulAssignment","src":"25591:95:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25674:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"25679:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25598:75:10"},"nodeType":"YulFunctionCall","src":"25598:88:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25591:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25734:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"25741:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25730:3:10"},"nodeType":"YulFunctionCall","src":"25730:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"25748:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"25753:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"25695:34:10"},"nodeType":"YulFunctionCall","src":"25695:65:10"},"nodeType":"YulExpressionStatement","src":"25695:65:10"},{"nodeType":"YulAssignment","src":"25769:23:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25780:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"25785:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25776:3:10"},"nodeType":"YulFunctionCall","src":"25776:16:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25769:3:10"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25501:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"25508:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25516:3:10","type":""}],"src":"25412:386:10"},{"body":{"nodeType":"YulBlock","src":"26087:414:10","statements":[{"nodeType":"YulAssignment","src":"26098:155:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26249:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26105:142:10"},"nodeType":"YulFunctionCall","src":"26105:148:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26098:3:10"}]},{"nodeType":"YulAssignment","src":"26263:102:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26352:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"26361:3:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26270:81:10"},"nodeType":"YulFunctionCall","src":"26270:95:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26263:3:10"}]},{"nodeType":"YulAssignment","src":"26375:100:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26462:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"26471:3:10"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26382:79:10"},"nodeType":"YulFunctionCall","src":"26382:93:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26375:3:10"}]},{"nodeType":"YulAssignment","src":"26485:10:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"26492:3:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26485:3:10"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_t_string_memory_ptr_t_bytes_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26058:3:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26064:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26072:6:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26083:3:10","type":""}],"src":"25804:697:10"},{"body":{"nodeType":"YulBlock","src":"26613:68:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26635:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"26643:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26631:3:10"},"nodeType":"YulFunctionCall","src":"26631:14:10"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"26647:26:10","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26624:6:10"},"nodeType":"YulFunctionCall","src":"26624:50:10"},"nodeType":"YulExpressionStatement","src":"26624:50:10"}]},"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26605:6:10","type":""}],"src":"26507:174:10"},{"body":{"nodeType":"YulBlock","src":"26833:220:10","statements":[{"nodeType":"YulAssignment","src":"26843:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26909:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"26914:2:10","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26850:58:10"},"nodeType":"YulFunctionCall","src":"26850:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26843:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27015:3:10"}],"functionName":{"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulIdentifier","src":"26926:88:10"},"nodeType":"YulFunctionCall","src":"26926:93:10"},"nodeType":"YulExpressionStatement","src":"26926:93:10"},{"nodeType":"YulAssignment","src":"27028:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27039:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"27044:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27035:3:10"},"nodeType":"YulFunctionCall","src":"27035:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27028:3:10"}]}]},"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26821:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26829:3:10","type":""}],"src":"26687:366:10"},{"body":{"nodeType":"YulBlock","src":"27230:248:10","statements":[{"nodeType":"YulAssignment","src":"27240:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27252:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"27263:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27248:3:10"},"nodeType":"YulFunctionCall","src":"27248:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27240:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27287:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"27298:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27283:3:10"},"nodeType":"YulFunctionCall","src":"27283:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27306:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"27312:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27302:3:10"},"nodeType":"YulFunctionCall","src":"27302:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27276:6:10"},"nodeType":"YulFunctionCall","src":"27276:47:10"},"nodeType":"YulExpressionStatement","src":"27276:47:10"},{"nodeType":"YulAssignment","src":"27332:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27466:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27340:124:10"},"nodeType":"YulFunctionCall","src":"27340:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27332:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27210:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27225:4:10","type":""}],"src":"27059:419:10"},{"body":{"nodeType":"YulBlock","src":"27590:75:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27612:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"27620:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27608:3:10"},"nodeType":"YulFunctionCall","src":"27608:14:10"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"27624:33:10","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27601:6:10"},"nodeType":"YulFunctionCall","src":"27601:57:10"},"nodeType":"YulExpressionStatement","src":"27601:57:10"}]},"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27582:6:10","type":""}],"src":"27484:181:10"},{"body":{"nodeType":"YulBlock","src":"27817:220:10","statements":[{"nodeType":"YulAssignment","src":"27827:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27893:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"27898:2:10","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27834:58:10"},"nodeType":"YulFunctionCall","src":"27834:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27827:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27999:3:10"}],"functionName":{"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulIdentifier","src":"27910:88:10"},"nodeType":"YulFunctionCall","src":"27910:93:10"},"nodeType":"YulExpressionStatement","src":"27910:93:10"},{"nodeType":"YulAssignment","src":"28012:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28023:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"28028:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28019:3:10"},"nodeType":"YulFunctionCall","src":"28019:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28012:3:10"}]}]},"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27805:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27813:3:10","type":""}],"src":"27671:366:10"},{"body":{"nodeType":"YulBlock","src":"28214:248:10","statements":[{"nodeType":"YulAssignment","src":"28224:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28236:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"28247:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28232:3:10"},"nodeType":"YulFunctionCall","src":"28232:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28224:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28271:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"28282:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28267:3:10"},"nodeType":"YulFunctionCall","src":"28267:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28290:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"28296:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28286:3:10"},"nodeType":"YulFunctionCall","src":"28286:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28260:6:10"},"nodeType":"YulFunctionCall","src":"28260:47:10"},"nodeType":"YulExpressionStatement","src":"28260:47:10"},{"nodeType":"YulAssignment","src":"28316:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28450:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28324:124:10"},"nodeType":"YulFunctionCall","src":"28324:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28316:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28194:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28209:4:10","type":""}],"src":"28043:419:10"},{"body":{"nodeType":"YulBlock","src":"28574:115:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28596:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"28604:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28592:3:10"},"nodeType":"YulFunctionCall","src":"28592:14:10"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"28608:34:10","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28585:6:10"},"nodeType":"YulFunctionCall","src":"28585:58:10"},"nodeType":"YulExpressionStatement","src":"28585:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28664:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"28672:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28660:3:10"},"nodeType":"YulFunctionCall","src":"28660:15:10"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"28677:4:10","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28653:6:10"},"nodeType":"YulFunctionCall","src":"28653:29:10"},"nodeType":"YulExpressionStatement","src":"28653:29:10"}]},"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28566:6:10","type":""}],"src":"28468:221:10"},{"body":{"nodeType":"YulBlock","src":"28841:220:10","statements":[{"nodeType":"YulAssignment","src":"28851:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28917:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"28922:2:10","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28858:58:10"},"nodeType":"YulFunctionCall","src":"28858:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28851:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29023:3:10"}],"functionName":{"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulIdentifier","src":"28934:88:10"},"nodeType":"YulFunctionCall","src":"28934:93:10"},"nodeType":"YulExpressionStatement","src":"28934:93:10"},{"nodeType":"YulAssignment","src":"29036:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29047:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"29052:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29043:3:10"},"nodeType":"YulFunctionCall","src":"29043:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29036:3:10"}]}]},"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28829:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28837:3:10","type":""}],"src":"28695:366:10"},{"body":{"nodeType":"YulBlock","src":"29238:248:10","statements":[{"nodeType":"YulAssignment","src":"29248:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29260:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"29271:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29256:3:10"},"nodeType":"YulFunctionCall","src":"29256:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29248:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29295:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"29306:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29291:3:10"},"nodeType":"YulFunctionCall","src":"29291:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29314:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"29320:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29310:3:10"},"nodeType":"YulFunctionCall","src":"29310:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29284:6:10"},"nodeType":"YulFunctionCall","src":"29284:47:10"},"nodeType":"YulExpressionStatement","src":"29284:47:10"},{"nodeType":"YulAssignment","src":"29340:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29474:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29348:124:10"},"nodeType":"YulFunctionCall","src":"29348:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29340:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29218:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29233:4:10","type":""}],"src":"29067:419:10"},{"body":{"nodeType":"YulBlock","src":"29540:362:10","statements":[{"nodeType":"YulAssignment","src":"29550:25:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29573:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29555:17:10"},"nodeType":"YulFunctionCall","src":"29555:20:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"29550:1:10"}]},{"nodeType":"YulAssignment","src":"29584:25:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29607:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29589:17:10"},"nodeType":"YulFunctionCall","src":"29589:20:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"29584:1:10"}]},{"nodeType":"YulVariableDeclaration","src":"29618:28:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29641:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"29644:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29637:3:10"},"nodeType":"YulFunctionCall","src":"29637:9:10"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"29622:11:10","type":""}]},{"nodeType":"YulAssignment","src":"29655:41:10","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"29684:11:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29666:17:10"},"nodeType":"YulFunctionCall","src":"29666:30:10"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"29655:7:10"}]},{"body":{"nodeType":"YulBlock","src":"29873:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29875:16:10"},"nodeType":"YulFunctionCall","src":"29875:18:10"},"nodeType":"YulExpressionStatement","src":"29875:18:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29806:1:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29799:6:10"},"nodeType":"YulFunctionCall","src":"29799:9:10"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29829:1:10"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"29836:7:10"},{"name":"x","nodeType":"YulIdentifier","src":"29845:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"29832:3:10"},"nodeType":"YulFunctionCall","src":"29832:15:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"29826:2:10"},"nodeType":"YulFunctionCall","src":"29826:22:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"29779:2:10"},"nodeType":"YulFunctionCall","src":"29779:83:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29759:6:10"},"nodeType":"YulFunctionCall","src":"29759:113:10"},"nodeType":"YulIf","src":"29756:139:10"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29523:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"29526:1:10","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"29532:7:10","type":""}],"src":"29492:410:10"},{"body":{"nodeType":"YulBlock","src":"29952:147:10","statements":[{"nodeType":"YulAssignment","src":"29962:25:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29985:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29967:17:10"},"nodeType":"YulFunctionCall","src":"29967:20:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"29962:1:10"}]},{"nodeType":"YulAssignment","src":"29996:25:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"30019:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30001:17:10"},"nodeType":"YulFunctionCall","src":"30001:20:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"29996:1:10"}]},{"nodeType":"YulAssignment","src":"30030:16:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30041:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"30044:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30037:3:10"},"nodeType":"YulFunctionCall","src":"30037:9:10"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"30030:3:10"}]},{"body":{"nodeType":"YulBlock","src":"30070:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30072:16:10"},"nodeType":"YulFunctionCall","src":"30072:18:10"},"nodeType":"YulExpressionStatement","src":"30072:18:10"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30062:1:10"},{"name":"sum","nodeType":"YulIdentifier","src":"30065:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30059:2:10"},"nodeType":"YulFunctionCall","src":"30059:10:10"},"nodeType":"YulIf","src":"30056:36:10"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29939:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"29942:1:10","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"29948:3:10","type":""}],"src":"29908:191:10"},{"body":{"nodeType":"YulBlock","src":"30133:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30150:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30153:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30143:6:10"},"nodeType":"YulFunctionCall","src":"30143:88:10"},"nodeType":"YulExpressionStatement","src":"30143:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30247:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"30250:4:10","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30240:6:10"},"nodeType":"YulFunctionCall","src":"30240:15:10"},"nodeType":"YulExpressionStatement","src":"30240:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30271:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30274:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30264:6:10"},"nodeType":"YulFunctionCall","src":"30264:15:10"},"nodeType":"YulExpressionStatement","src":"30264:15:10"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"30105:180:10"},{"body":{"nodeType":"YulBlock","src":"30334:128:10","statements":[{"nodeType":"YulAssignment","src":"30344:33:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30371:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30353:17:10"},"nodeType":"YulFunctionCall","src":"30353:24:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"30344:5:10"}]},{"body":{"nodeType":"YulBlock","src":"30405:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30407:16:10"},"nodeType":"YulFunctionCall","src":"30407:18:10"},"nodeType":"YulExpressionStatement","src":"30407:18:10"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30392:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"30399:4:10","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"30389:2:10"},"nodeType":"YulFunctionCall","src":"30389:15:10"},"nodeType":"YulIf","src":"30386:41:10"},{"nodeType":"YulAssignment","src":"30436:20:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30447:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"30454:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30443:3:10"},"nodeType":"YulFunctionCall","src":"30443:13:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"30436:3:10"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30320:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"30330:3:10","type":""}],"src":"30291:171:10"},{"body":{"nodeType":"YulBlock","src":"30574:76:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30596:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"30604:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30592:3:10"},"nodeType":"YulFunctionCall","src":"30592:14:10"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"30608:34:10","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30585:6:10"},"nodeType":"YulFunctionCall","src":"30585:58:10"},"nodeType":"YulExpressionStatement","src":"30585:58:10"}]},"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30566:6:10","type":""}],"src":"30468:182:10"},{"body":{"nodeType":"YulBlock","src":"30802:220:10","statements":[{"nodeType":"YulAssignment","src":"30812:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30878:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"30883:2:10","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30819:58:10"},"nodeType":"YulFunctionCall","src":"30819:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30812:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30984:3:10"}],"functionName":{"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulIdentifier","src":"30895:88:10"},"nodeType":"YulFunctionCall","src":"30895:93:10"},"nodeType":"YulExpressionStatement","src":"30895:93:10"},{"nodeType":"YulAssignment","src":"30997:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31008:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"31013:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31004:3:10"},"nodeType":"YulFunctionCall","src":"31004:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30997:3:10"}]}]},"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30790:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30798:3:10","type":""}],"src":"30656:366:10"},{"body":{"nodeType":"YulBlock","src":"31199:248:10","statements":[{"nodeType":"YulAssignment","src":"31209:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31221:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"31232:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31217:3:10"},"nodeType":"YulFunctionCall","src":"31217:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31209:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31256:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"31267:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31252:3:10"},"nodeType":"YulFunctionCall","src":"31252:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31275:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"31281:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31271:3:10"},"nodeType":"YulFunctionCall","src":"31271:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31245:6:10"},"nodeType":"YulFunctionCall","src":"31245:47:10"},"nodeType":"YulExpressionStatement","src":"31245:47:10"},{"nodeType":"YulAssignment","src":"31301:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31435:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31309:124:10"},"nodeType":"YulFunctionCall","src":"31309:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31301:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31179:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31194:4:10","type":""}],"src":"31028:419:10"},{"body":{"nodeType":"YulBlock","src":"31498:32:10","statements":[{"nodeType":"YulAssignment","src":"31508:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"31519:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"31508:7:10"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31480:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"31490:7:10","type":""}],"src":"31453:77:10"},{"body":{"nodeType":"YulBlock","src":"31601:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31618:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31641:5:10"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"31623:17:10"},"nodeType":"YulFunctionCall","src":"31623:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31611:6:10"},"nodeType":"YulFunctionCall","src":"31611:37:10"},"nodeType":"YulExpressionStatement","src":"31611:37:10"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31589:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"31596:3:10","type":""}],"src":"31536:118:10"},{"body":{"nodeType":"YulBlock","src":"31721:51:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31738:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31759:5:10"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"31743:15:10"},"nodeType":"YulFunctionCall","src":"31743:22:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31731:6:10"},"nodeType":"YulFunctionCall","src":"31731:35:10"},"nodeType":"YulExpressionStatement","src":"31731:35:10"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31709:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"31716:3:10","type":""}],"src":"31660:112:10"},{"body":{"nodeType":"YulBlock","src":"31956:367:10","statements":[{"nodeType":"YulAssignment","src":"31966:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31978:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"31989:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31974:3:10"},"nodeType":"YulFunctionCall","src":"31974:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31966:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32047:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32060:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"32071:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32056:3:10"},"nodeType":"YulFunctionCall","src":"32056:17:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"32003:43:10"},"nodeType":"YulFunctionCall","src":"32003:71:10"},"nodeType":"YulExpressionStatement","src":"32003:71:10"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32124:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32137:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"32148:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32133:3:10"},"nodeType":"YulFunctionCall","src":"32133:18:10"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"32084:39:10"},"nodeType":"YulFunctionCall","src":"32084:68:10"},"nodeType":"YulExpressionStatement","src":"32084:68:10"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"32206:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32219:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"32230:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32215:3:10"},"nodeType":"YulFunctionCall","src":"32215:18:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"32162:43:10"},"nodeType":"YulFunctionCall","src":"32162:72:10"},"nodeType":"YulExpressionStatement","src":"32162:72:10"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"32288:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32301:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"32312:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32297:3:10"},"nodeType":"YulFunctionCall","src":"32297:18:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"32244:43:10"},"nodeType":"YulFunctionCall","src":"32244:72:10"},"nodeType":"YulExpressionStatement","src":"32244:72:10"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31904:9:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"31916:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31924:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31932:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31940:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31951:4:10","type":""}],"src":"31778:545:10"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct TokenAuthenticated.TokenRequest\n    function abi_decode_t_struct$_TokenRequest_$1638_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 96) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_struct$_TokenRequest_$1638_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_struct$_TokenRequest_$1638_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct TokenAuthenticated.TokenRequest -> struct TokenAuthenticated.TokenRequest\n    function abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // device\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // issuedAt\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__to_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only safe's with a threshold of \")\n\n        mstore(add(memPtr, 32), \"one are supported\")\n\n    }\n\n    function abi_encode_t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Owner is not a safe owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_1_by_1__to_t_address_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Operation_$2032(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Operation_$2032(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Operation_$2032(value)\n    }\n\n    function convert_t_enum$_Operation_$2032_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Operation_$2032(value)\n    }\n\n    function abi_encode_t_enum$_Operation_$2032_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Operation_$2032_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1_t_bytes_memory_ptr_t_enum$_Operation_$2032__to_t_address_t_uint256_t_bytes_memory_ptr_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_enum$_Operation_$2032_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Request is too old\")\n\n    }\n\n    function abi_encode_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262(memPtr) {\n\n        mstore(add(memPtr, 0), 0x0a0a4d653a200000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 6)\n        store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262(pos)\n        end := add(pos, 6)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60(memPtr) {\n\n        mstore(add(memPtr, 0), 0x0a4465766963653a200000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n        store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60(pos)\n        end := add(pos, 9)\n    }\n\n    function store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb(memPtr) {\n\n        mstore(add(memPtr, 0), 0x0a4973737565642061743a200000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 12)\n        store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb(pos)\n        end := add(pos, 12)\n    }\n\n    function abi_encode_tuple_packed_t_string_storage_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_t_string_memory_ptr_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_t_string_memory_ptr_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value3, value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        pos := abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value3,  pos)\n\n        end := pos\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // struct TokenAuthenticated.TokenRequest\n    function abi_decode_t_struct$_TokenRequest_$1638_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x60) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x60)\n\n        {\n            // owner\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // device\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // issuedAt\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_TokenRequest_$1638_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_TokenRequest_$1638_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4(memPtr) {\n\n        mstore(add(memPtr, 0), 0x19457468657265756d205369676e6564204d6573736167653a0a000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 26)\n        store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4(pos)\n        end := add(pos, 26)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_t_string_memory_ptr_t_bytes_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c8063724e59c314610051578063b6ad16a81461006d578063bebc479c1461009e578063cb2e6043146100bc575b600080fd5b61006b60048036038101906100669190610f3d565b6100da565b005b61008760048036038101906100829190610fb1565b6103a9565b6040516100959291906110eb565b60405180910390f35b6100a661041d565b6040516100b3919061111b565b60405180910390f35b6100c46104ab565b6040516100d1919061114c565b60405180910390f35b6100e58383836104b1565b6100ee57600080fd5b600084905060008173ffffffffffffffffffffffffffffffffffffffff1663e75235b86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610140573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101649190611193565b9050600181146101a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a090611232565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16632f54bf6e8660000160208101906101d89190611252565b6040518263ffffffff1660e01b81526004016101f4919061128e565b602060405180830381865afa158015610211573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023591906112e1565b610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b9061135a565b60405180910390fd5b50600084602001602081019061028a9190611252565b600160405160240161029d9291906113cc565b6040516020818303038152906040527f0d582f13000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090508573ffffffffffffffffffffffffffffffffffffffff1663468721a78760008460006040518563ffffffff1660e01b815260040161035d94939291906114fc565b6020604051808303816000875af115801561037c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a091906112e1565b50505050505050565b6103b1610df5565b606060405180606001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020016001436104039190611577565b815250915081610412836105f2565b915091509250929050565b6000805461042a906115da565b80601f0160208091040260200160405190810160405280929190818152602001828054610456906115da565b80156104a35780601f10610478576101008083540402835291602001916104a3565b820191906000526020600020905b81548152906001019060200180831161048657829003601f168201915b505050505081565b60015481565b6000806104bd85610646565b9050600061050f8286868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610670565b90508560000160208101906105249190611252565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058890611657565b60405180910390fd5b6001544361059f9190611577565b866040013510156105e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dc906116c3565b60405180910390fd5b6001925050509392505050565b606060006106038360000151610697565b6106108460200151610697565b61061d85604001516106c4565b604051602001610630949392919061189b565b6040516020818303038152906040529050919050565b60006106696106648380360381019061065f91906119f3565b6105f2565b610792565b9050919050565b600080600061067f85856107cd565b9150915061068c8161081e565b819250505092915050565b60606106bd8273ffffffffffffffffffffffffffffffffffffffff16601460ff16610984565b9050919050565b6060600060016106d384610bc0565b01905060008167ffffffffffffffff8111156106f2576106f16118ff565b5b6040519080825280601f01601f1916602001820160405280156107245781602001600182028036833780820191505090505b509050600082602001820190505b600115610787578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161077b5761077a611a20565b5b04945060008503610732575b819350505050919050565b600061079e82516106c4565b826040516020016107b0929190611ad7565b604051602081830303815290604052805190602001209050919050565b600080604183510361080e5760008060006020860151925060408601519150606086015160001a905061080287828585610d13565b94509450505050610817565b60006002915091505b9250929050565b6000600481111561083257610831611485565b5b81600481111561084557610844611485565b5b0315610981576001600481111561085f5761085e611485565b5b81600481111561087257610871611485565b5b036108b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a990611b52565b60405180910390fd5b600260048111156108c6576108c5611485565b5b8160048111156108d9576108d8611485565b5b03610919576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091090611bbe565b60405180910390fd5b6003600481111561092d5761092c611485565b5b8160048111156109405761093f611485565b5b03610980576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097790611c50565b60405180910390fd5b5b50565b6060600060028360026109979190611c70565b6109a19190611cb2565b67ffffffffffffffff8111156109ba576109b96118ff565b5b6040519080825280601f01601f1916602001820160405280156109ec5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610a2457610a23611ce6565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610a8857610a87611ce6565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610ac89190611c70565b610ad29190611cb2565b90505b6001811115610b72577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610b1457610b13611ce6565b5b1a60f81b828281518110610b2b57610b2a611ce6565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610b6b90611d15565b9050610ad5565b5060008414610bb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bad90611d8a565b60405180910390fd5b8091505092915050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610c1e577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381610c1457610c13611a20565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610c5b576d04ee2d6d415b85acef81000000008381610c5157610c50611a20565b5b0492506020810190505b662386f26fc100008310610c8a57662386f26fc100008381610c8057610c7f611a20565b5b0492506010810190505b6305f5e1008310610cb3576305f5e1008381610ca957610ca8611a20565b5b0492506008810190505b6127108310610cd8576127108381610cce57610ccd611a20565b5b0492506004810190505b60648310610cfb5760648381610cf157610cf0611a20565b5b0492506002810190505b600a8310610d0a576001810190505b80915050919050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115610d4e576000600391509150610dec565b600060018787878760405160008152602001604052604051610d739493929190611dd2565b6020604051602081039080840390855afa158015610d95573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610de357600060019250925050610dec565b80600092509250505b94509492505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e8182610e56565b9050919050565b610e9181610e76565b8114610e9c57600080fd5b50565b600081359050610eae81610e88565b92915050565b600080fd5b600060608284031215610ecf57610ece610eb4565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610efd57610efc610ed8565b5b8235905067ffffffffffffffff811115610f1a57610f19610edd565b5b602083019150836001820283011115610f3657610f35610ee2565b5b9250929050565b60008060008060a08587031215610f5757610f56610e4c565b5b6000610f6587828801610e9f565b9450506020610f7687828801610eb9565b935050608085013567ffffffffffffffff811115610f9757610f96610e51565b5b610fa387828801610ee7565b925092505092959194509250565b60008060408385031215610fc857610fc7610e4c565b5b6000610fd685828601610e9f565b9250506020610fe785828601610e9f565b9150509250929050565b610ffa81610e76565b82525050565b6000819050919050565b61101381611000565b82525050565b60608201600082015161102f6000850182610ff1565b5060208201516110426020850182610ff1565b506040820151611055604085018261100a565b50505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561109557808201518184015260208101905061107a565b60008484015250505050565b6000601f19601f8301169050919050565b60006110bd8261105b565b6110c78185611066565b93506110d7818560208601611077565b6110e0816110a1565b840191505092915050565b60006080820190506111006000830185611019565b818103606083015261111281846110b2565b90509392505050565b6000602082019050818103600083015261113581846110b2565b905092915050565b61114681611000565b82525050565b6000602082019050611161600083018461113d565b92915050565b61117081611000565b811461117b57600080fd5b50565b60008151905061118d81611167565b92915050565b6000602082840312156111a9576111a8610e4c565b5b60006111b78482850161117e565b91505092915050565b7f4f6e6c792073616665277320776974682061207468726573686f6c64206f662060008201527f6f6e652061726520737570706f72746564000000000000000000000000000000602082015250565b600061121c603183611066565b9150611227826111c0565b604082019050919050565b6000602082019050818103600083015261124b8161120f565b9050919050565b60006020828403121561126857611267610e4c565b5b600061127684828501610e9f565b91505092915050565b61128881610e76565b82525050565b60006020820190506112a3600083018461127f565b92915050565b60008115159050919050565b6112be816112a9565b81146112c957600080fd5b50565b6000815190506112db816112b5565b92915050565b6000602082840312156112f7576112f6610e4c565b5b6000611305848285016112cc565b91505092915050565b7f4f776e6572206973206e6f7420612073616665206f776e657200000000000000600082015250565b6000611344601983611066565b915061134f8261130e565b602082019050919050565b6000602082019050818103600083015261137381611337565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b60006113b66113b16113ac8461137a565b611391565b611384565b9050919050565b6113c68161139b565b82525050565b60006040820190506113e1600083018561127f565b6113ee60208301846113bd565b9392505050565b6000819050919050565b600061141a611415611410846113f5565b611391565b611000565b9050919050565b61142a816113ff565b82525050565b600081519050919050565b600082825260208201905092915050565b600061145782611430565b611461818561143b565b9350611471818560208601611077565b61147a816110a1565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106114c5576114c4611485565b5b50565b60008190506114d6826114b4565b919050565b60006114e6826114c8565b9050919050565b6114f6816114db565b82525050565b6000608082019050611511600083018761127f565b61151e6020830186611421565b8181036040830152611530818561144c565b905061153f60608301846114ed565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061158282611000565b915061158d83611000565b92508282039050818111156115a5576115a4611548565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806115f257607f821691505b602082108103611605576116046115ab565b5b50919050565b7f696e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b6000611641601183611066565b915061164c8261160b565b602082019050919050565b6000602082019050818103600083015261167081611634565b9050919050565b7f5265717565737420697320746f6f206f6c640000000000000000000000000000600082015250565b60006116ad601283611066565b91506116b882611677565b602082019050919050565b600060208201905081810360008301526116dc816116a0565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154611710816115da565b61171a81866116e3565b94506001821660008114611735576001811461174a5761177d565b60ff198316865281151582028601935061177d565b611753856116ee565b60005b8381101561177557815481890152600182019150602081019050611756565b838801955050505b50505092915050565b7f0a0a4d653a200000000000000000000000000000000000000000000000000000600082015250565b60006117bc6006836116e3565b91506117c782611786565b600682019050919050565b60006117dd8261105b565b6117e781856116e3565b93506117f7818560208601611077565b80840191505092915050565b7f0a4465766963653a200000000000000000000000000000000000000000000000600082015250565b60006118396009836116e3565b915061184482611803565b600982019050919050565b7f0a4973737565642061743a200000000000000000000000000000000000000000600082015250565b6000611885600c836116e3565b91506118908261184f565b600c82019050919050565b60006118a78287611703565b91506118b2826117af565b91506118be82866117d2565b91506118c98261182c565b91506118d582856117d2565b91506118e082611878565b91506118ec82846117d2565b915081905095945050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611937826110a1565b810181811067ffffffffffffffff82111715611956576119556118ff565b5b80604052505050565b6000611969610e42565b9050611975828261192e565b919050565b60008135905061198981611167565b92915050565b6000606082840312156119a5576119a46118fa565b5b6119af606061195f565b905060006119bf84828501610e9f565b60008301525060206119d384828501610e9f565b60208301525060406119e78482850161197a565b60408301525092915050565b600060608284031215611a0957611a08610e4c565b5b6000611a178482850161198f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f19457468657265756d205369676e6564204d6573736167653a0a000000000000600082015250565b6000611a85601a836116e3565b9150611a9082611a4f565b601a82019050919050565b600081905092915050565b6000611ab182611430565b611abb8185611a9b565b9350611acb818560208601611077565b80840191505092915050565b6000611ae282611a78565b9150611aee82856117d2565b9150611afa8284611aa6565b91508190509392505050565b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000611b3c601883611066565b9150611b4782611b06565b602082019050919050565b60006020820190508181036000830152611b6b81611b2f565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000611ba8601f83611066565b9150611bb382611b72565b602082019050919050565b60006020820190508181036000830152611bd781611b9b565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000611c3a602283611066565b9150611c4582611bde565b604082019050919050565b60006020820190508181036000830152611c6981611c2d565b9050919050565b6000611c7b82611000565b9150611c8683611000565b9250828202611c9481611000565b91508282048414831517611cab57611caa611548565b5b5092915050565b6000611cbd82611000565b9150611cc883611000565b9250828201905080821115611ce057611cdf611548565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611d2082611000565b915060008203611d3357611d32611548565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611d74602083611066565b9150611d7f82611d3e565b602082019050919050565b60006020820190508181036000830152611da381611d67565b9050919050565b6000819050919050565b611dbd81611daa565b82525050565b611dcc81611384565b82525050565b6000608082019050611de76000830187611db4565b611df46020830186611dc3565b611e016040830185611db4565b611e0e6060830184611db4565b9594505050505056fea26469706673582212205f733fd7aa5b7698f0084ceae10bc0ae2ee988894ef29bbedd5dc9aa5d453a6a64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x724E59C3 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xB6AD16A8 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xBEBC479C EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0xCB2E6043 EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xF3D JUMP JUMPDEST PUSH2 0xDA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82 SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95 SWAP3 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE5 DUP4 DUP4 DUP4 PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE75235B8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x140 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1193 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 EQ PUSH2 0x1A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A0 SWAP1 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F54BF6E DUP7 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x211 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP5 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x29D SWAP3 SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xD582F1300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x468721A7 DUP8 PUSH1 0x0 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x37C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x12E1 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3B1 PUSH2 0xDF5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 NUMBER PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x1577 JUMP JUMPDEST DUP2 MSTORE POP SWAP2 POP DUP2 PUSH2 0x412 DUP4 PUSH2 0x5F2 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x42A SWAP1 PUSH2 0x15DA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x456 SWAP1 PUSH2 0x15DA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x478 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x486 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4BD DUP6 PUSH2 0x646 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x50F DUP3 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x670 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x591 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD NUMBER PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x1577 JUMP JUMPDEST DUP7 PUSH1 0x40 ADD CALLDATALOAD LT ISZERO PUSH2 0x5E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP1 PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x603 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x697 JUMP JUMPDEST PUSH2 0x610 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x697 JUMP JUMPDEST PUSH2 0x61D DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x630 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x669 PUSH2 0x664 DUP4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65F SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST PUSH2 0x792 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x67F DUP6 DUP6 PUSH2 0x7CD JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x68C DUP2 PUSH2 0x81E JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6BD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x984 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x6D3 DUP5 PUSH2 0xBC0 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6F2 JUMPI PUSH2 0x6F1 PUSH2 0x18FF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x724 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x787 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x77B JUMPI PUSH2 0x77A PUSH2 0x1A20 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x732 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79E DUP3 MLOAD PUSH2 0x6C4 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7B0 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x41 DUP4 MLOAD SUB PUSH2 0x80E JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x802 DUP8 DUP3 DUP6 DUP6 PUSH2 0xD13 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x817 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x832 JUMPI PUSH2 0x831 PUSH2 0x1485 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x845 JUMPI PUSH2 0x844 PUSH2 0x1485 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x981 JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x85F JUMPI PUSH2 0x85E PUSH2 0x1485 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x872 JUMPI PUSH2 0x871 PUSH2 0x1485 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A9 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x8C6 JUMPI PUSH2 0x8C5 PUSH2 0x1485 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x8D9 JUMPI PUSH2 0x8D8 PUSH2 0x1485 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x919 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x910 SWAP1 PUSH2 0x1BBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x92D JUMPI PUSH2 0x92C PUSH2 0x1485 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x940 JUMPI PUSH2 0x93F PUSH2 0x1485 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x980 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x977 SWAP1 PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x997 SWAP2 SWAP1 PUSH2 0x1C70 JUMP JUMPDEST PUSH2 0x9A1 SWAP2 SWAP1 PUSH2 0x1CB2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9BA JUMPI PUSH2 0x9B9 PUSH2 0x18FF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9EC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA24 JUMPI PUSH2 0xA23 PUSH2 0x1CE6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA88 JUMPI PUSH2 0xA87 PUSH2 0x1CE6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xAC8 SWAP2 SWAP1 PUSH2 0x1C70 JUMP JUMPDEST PUSH2 0xAD2 SWAP2 SWAP1 PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB72 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xB14 JUMPI PUSH2 0xB13 PUSH2 0x1CE6 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB2B JUMPI PUSH2 0xB2A PUSH2 0x1CE6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xB6B SWAP1 PUSH2 0x1D15 JUMP JUMPDEST SWAP1 POP PUSH2 0xAD5 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0xBB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAD SWAP1 PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0xC1E JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0xC14 JUMPI PUSH2 0xC13 PUSH2 0x1A20 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC5B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0xC51 JUMPI PUSH2 0xC50 PUSH2 0x1A20 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC8A JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0x1A20 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xCB3 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0xCA9 JUMPI PUSH2 0xCA8 PUSH2 0x1A20 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xCD8 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0xCCE JUMPI PUSH2 0xCCD PUSH2 0x1A20 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xCFB JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0xCF1 JUMPI PUSH2 0xCF0 PUSH2 0x1A20 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0xD0A JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0xD4E JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xD73 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD95 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDE3 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0xDEC JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE81 DUP3 PUSH2 0xE56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE91 DUP2 PUSH2 0xE76 JUMP JUMPDEST DUP2 EQ PUSH2 0xE9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEAE DUP2 PUSH2 0xE88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECF JUMPI PUSH2 0xECE PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xEFD JUMPI PUSH2 0xEFC PUSH2 0xED8 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF1A JUMPI PUSH2 0xF19 PUSH2 0xEDD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xF36 JUMPI PUSH2 0xF35 PUSH2 0xEE2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF57 JUMPI PUSH2 0xF56 PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF65 DUP8 DUP3 DUP9 ADD PUSH2 0xE9F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xF76 DUP8 DUP3 DUP9 ADD PUSH2 0xEB9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF97 JUMPI PUSH2 0xF96 PUSH2 0xE51 JUMP JUMPDEST JUMPDEST PUSH2 0xFA3 DUP8 DUP3 DUP9 ADD PUSH2 0xEE7 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC8 JUMPI PUSH2 0xFC7 PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFD6 DUP6 DUP3 DUP7 ADD PUSH2 0xE9F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFE7 DUP6 DUP3 DUP7 ADD PUSH2 0xE9F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFA DUP2 PUSH2 0xE76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1013 DUP2 PUSH2 0x1000 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x102F PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xFF1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1042 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xFF1 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1055 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x100A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1095 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x107A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BD DUP3 PUSH2 0x105B JUMP JUMPDEST PUSH2 0x10C7 DUP2 DUP6 PUSH2 0x1066 JUMP JUMPDEST SWAP4 POP PUSH2 0x10D7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x10E0 DUP2 PUSH2 0x10A1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1100 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1019 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1112 DUP2 DUP5 PUSH2 0x10B2 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1135 DUP2 DUP5 PUSH2 0x10B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1146 DUP2 PUSH2 0x1000 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1161 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x113D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1170 DUP2 PUSH2 0x1000 JUMP JUMPDEST DUP2 EQ PUSH2 0x117B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x118D DUP2 PUSH2 0x1167 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A9 JUMPI PUSH2 0x11A8 PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11B7 DUP5 DUP3 DUP6 ADD PUSH2 0x117E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792073616665277320776974682061207468726573686F6C64206F6620 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E652061726520737570706F72746564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121C PUSH1 0x31 DUP4 PUSH2 0x1066 JUMP JUMPDEST SWAP2 POP PUSH2 0x1227 DUP3 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x124B DUP2 PUSH2 0x120F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1268 JUMPI PUSH2 0x1267 PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1276 DUP5 DUP3 DUP6 ADD PUSH2 0xE9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1288 DUP2 PUSH2 0xE76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x127F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BE DUP2 PUSH2 0x12A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x12C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12DB DUP2 PUSH2 0x12B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F7 JUMPI PUSH2 0x12F6 PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1305 DUP5 DUP3 DUP6 ADD PUSH2 0x12CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E6572206973206E6F7420612073616665206F776E657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1344 PUSH1 0x19 DUP4 PUSH2 0x1066 JUMP JUMPDEST SWAP2 POP PUSH2 0x134F DUP3 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1373 DUP2 PUSH2 0x1337 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B6 PUSH2 0x13B1 PUSH2 0x13AC DUP5 PUSH2 0x137A JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST PUSH2 0x1384 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C6 DUP2 PUSH2 0x139B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13E1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x127F JUMP JUMPDEST PUSH2 0x13EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141A PUSH2 0x1415 PUSH2 0x1410 DUP5 PUSH2 0x13F5 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x142A DUP2 PUSH2 0x13FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1457 DUP3 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x1461 DUP2 DUP6 PUSH2 0x143B JUMP JUMPDEST SWAP4 POP PUSH2 0x1471 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x147A DUP2 PUSH2 0x10A1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x14C5 JUMPI PUSH2 0x14C4 PUSH2 0x1485 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x14D6 DUP3 PUSH2 0x14B4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E6 DUP3 PUSH2 0x14C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F6 DUP2 PUSH2 0x14DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1511 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x127F JUMP JUMPDEST PUSH2 0x151E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1421 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1530 DUP2 DUP6 PUSH2 0x144C JUMP JUMPDEST SWAP1 POP PUSH2 0x153F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x14ED JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1582 DUP3 PUSH2 0x1000 JUMP JUMPDEST SWAP2 POP PUSH2 0x158D DUP4 PUSH2 0x1000 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A4 PUSH2 0x1548 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x15F2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1605 JUMPI PUSH2 0x1604 PUSH2 0x15AB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1641 PUSH1 0x11 DUP4 PUSH2 0x1066 JUMP JUMPDEST SWAP2 POP PUSH2 0x164C DUP3 PUSH2 0x160B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1670 DUP2 PUSH2 0x1634 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265717565737420697320746F6F206F6C640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16AD PUSH1 0x12 DUP4 PUSH2 0x1066 JUMP JUMPDEST SWAP2 POP PUSH2 0x16B8 DUP3 PUSH2 0x1677 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16DC DUP2 PUSH2 0x16A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x1710 DUP2 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x171A DUP2 DUP7 PUSH2 0x16E3 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x1735 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x174A JUMPI PUSH2 0x177D JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x177D JUMP JUMPDEST PUSH2 0x1753 DUP6 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1775 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1756 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA0A4D653A200000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17BC PUSH1 0x6 DUP4 PUSH2 0x16E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C7 DUP3 PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DD DUP3 PUSH2 0x105B JUMP JUMPDEST PUSH2 0x17E7 DUP2 DUP6 PUSH2 0x16E3 JUMP JUMPDEST SWAP4 POP PUSH2 0x17F7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1077 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA4465766963653A200000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1839 PUSH1 0x9 DUP4 PUSH2 0x16E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1844 DUP3 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA4973737565642061743A200000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1885 PUSH1 0xC DUP4 PUSH2 0x16E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1890 DUP3 PUSH2 0x184F JUMP JUMPDEST PUSH1 0xC DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A7 DUP3 DUP8 PUSH2 0x1703 JUMP JUMPDEST SWAP2 POP PUSH2 0x18B2 DUP3 PUSH2 0x17AF JUMP JUMPDEST SWAP2 POP PUSH2 0x18BE DUP3 DUP7 PUSH2 0x17D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C9 DUP3 PUSH2 0x182C JUMP JUMPDEST SWAP2 POP PUSH2 0x18D5 DUP3 DUP6 PUSH2 0x17D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x18E0 DUP3 PUSH2 0x1878 JUMP JUMPDEST SWAP2 POP PUSH2 0x18EC DUP3 DUP5 PUSH2 0x17D2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1937 DUP3 PUSH2 0x10A1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1956 JUMPI PUSH2 0x1955 PUSH2 0x18FF JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1969 PUSH2 0xE42 JUMP JUMPDEST SWAP1 POP PUSH2 0x1975 DUP3 DUP3 PUSH2 0x192E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1989 DUP2 PUSH2 0x1167 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A5 JUMPI PUSH2 0x19A4 PUSH2 0x18FA JUMP JUMPDEST JUMPDEST PUSH2 0x19AF PUSH1 0x60 PUSH2 0x195F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x19BF DUP5 DUP3 DUP6 ADD PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x19D3 DUP5 DUP3 DUP6 ADD PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x19E7 DUP5 DUP3 DUP6 ADD PUSH2 0x197A JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A09 JUMPI PUSH2 0x1A08 PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A17 DUP5 DUP3 DUP6 ADD PUSH2 0x198F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A85 PUSH1 0x1A DUP4 PUSH2 0x16E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A90 DUP3 PUSH2 0x1A4F JUMP JUMPDEST PUSH1 0x1A DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB1 DUP3 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x1ABB DUP2 DUP6 PUSH2 0x1A9B JUMP JUMPDEST SWAP4 POP PUSH2 0x1ACB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1077 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE2 DUP3 PUSH2 0x1A78 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AEE DUP3 DUP6 PUSH2 0x17D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AFA DUP3 DUP5 PUSH2 0x1AA6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3C PUSH1 0x18 DUP4 PUSH2 0x1066 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B47 DUP3 PUSH2 0x1B06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B6B DUP2 PUSH2 0x1B2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA8 PUSH1 0x1F DUP4 PUSH2 0x1066 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB3 DUP3 PUSH2 0x1B72 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD7 DUP2 PUSH2 0x1B9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3A PUSH1 0x22 DUP4 PUSH2 0x1066 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C45 DUP3 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C69 DUP2 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7B DUP3 PUSH2 0x1000 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C86 DUP4 PUSH2 0x1000 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C94 DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1CAB JUMPI PUSH2 0x1CAA PUSH2 0x1548 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CBD DUP3 PUSH2 0x1000 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC8 DUP4 PUSH2 0x1000 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CE0 JUMPI PUSH2 0x1CDF PUSH2 0x1548 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D20 DUP3 PUSH2 0x1000 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1D33 JUMPI PUSH2 0x1D32 PUSH2 0x1548 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D74 PUSH1 0x20 DUP4 PUSH2 0x1066 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7F DUP3 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA3 DUP2 PUSH2 0x1D67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DBD DUP2 PUSH2 0x1DAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1DCC DUP2 PUSH2 0x1384 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1DE7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x1DF4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DC3 JUMP JUMPDEST PUSH2 0x1E01 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x1E0E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1DB4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F PUSH20 0x3FD7AA5B7698F0084CEAE10BC0AE2EE988894EF2 SWAP12 0xBE 0xDD 0x5D 0xC9 0xAA 0x5D GASLIMIT GASPRICE PUSH11 0x64736F6C63430008130033 ","sourceMap":"133:993:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;292:831;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1287:340:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;346:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;376:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;292:831:3;439:32;452:7;461:9;;439:12;:32::i;:::-;431:41;;;;;;483:15;512:5;483:35;;543:17;563:4;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;543:39;;634:1;621:9;:14;596:122;;;;;;;;;;;;:::i;:::-;;;;;;;;;740:4;:12;;;753:7;:13;;;;;;;;;;:::i;:::-;740:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;732:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;529:279;818:17;929:7;:14;;;;;;;;;;:::i;:::-;957:1;838:130;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;818:150;;989:5;978:43;;;1035:5;1054:1;1069:4;1087:19;978:138;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;421:702;;292:831;;;;:::o;1287:340:6:-;1389:27;;:::i;:::-;1418:13;1453:118;;;;;;;;1487:5;1453:118;;;;;;1514:6;1453:118;;;;;;1559:1;1544:12;:16;;;;:::i;:::-;1453:118;;;1443:128;;1589:7;1598:21;1611:7;1598:12;:21::i;:::-;1581:39;;;;1287:340;;;;;:::o;346:23::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;376:33::-;;;;:::o;828:453::-;952:4;968:15;986:21;999:7;986:12;:21::i;:::-;968:39;;1017:14;1034:33;1048:7;1057:9;;1034:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:33::i;:::-;1017:50;;1095:7;:13;;;;;;;;;;:::i;:::-;1085:23;;:6;:23;;;1077:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1196:13;;1181:12;:28;;;;:::i;:::-;1161:7;:16;;;:48;;1140:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;1270:4;1263:11;;;;828:453;;;;;:::o;1852:408::-;1940:13;2009:9;2056:34;2076:7;:13;;;2056:19;:34::i;:::-;2130:35;2150:7;:14;;;2130:19;:35::i;:::-;2208:34;2225:7;:16;;;2208;:34::i;:::-;1979:273;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1965:288;;1852:408;;;:::o;2266:181::-;2356:7;2382:58;2417:21;2430:7;2417:21;;;;;;;;;;:::i;:::-;:12;:21::i;:::-;2382:28;:58::i;:::-;2375:65;;2266:181;;;:::o;3661:227:1:-;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;3872:9;3865:16;;;;3661:227;;;;:::o;2102:149:0:-;2160:13;2192:52;2220:4;2204:22;;311:2;2192:52;;:11;:52::i;:::-;2185:59;;2102:149;;;:::o;415:696::-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;788:280;1032:21;788:280;1088:6;1081:13;;;;;415:696;;;:::o;7806:196:1:-;7877:7;7964:26;7981:1;:8;7964:16;:26::i;:::-;7992:1;7913:81;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7903:92;;;;;;7896:99;;7806:196;;;:::o;2145:730::-;2226:7;2235:12;2283:2;2263:9;:16;:22;2259:610;;2301:9;2324;2347:7;2599:4;2588:9;2584:20;2578:27;2573:32;;2648:4;2637:9;2633:20;2627:27;2622:32;;2705:4;2694:9;2690:20;2684:27;2681:1;2676:36;2671:41;;2746:25;2757:4;2763:1;2766;2769;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;2818:1;2822:35;2802:56;;;;2145:730;;;;;;:::o;570:511::-;647:20;638:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;634:441;683:7;634:441;743:29;734:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;730:345;;788:34;;;;;;;;;;:::i;:::-;;;;;;;;730:345;852:35;843:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;839:236;;903:41;;;;;;;;;;:::i;:::-;;;;;;;;839:236;974:30;965:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;961:114;;1020:44;;;;;;;;;;:::i;:::-;;;;;;;;961:114;570:511;;:::o;1513:437:0:-;1588:13;1613:19;1658:1;1649:6;1645:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:47;;1670:15;:6;1677:1;1670:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1695;:6;1702:1;1695:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1725:9;1750:1;1741:6;1737:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;1791:8;1808:3;1800:5;:11;1791:21;;;;;;;:::i;:::-;;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;1836:1;1826:11;;;;;1760:3;;;;:::i;:::-;;;1720:128;;;;1874:1;1865:5;:10;1857:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1936:6;1922:21;;;1513:437;;;;:::o;9889:890:2:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;5069:1494:1:-;5195:7;5204:12;6119:66;6114:1;6106:10;;:79;6102:161;;;6217:1;6221:30;6201:51;;;;;;6102:161;6357:14;6374:24;6384:4;6390:1;6393;6396;6374:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6357:41;;6430:1;6412:20;;:6;:20;;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;6535:20;6519:37;;;;;5069:1494;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:117::-;950:1;947;940:12;1010:236;1088:5;1129:2;1120:6;1115:3;1111:16;1107:25;1104:112;;;1135:79;;:::i;:::-;1104:112;1234:6;1225:15;;1010:236;;;;:::o;1252:117::-;1361:1;1358;1351:12;1375:117;1484:1;1481;1474:12;1498:117;1607:1;1604;1597:12;1634:552;1691:8;1701:6;1751:3;1744:4;1736:6;1732:17;1728:27;1718:122;;1759:79;;:::i;:::-;1718:122;1872:6;1859:20;1849:30;;1902:18;1894:6;1891:30;1888:117;;;1924:79;;:::i;:::-;1888:117;2038:4;2030:6;2026:17;2014:29;;2092:3;2084:4;2076:6;2072:17;2062:8;2058:32;2055:41;2052:128;;;2099:79;;:::i;:::-;2052:128;1634:552;;;;;:::o;2192:883::-;2312:6;2320;2328;2336;2385:3;2373:9;2364:7;2360:23;2356:33;2353:120;;;2392:79;;:::i;:::-;2353:120;2512:1;2537:53;2582:7;2573:6;2562:9;2558:22;2537:53;:::i;:::-;2527:63;;2483:117;2639:2;2665:85;2742:7;2733:6;2722:9;2718:22;2665:85;:::i;:::-;2655:95;;2610:150;2827:3;2816:9;2812:19;2799:33;2859:18;2851:6;2848:30;2845:117;;;2881:79;;:::i;:::-;2845:117;2994:64;3050:7;3041:6;3030:9;3026:22;2994:64;:::i;:::-;2976:82;;;;2770:298;2192:883;;;;;;;:::o;3081:474::-;3149:6;3157;3206:2;3194:9;3185:7;3181:23;3177:32;3174:119;;;3212:79;;:::i;:::-;3174:119;3332:1;3357:53;3402:7;3393:6;3382:9;3378:22;3357:53;:::i;:::-;3347:63;;3303:117;3459:2;3485:53;3530:7;3521:6;3510:9;3506:22;3485:53;:::i;:::-;3475:63;;3430:118;3081:474;;;;;:::o;3561:108::-;3638:24;3656:5;3638:24;:::i;:::-;3633:3;3626:37;3561:108;;:::o;3675:77::-;3712:7;3741:5;3730:16;;3675:77;;;:::o;3758:108::-;3835:24;3853:5;3835:24;:::i;:::-;3830:3;3823:37;3758:108;;:::o;3960:698::-;4117:4;4112:3;4108:14;4205:4;4198:5;4194:16;4188:23;4224:63;4281:4;4276:3;4272:14;4258:12;4224:63;:::i;:::-;4132:165;4381:4;4374:5;4370:16;4364:23;4400:63;4457:4;4452:3;4448:14;4434:12;4400:63;:::i;:::-;4307:166;4559:4;4552:5;4548:16;4542:23;4578:63;4635:4;4630:3;4626:14;4612:12;4578:63;:::i;:::-;4483:168;4086:572;3960:698;;:::o;4664:99::-;4716:6;4750:5;4744:12;4734:22;;4664:99;;;:::o;4769:169::-;4853:11;4887:6;4882:3;4875:19;4927:4;4922:3;4918:14;4903:29;;4769:169;;;;:::o;4944:246::-;5025:1;5035:113;5049:6;5046:1;5043:13;5035:113;;;5134:1;5129:3;5125:11;5119:18;5115:1;5110:3;5106:11;5099:39;5071:2;5068:1;5064:10;5059:15;;5035:113;;;5182:1;5173:6;5168:3;5164:16;5157:27;5006:184;4944:246;;;:::o;5196:102::-;5237:6;5288:2;5284:7;5279:2;5272:5;5268:14;5264:28;5254:38;;5196:102;;;:::o;5304:377::-;5392:3;5420:39;5453:5;5420:39;:::i;:::-;5475:71;5539:6;5534:3;5475:71;:::i;:::-;5468:78;;5555:65;5613:6;5608:3;5601:4;5594:5;5590:16;5555:65;:::i;:::-;5645:29;5667:6;5645:29;:::i;:::-;5640:3;5636:39;5629:46;;5396:285;5304:377;;;;:::o;5687:544::-;5888:4;5926:3;5915:9;5911:19;5903:27;;5940:131;6068:1;6057:9;6053:17;6044:6;5940:131;:::i;:::-;6118:9;6112:4;6108:20;6103:2;6092:9;6088:18;6081:48;6146:78;6219:4;6210:6;6146:78;:::i;:::-;6138:86;;5687:544;;;;;:::o;6237:313::-;6350:4;6388:2;6377:9;6373:18;6365:26;;6437:9;6431:4;6427:20;6423:1;6412:9;6408:17;6401:47;6465:78;6538:4;6529:6;6465:78;:::i;:::-;6457:86;;6237:313;;;;:::o;6556:118::-;6643:24;6661:5;6643:24;:::i;:::-;6638:3;6631:37;6556:118;;:::o;6680:222::-;6773:4;6811:2;6800:9;6796:18;6788:26;;6824:71;6892:1;6881:9;6877:17;6868:6;6824:71;:::i;:::-;6680:222;;;;:::o;6908:122::-;6981:24;6999:5;6981:24;:::i;:::-;6974:5;6971:35;6961:63;;7020:1;7017;7010:12;6961:63;6908:122;:::o;7036:143::-;7093:5;7124:6;7118:13;7109:22;;7140:33;7167:5;7140:33;:::i;:::-;7036:143;;;;:::o;7185:351::-;7255:6;7304:2;7292:9;7283:7;7279:23;7275:32;7272:119;;;7310:79;;:::i;:::-;7272:119;7430:1;7455:64;7511:7;7502:6;7491:9;7487:22;7455:64;:::i;:::-;7445:74;;7401:128;7185:351;;;;:::o;7542:236::-;7682:34;7678:1;7670:6;7666:14;7659:58;7751:19;7746:2;7738:6;7734:15;7727:44;7542:236;:::o;7784:366::-;7926:3;7947:67;8011:2;8006:3;7947:67;:::i;:::-;7940:74;;8023:93;8112:3;8023:93;:::i;:::-;8141:2;8136:3;8132:12;8125:19;;7784:366;;;:::o;8156:419::-;8322:4;8360:2;8349:9;8345:18;8337:26;;8409:9;8403:4;8399:20;8395:1;8384:9;8380:17;8373:47;8437:131;8563:4;8437:131;:::i;:::-;8429:139;;8156:419;;;:::o;8581:329::-;8640:6;8689:2;8677:9;8668:7;8664:23;8660:32;8657:119;;;8695:79;;:::i;:::-;8657:119;8815:1;8840:53;8885:7;8876:6;8865:9;8861:22;8840:53;:::i;:::-;8830:63;;8786:117;8581:329;;;;:::o;8916:118::-;9003:24;9021:5;9003:24;:::i;:::-;8998:3;8991:37;8916:118;;:::o;9040:222::-;9133:4;9171:2;9160:9;9156:18;9148:26;;9184:71;9252:1;9241:9;9237:17;9228:6;9184:71;:::i;:::-;9040:222;;;;:::o;9268:90::-;9302:7;9345:5;9338:13;9331:21;9320:32;;9268:90;;;:::o;9364:116::-;9434:21;9449:5;9434:21;:::i;:::-;9427:5;9424:32;9414:60;;9470:1;9467;9460:12;9414:60;9364:116;:::o;9486:137::-;9540:5;9571:6;9565:13;9556:22;;9587:30;9611:5;9587:30;:::i;:::-;9486:137;;;;:::o;9629:345::-;9696:6;9745:2;9733:9;9724:7;9720:23;9716:32;9713:119;;;9751:79;;:::i;:::-;9713:119;9871:1;9896:61;9949:7;9940:6;9929:9;9925:22;9896:61;:::i;:::-;9886:71;;9842:125;9629:345;;;;:::o;9980:175::-;10120:27;10116:1;10108:6;10104:14;10097:51;9980:175;:::o;10161:366::-;10303:3;10324:67;10388:2;10383:3;10324:67;:::i;:::-;10317:74;;10400:93;10489:3;10400:93;:::i;:::-;10518:2;10513:3;10509:12;10502:19;;10161:366;;;:::o;10533:419::-;10699:4;10737:2;10726:9;10722:18;10714:26;;10786:9;10780:4;10776:20;10772:1;10761:9;10757:17;10750:47;10814:131;10940:4;10814:131;:::i;:::-;10806:139;;10533:419;;;:::o;10958:85::-;11003:7;11032:5;11021:16;;10958:85;;;:::o;11049:86::-;11084:7;11124:4;11117:5;11113:16;11102:27;;11049:86;;;:::o;11141:60::-;11169:3;11190:5;11183:12;;11141:60;;;:::o;11207:154::-;11263:9;11296:59;11312:42;11321:32;11347:5;11321:32;:::i;:::-;11312:42;:::i;:::-;11296:59;:::i;:::-;11283:72;;11207:154;;;:::o;11367:143::-;11460:43;11497:5;11460:43;:::i;:::-;11455:3;11448:56;11367:143;;:::o;11516:344::-;11643:4;11681:2;11670:9;11666:18;11658:26;;11694:71;11762:1;11751:9;11747:17;11738:6;11694:71;:::i;:::-;11775:78;11849:2;11838:9;11834:18;11825:6;11775:78;:::i;:::-;11516:344;;;;;:::o;11866:85::-;11911:7;11940:5;11929:16;;11866:85;;;:::o;11957:158::-;12015:9;12048:61;12066:42;12075:32;12101:5;12075:32;:::i;:::-;12066:42;:::i;:::-;12048:61;:::i;:::-;12035:74;;11957:158;;;:::o;12121:147::-;12216:45;12255:5;12216:45;:::i;:::-;12211:3;12204:58;12121:147;;:::o;12274:98::-;12325:6;12359:5;12353:12;12343:22;;12274:98;;;:::o;12378:168::-;12461:11;12495:6;12490:3;12483:19;12535:4;12530:3;12526:14;12511:29;;12378:168;;;;:::o;12552:373::-;12638:3;12666:38;12698:5;12666:38;:::i;:::-;12720:70;12783:6;12778:3;12720:70;:::i;:::-;12713:77;;12799:65;12857:6;12852:3;12845:4;12838:5;12834:16;12799:65;:::i;:::-;12889:29;12911:6;12889:29;:::i;:::-;12884:3;12880:39;12873:46;;12642:283;12552:373;;;;:::o;12931:180::-;12979:77;12976:1;12969:88;13076:4;13073:1;13066:15;13100:4;13097:1;13090:15;13117:119;13204:1;13197:5;13194:12;13184:46;;13210:18;;:::i;:::-;13184:46;13117:119;:::o;13242:139::-;13293:7;13322:5;13311:16;;13328:47;13369:5;13328:47;:::i;:::-;13242:139;;;:::o;13387:::-;13449:9;13482:38;13514:5;13482:38;:::i;:::-;13469:51;;13387:139;;;:::o;13532:155::-;13631:49;13674:5;13631:49;:::i;:::-;13626:3;13619:62;13532:155;;:::o;13693:680::-;13908:4;13946:3;13935:9;13931:19;13923:27;;13960:71;14028:1;14017:9;14013:17;14004:6;13960:71;:::i;:::-;14041:80;14117:2;14106:9;14102:18;14093:6;14041:80;:::i;:::-;14168:9;14162:4;14158:20;14153:2;14142:9;14138:18;14131:48;14196:76;14267:4;14258:6;14196:76;:::i;:::-;14188:84;;14282;14362:2;14351:9;14347:18;14338:6;14282:84;:::i;:::-;13693:680;;;;;;;:::o;14379:180::-;14427:77;14424:1;14417:88;14524:4;14521:1;14514:15;14548:4;14545:1;14538:15;14565:194;14605:4;14625:20;14643:1;14625:20;:::i;:::-;14620:25;;14659:20;14677:1;14659:20;:::i;:::-;14654:25;;14703:1;14700;14696:9;14688:17;;14727:1;14721:4;14718:11;14715:37;;;14732:18;;:::i;:::-;14715:37;14565:194;;;;:::o;14765:180::-;14813:77;14810:1;14803:88;14910:4;14907:1;14900:15;14934:4;14931:1;14924:15;14951:320;14995:6;15032:1;15026:4;15022:12;15012:22;;15079:1;15073:4;15069:12;15100:18;15090:81;;15156:4;15148:6;15144:17;15134:27;;15090:81;15218:2;15210:6;15207:14;15187:18;15184:38;15181:84;;15237:18;;:::i;:::-;15181:84;15002:269;14951:320;;;:::o;15277:167::-;15417:19;15413:1;15405:6;15401:14;15394:43;15277:167;:::o;15450:366::-;15592:3;15613:67;15677:2;15672:3;15613:67;:::i;:::-;15606:74;;15689:93;15778:3;15689:93;:::i;:::-;15807:2;15802:3;15798:12;15791:19;;15450:366;;;:::o;15822:419::-;15988:4;16026:2;16015:9;16011:18;16003:26;;16075:9;16069:4;16065:20;16061:1;16050:9;16046:17;16039:47;16103:131;16229:4;16103:131;:::i;:::-;16095:139;;15822:419;;;:::o;16247:168::-;16387:20;16383:1;16375:6;16371:14;16364:44;16247:168;:::o;16421:366::-;16563:3;16584:67;16648:2;16643:3;16584:67;:::i;:::-;16577:74;;16660:93;16749:3;16660:93;:::i;:::-;16778:2;16773:3;16769:12;16762:19;;16421:366;;;:::o;16793:419::-;16959:4;16997:2;16986:9;16982:18;16974:26;;17046:9;17040:4;17036:20;17032:1;17021:9;17017:17;17010:47;17074:131;17200:4;17074:131;:::i;:::-;17066:139;;16793:419;;;:::o;17218:148::-;17320:11;17357:3;17342:18;;17218:148;;;;:::o;17372:141::-;17421:4;17444:3;17436:11;;17467:3;17464:1;17457:14;17501:4;17498:1;17488:18;17480:26;;17372:141;;;:::o;17543:874::-;17646:3;17683:5;17677:12;17712:36;17738:9;17712:36;:::i;:::-;17764:89;17846:6;17841:3;17764:89;:::i;:::-;17757:96;;17884:1;17873:9;17869:17;17900:1;17895:166;;;;18075:1;18070:341;;;;17862:549;;17895:166;17979:4;17975:9;17964;17960:25;17955:3;17948:38;18041:6;18034:14;18027:22;18019:6;18015:35;18010:3;18006:45;17999:52;;17895:166;;18070:341;18137:38;18169:5;18137:38;:::i;:::-;18197:1;18211:154;18225:6;18222:1;18219:13;18211:154;;;18299:7;18293:14;18289:1;18284:3;18280:11;18273:35;18349:1;18340:7;18336:15;18325:26;;18247:4;18244:1;18240:12;18235:17;;18211:154;;;18394:6;18389:3;18385:16;18378:23;;18077:334;;17862:549;;17650:767;;17543:874;;;;:::o;18423:214::-;18563:66;18559:1;18551:6;18547:14;18540:90;18423:214;:::o;18643:400::-;18803:3;18824:84;18906:1;18901:3;18824:84;:::i;:::-;18817:91;;18917:93;19006:3;18917:93;:::i;:::-;19035:1;19030:3;19026:11;19019:18;;18643:400;;;:::o;19049:390::-;19155:3;19183:39;19216:5;19183:39;:::i;:::-;19238:89;19320:6;19315:3;19238:89;:::i;:::-;19231:96;;19336:65;19394:6;19389:3;19382:4;19375:5;19371:16;19336:65;:::i;:::-;19426:6;19421:3;19417:16;19410:23;;19159:280;19049:390;;;;:::o;19445:214::-;19585:66;19581:1;19573:6;19569:14;19562:90;19445:214;:::o;19665:400::-;19825:3;19846:84;19928:1;19923:3;19846:84;:::i;:::-;19839:91;;19939:93;20028:3;19939:93;:::i;:::-;20057:1;20052:3;20048:11;20041:18;;19665:400;;;:::o;20071:214::-;20211:66;20207:1;20199:6;20195:14;20188:90;20071:214;:::o;20291:402::-;20451:3;20472:85;20554:2;20549:3;20472:85;:::i;:::-;20465:92;;20566:93;20655:3;20566:93;:::i;:::-;20684:2;20679:3;20675:12;20668:19;;20291:402;;;:::o;20699:1547::-;21275:3;21297:92;21385:3;21376:6;21297:92;:::i;:::-;21290:99;;21406:148;21550:3;21406:148;:::i;:::-;21399:155;;21571:95;21662:3;21653:6;21571:95;:::i;:::-;21564:102;;21683:148;21827:3;21683:148;:::i;:::-;21676:155;;21848:95;21939:3;21930:6;21848:95;:::i;:::-;21841:102;;21960:148;22104:3;21960:148;:::i;:::-;21953:155;;22125:95;22216:3;22207:6;22125:95;:::i;:::-;22118:102;;22237:3;22230:10;;20699:1547;;;;;;;:::o;22252:117::-;22361:1;22358;22351:12;22375:180;22423:77;22420:1;22413:88;22520:4;22517:1;22510:15;22544:4;22541:1;22534:15;22561:281;22644:27;22666:4;22644:27;:::i;:::-;22636:6;22632:40;22774:6;22762:10;22759:22;22738:18;22726:10;22723:34;22720:62;22717:88;;;22785:18;;:::i;:::-;22717:88;22825:10;22821:2;22814:22;22604:238;22561:281;;:::o;22848:129::-;22882:6;22909:20;;:::i;:::-;22899:30;;22938:33;22966:4;22958:6;22938:33;:::i;:::-;22848:129;;;:::o;23106:139::-;23152:5;23190:6;23177:20;23168:29;;23206:33;23233:5;23206:33;:::i;:::-;23106:139;;;;:::o;23297:747::-;23376:5;23420:4;23408:9;23403:3;23399:19;23395:30;23392:117;;;23428:79;;:::i;:::-;23392:117;23527:21;23543:4;23527:21;:::i;:::-;23518:30;;23608:1;23648:49;23693:3;23684:6;23673:9;23669:22;23648:49;:::i;:::-;23641:4;23634:5;23630:16;23623:75;23558:151;23770:2;23811:49;23856:3;23847:6;23836:9;23832:22;23811:49;:::i;:::-;23804:4;23797:5;23793:16;23786:75;23719:153;23935:2;23976:49;24021:3;24012:6;24001:9;23997:22;23976:49;:::i;:::-;23969:4;23962:5;23958:16;23951:75;23882:155;23297:747;;;;:::o;24050:389::-;24139:6;24188:2;24176:9;24167:7;24163:23;24159:32;24156:119;;;24194:79;;:::i;:::-;24156:119;24314:1;24339:83;24414:7;24405:6;24394:9;24390:22;24339:83;:::i;:::-;24329:93;;24285:147;24050:389;;;;:::o;24445:180::-;24493:77;24490:1;24483:88;24590:4;24587:1;24580:15;24614:4;24611:1;24604:15;24631:214;24771:66;24767:1;24759:6;24755:14;24748:90;24631:214;:::o;24851:402::-;25011:3;25032:85;25114:2;25109:3;25032:85;:::i;:::-;25025:92;;25126:93;25215:3;25126:93;:::i;:::-;25244:2;25239:3;25235:12;25228:19;;24851:402;;;:::o;25259:147::-;25360:11;25397:3;25382:18;;25259:147;;;;:::o;25412:386::-;25516:3;25544:38;25576:5;25544:38;:::i;:::-;25598:88;25679:6;25674:3;25598:88;:::i;:::-;25591:95;;25695:65;25753:6;25748:3;25741:4;25734:5;25730:16;25695:65;:::i;:::-;25785:6;25780:3;25776:16;25769:23;;25520:278;25412:386;;;;:::o;25804:697::-;26083:3;26105:148;26249:3;26105:148;:::i;:::-;26098:155;;26270:95;26361:3;26352:6;26270:95;:::i;:::-;26263:102;;26382:93;26471:3;26462:6;26382:93;:::i;:::-;26375:100;;26492:3;26485:10;;25804:697;;;;;:::o;26507:174::-;26647:26;26643:1;26635:6;26631:14;26624:50;26507:174;:::o;26687:366::-;26829:3;26850:67;26914:2;26909:3;26850:67;:::i;:::-;26843:74;;26926:93;27015:3;26926:93;:::i;:::-;27044:2;27039:3;27035:12;27028:19;;26687:366;;;:::o;27059:419::-;27225:4;27263:2;27252:9;27248:18;27240:26;;27312:9;27306:4;27302:20;27298:1;27287:9;27283:17;27276:47;27340:131;27466:4;27340:131;:::i;:::-;27332:139;;27059:419;;;:::o;27484:181::-;27624:33;27620:1;27612:6;27608:14;27601:57;27484:181;:::o;27671:366::-;27813:3;27834:67;27898:2;27893:3;27834:67;:::i;:::-;27827:74;;27910:93;27999:3;27910:93;:::i;:::-;28028:2;28023:3;28019:12;28012:19;;27671:366;;;:::o;28043:419::-;28209:4;28247:2;28236:9;28232:18;28224:26;;28296:9;28290:4;28286:20;28282:1;28271:9;28267:17;28260:47;28324:131;28450:4;28324:131;:::i;:::-;28316:139;;28043:419;;;:::o;28468:221::-;28608:34;28604:1;28596:6;28592:14;28585:58;28677:4;28672:2;28664:6;28660:15;28653:29;28468:221;:::o;28695:366::-;28837:3;28858:67;28922:2;28917:3;28858:67;:::i;:::-;28851:74;;28934:93;29023:3;28934:93;:::i;:::-;29052:2;29047:3;29043:12;29036:19;;28695:366;;;:::o;29067:419::-;29233:4;29271:2;29260:9;29256:18;29248:26;;29320:9;29314:4;29310:20;29306:1;29295:9;29291:17;29284:47;29348:131;29474:4;29348:131;:::i;:::-;29340:139;;29067:419;;;:::o;29492:410::-;29532:7;29555:20;29573:1;29555:20;:::i;:::-;29550:25;;29589:20;29607:1;29589:20;:::i;:::-;29584:25;;29644:1;29641;29637:9;29666:30;29684:11;29666:30;:::i;:::-;29655:41;;29845:1;29836:7;29832:15;29829:1;29826:22;29806:1;29799:9;29779:83;29756:139;;29875:18;;:::i;:::-;29756:139;29540:362;29492:410;;;;:::o;29908:191::-;29948:3;29967:20;29985:1;29967:20;:::i;:::-;29962:25;;30001:20;30019:1;30001:20;:::i;:::-;29996:25;;30044:1;30041;30037:9;30030:16;;30065:3;30062:1;30059:10;30056:36;;;30072:18;;:::i;:::-;30056:36;29908:191;;;;:::o;30105:180::-;30153:77;30150:1;30143:88;30250:4;30247:1;30240:15;30274:4;30271:1;30264:15;30291:171;30330:3;30353:24;30371:5;30353:24;:::i;:::-;30344:33;;30399:4;30392:5;30389:15;30386:41;;30407:18;;:::i;:::-;30386:41;30454:1;30447:5;30443:13;30436:20;;30291:171;;;:::o;30468:182::-;30608:34;30604:1;30596:6;30592:14;30585:58;30468:182;:::o;30656:366::-;30798:3;30819:67;30883:2;30878:3;30819:67;:::i;:::-;30812:74;;30895:93;30984:3;30895:93;:::i;:::-;31013:2;31008:3;31004:12;30997:19;;30656:366;;;:::o;31028:419::-;31194:4;31232:2;31221:9;31217:18;31209:26;;31281:9;31275:4;31271:20;31267:1;31256:9;31252:17;31245:47;31309:131;31435:4;31309:131;:::i;:::-;31301:139;;31028:419;;;:::o;31453:77::-;31490:7;31519:5;31508:16;;31453:77;;;:::o;31536:118::-;31623:24;31641:5;31623:24;:::i;:::-;31618:3;31611:37;31536:118;;:::o;31660:112::-;31743:22;31759:5;31743:22;:::i;:::-;31738:3;31731:35;31660:112;;:::o;31778:545::-;31951:4;31989:3;31978:9;31974:19;31966:27;;32003:71;32071:1;32060:9;32056:17;32047:6;32003:71;:::i;:::-;32084:68;32148:2;32137:9;32133:18;32124:6;32084:68;:::i;:::-;32162:72;32230:2;32219:9;32215:18;32206:6;32162:72;:::i;:::-;32244;32312:2;32301:9;32297:18;32288:6;32244:72;:::i;:::-;31778:545;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1551400","executionCost":"infinite","totalCost":"infinite"},"external":{"STATEMENT()":"infinite","addOwner(address,(address,address,uint256),bytes)":"infinite","createTokenRequest(address,address)":"infinite","lengthOfToken()":"2473"}},"methodIdentifiers":{"STATEMENT()":"bebc479c","addOwner(address,(address,address,uint256),bytes)":"724e59c3","createTokenRequest(address,address)":"b6ad16a8","lengthOfToken()":"cb2e6043"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"STATEMENT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_safe\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"device\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"issuedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenAuthenticated.TokenRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"addOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"device\",\"type\":\"address\"}],\"name\":\"createTokenRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"device\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"issuedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenAuthenticated.TokenRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lengthOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EnglishOwnerAdder.sol\":\"EnglishOwnerAdder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Strings.sol\\\";\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS,\\n        InvalidSignatureV // Deprecated in v4.8\\n    }\\n\\n    function _throwError(RecoverError error) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert(\\\"ECDSA: invalid signature\\\");\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature` or error string. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address, RecoverError) {\\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\\n        return tryRecover(hash, v, r, s);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     *\\n     * _Available since v4.2._\\n     */\\n    function recover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address, RecoverError) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature);\\n        }\\n\\n        return (signer, RecoverError.NoError);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\", Strings.toString(s.length), s));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Typed Data, created from a\\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\\n     * to the one signed with the\\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\\n     * JSON-RPC method as part of EIP-712.\\n     *\\n     * See {recover}.\\n     */\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n    }\\n}\\n\",\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/EnglishOwnerAdder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"./TokenAuthenticated.sol\\\";\\nimport \\\"./interfaces/IGnosisSafe.sol\\\";\\n\\ncontract EnglishOwnerAdder is TokenAuthenticated {\\n\\n    constructor() TokenAuthenticated(\\\"I authorize this device to send transactions on my behalf.\\\") {}\\n\\n    function addOwner(\\n        address _safe,\\n        TokenRequest calldata request,\\n        bytes calldata signature\\n    ) external {\\n        require(authenticate(request, signature));\\n\\n        GnosisSafe safe = GnosisSafe(_safe);\\n\\n        {\\n            uint256 threshold = safe.getThreshold();\\n            require(\\n                threshold == 1,\\n                \\\"Only safe's with a threshold of one are supported\\\"\\n            );\\n            require(safe.isOwner(request.owner), \\\"Owner is not a safe owner\\\");\\n        }\\n\\n        bytes memory data = abi.encodeWithSignature(\\n            \\\"addOwnerWithThreshold(address,uint256)\\\",\\n            request.device,\\n            1\\n        );\\n        GnosisSafe(_safe).execTransactionFromModule(\\n            _safe,\\n            0,\\n            data,\\n            Enum.Operation.Call\\n        );\\n    }\\n\\n}\\n\",\"keccak256\":\"0xeb8870abd99f162e519a02867ee9f0b76583405315f7b26d89a9680b4691ea1e\",\"license\":\"MIT\"},\"contracts/TokenAuthenticated.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\n// import \\\"hardhat/console.sol\\\";\\n\\n/**\\n * @title TokenAuthenticated\\n * @dev allow a user to authenticate with a signed english token.\\n */\\ncontract TokenAuthenticated {\\n    string public STATEMENT;\\n\\n    uint256 public lengthOfToken = 15;\\n       \\n    struct TokenRequest {\\n        address owner;\\n        address device;\\n        uint256 issuedAt;\\n    }\\n\\n    constructor(string memory _statement) {\\n        STATEMENT = _statement;\\n    }\\n\\n    function _updateStatement(string memory newStatement) internal {\\n        STATEMENT = newStatement;\\n    }\\n\\n    function _updateLengthOfToken(uint256 newLength) internal {\\n        lengthOfToken = newLength;\\n    }\\n\\n    function authenticate(\\n        TokenRequest calldata request,\\n        bytes calldata signature\\n    ) internal view returns (bool) {\\n        bytes32 msgHash = hashForToken(request);\\n        address signer = ECDSA.recover(msgHash, signature);\\n        require(signer == request.owner, \\\"invalid signature\\\");\\n        require(\\n            request.issuedAt >= block.number - lengthOfToken,\\n            \\\"Request is too old\\\"\\n        );\\n        return true;\\n    }\\n\\n    function createTokenRequest(\\n        address owner,\\n        address device\\n    ) public view returns (TokenRequest memory request, string memory) {\\n        request = TokenRequest({\\n            owner: owner,\\n            device: device,\\n            issuedAt: block.number - 1\\n        });\\n        return (request, stringToSign(request));\\n    }\\n\\n\\n    /**\\n     * @dev Returns the string to sign of the provided WalletCreateRequest.\\n     * @param request The WalletCreateRequest struct containing the owner address, device address, and issuedAt block number.\\n     */\\n    function stringToSign(\\n        TokenRequest memory request\\n    ) internal view returns (string memory) {\\n        return string(abi.encodePacked(\\n            STATEMENT,\\n            \\\"\\\\n\\\\nMe: \\\",\\n            Strings.toHexString(request.owner),\\n            \\\"\\\\nDevice: \\\",\\n            Strings.toHexString(request.device),\\n            \\\"\\\\nIssued at: \\\",\\n            Strings.toString(request.issuedAt)\\n        ));\\n    }\\n\\n    function hashForToken(\\n        TokenRequest calldata request\\n    ) internal view returns (bytes32) {\\n        return ECDSA.toEthSignedMessageHash(bytes(stringToSign(request)));\\n    }\\n}\",\"keccak256\":\"0x46bcf484ada1e1d321fd73afe7060e7e0b3930ba844bc32599fe88b7860715ce\",\"license\":\"MIT\"},\"contracts/interfaces/IGnosisSafe.sol\":{\"content\":\"pragma solidity ^0.8.19;\\n\\ncontract Enum {\\n    enum Operation {\\n        Call,\\n        DelegateCall\\n    }\\n}\\n\\ninterface GnosisSafe {\\n    /// @dev Allows a Module to execute a Safe transaction without any further confirmations.\\n    /// @param to Destination address of module transaction.\\n    /// @param value Ether value of module transaction.\\n    /// @param data Data payload of module transaction.\\n    /// @param operation Operation type of module transaction.\\n    function execTransactionFromModule(\\n        address to,\\n        uint256 value,\\n        bytes calldata data,\\n        Enum.Operation operation\\n    ) external returns (bool success);\\n\\n    function getThreshold() external view returns (uint256);\\n\\n    function getOwners() external view returns (address[] memory);\\n\\n    function isOwner(address owner) external view returns (bool);\\n\\n    function enableModule(address module) external;\\n}\\n\",\"keccak256\":\"0x24f2aae9d94b5a3f8e69fe4628bb053a35c4d9ad3343469d2d2bd66d13c67038\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1628,"contract":"contracts/EnglishOwnerAdder.sol:EnglishOwnerAdder","label":"STATEMENT","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1631,"contract":"contracts/EnglishOwnerAdder.sol:EnglishOwnerAdder","label":"lengthOfToken","offset":0,"slot":"1","type":"t_uint256"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/EnglishOwnerRemover.sol":{"EnglishOwnerRemover":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"STATEMENT","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"device","type":"address"}],"name":"createTokenRequest","outputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"device","type":"address"},{"internalType":"uint256","name":"issuedAt","type":"uint256"}],"internalType":"struct TokenAuthenticated.TokenRequest","name":"request","type":"tuple"},{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lengthOfToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_safe","type":"address"},{"internalType":"address","name":"previousOwner","type":"address"},{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"device","type":"address"},{"internalType":"uint256","name":"issuedAt","type":"uint256"}],"internalType":"struct TokenAuthenticated.TokenRequest","name":"request","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"removeOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1497":{"entryPoint":null,"id":1497,"parameterSlots":0,"returnSlots":0},"@_1648":{"entryPoint":null,"id":1648,"parameterSlots":1,"returnSlots":0},"array_dataslot_t_string_storage":{"entryPoint":232,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":74,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":553,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":368,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":514,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":388,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":708,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":253,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":179,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":678,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":378,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":646,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":132,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":85,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":428,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":269,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":633,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":486,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":282,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":438,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":481,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5231:10","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:10","statements":[{"nodeType":"YulAssignment","src":"77:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:10"},"nodeType":"YulFunctionCall","src":"87:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:10"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:10","type":""}],"src":"7:99:10"},{"body":{"nodeType":"YulBlock","src":"140:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:10"},"nodeType":"YulFunctionCall","src":"150:88:10"},"nodeType":"YulExpressionStatement","src":"150:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:10"},"nodeType":"YulFunctionCall","src":"247:15:10"},"nodeType":"YulExpressionStatement","src":"247:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:10"},"nodeType":"YulFunctionCall","src":"271:15:10"},"nodeType":"YulExpressionStatement","src":"271:15:10"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:10"},{"body":{"nodeType":"YulBlock","src":"326:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:10"},"nodeType":"YulFunctionCall","src":"336:88:10"},"nodeType":"YulExpressionStatement","src":"336:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:10"},"nodeType":"YulFunctionCall","src":"433:15:10"},"nodeType":"YulExpressionStatement","src":"433:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:10"},"nodeType":"YulFunctionCall","src":"457:15:10"},"nodeType":"YulExpressionStatement","src":"457:15:10"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:10"},{"body":{"nodeType":"YulBlock","src":"535:269:10","statements":[{"nodeType":"YulAssignment","src":"545:22:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:10","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:10"},"nodeType":"YulFunctionCall","src":"555:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:10","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:10"},"nodeType":"YulFunctionCall","src":"602:12:10"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:10","statements":[{"nodeType":"YulAssignment","src":"667:27:10","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:10"},"nodeType":"YulFunctionCall","src":"677:17:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:10"},"nodeType":"YulFunctionCall","src":"626:26:10"},"nodeType":"YulIf","src":"623:81:10"},{"body":{"nodeType":"YulBlock","src":"756:42:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:10"},"nodeType":"YulFunctionCall","src":"770:18:10"},"nodeType":"YulExpressionStatement","src":"770:18:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:10"},"nodeType":"YulFunctionCall","src":"740:14:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:10"},"nodeType":"YulFunctionCall","src":"717:38:10"},"nodeType":"YulIf","src":"714:84:10"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:10","type":""}],"src":"484:320:10"},{"body":{"nodeType":"YulBlock","src":"864:87:10","statements":[{"nodeType":"YulAssignment","src":"874:11:10","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:10"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:10","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:10"},"nodeType":"YulFunctionCall","src":"895:14:10"},"nodeType":"YulExpressionStatement","src":"895:14:10"},{"nodeType":"YulAssignment","src":"918:26:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:10"},"nodeType":"YulFunctionCall","src":"926:18:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:10"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:10","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:10","type":""}],"src":"810:141:10"},{"body":{"nodeType":"YulBlock","src":"1001:49:10","statements":[{"nodeType":"YulAssignment","src":"1011:33:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:10"},"nodeType":"YulFunctionCall","src":"1025:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:10","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:10"},"nodeType":"YulFunctionCall","src":"1021:23:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:10"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:10","type":""}],"src":"957:93:10"},{"body":{"nodeType":"YulBlock","src":"1109:54:10","statements":[{"nodeType":"YulAssignment","src":"1119:37:10","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:10"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:10"},"nodeType":"YulFunctionCall","src":"1140:16:10"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:10"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:10","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:10","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:10","type":""}],"src":"1056:107:10"},{"body":{"nodeType":"YulBlock","src":"1245:317:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:10","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:10","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:10"},"nodeType":"YulFunctionCall","src":"1272:18:10"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:10","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:10"},"nodeType":"YulFunctionCall","src":"1311:97:10"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:10","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:10","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:10"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:10"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:10"},"nodeType":"YulFunctionCall","src":"1429:39:10"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:10"}]},{"nodeType":"YulAssignment","src":"1477:30:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:10"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:10"},"nodeType":"YulFunctionCall","src":"1497:9:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:10"},"nodeType":"YulFunctionCall","src":"1486:21:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:10"}]},{"nodeType":"YulAssignment","src":"1516:40:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:10"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:10"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:10"},"nodeType":"YulFunctionCall","src":"1536:19:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:10"},"nodeType":"YulFunctionCall","src":"1526:30:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:10"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:10","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:10","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:10","type":""}],"src":"1169:393:10"},{"body":{"nodeType":"YulBlock","src":"1613:32:10","statements":[{"nodeType":"YulAssignment","src":"1623:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:10"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:10","type":""}],"src":"1568:77:10"},{"body":{"nodeType":"YulBlock","src":"1683:28:10","statements":[{"nodeType":"YulAssignment","src":"1693:12:10","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:10"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:10","type":""}],"src":"1651:60:10"},{"body":{"nodeType":"YulBlock","src":"1777:82:10","statements":[{"nodeType":"YulAssignment","src":"1787:66:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:10"},"nodeType":"YulFunctionCall","src":"1827:24:10"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:10"},"nodeType":"YulFunctionCall","src":"1818:34:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:10"},"nodeType":"YulFunctionCall","src":"1800:53:10"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:10"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:10","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:10","type":""}],"src":"1717:142:10"},{"body":{"nodeType":"YulBlock","src":"1912:28:10","statements":[{"nodeType":"YulAssignment","src":"1922:12:10","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:10"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:10","type":""}],"src":"1865:75:10"},{"body":{"nodeType":"YulBlock","src":"2022:193:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:10","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:10"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:10"},"nodeType":"YulFunctionCall","src":"2056:39:10"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:10"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:10"},"nodeType":"YulFunctionCall","src":"2145:11:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:10"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:10"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:10"},"nodeType":"YulFunctionCall","src":"2166:41:10"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:10"},"nodeType":"YulFunctionCall","src":"2117:91:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:10"},"nodeType":"YulFunctionCall","src":"2104:105:10"},"nodeType":"YulExpressionStatement","src":"2104:105:10"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:10","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:10","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:10","type":""}],"src":"1946:269:10"},{"body":{"nodeType":"YulBlock","src":"2270:24:10","statements":[{"nodeType":"YulAssignment","src":"2280:8:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:10","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:10"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:10","type":""}],"src":"2221:73:10"},{"body":{"nodeType":"YulBlock","src":"2353:136:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:10","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:10"},"nodeType":"YulFunctionCall","src":"2377:32:10"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:10"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:10"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:10"},"nodeType":"YulFunctionCall","src":"2418:65:10"},"nodeType":"YulExpressionStatement","src":"2418:65:10"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:10","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:10","type":""}],"src":"2300:189:10"},{"body":{"nodeType":"YulBlock","src":"2545:136:10","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:10","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:10","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:10"},"nodeType":"YulFunctionCall","src":"2626:39:10"},"nodeType":"YulExpressionStatement","src":"2626:39:10"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:10"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:10"},"nodeType":"YulFunctionCall","src":"2562:14:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:10","statements":[{"nodeType":"YulAssignment","src":"2579:22:10","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:10"},"nodeType":"YulFunctionCall","src":"2588:13:10"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:10"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:10","statements":[]},"src":"2555:120:10"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:10","type":""}],"src":"2495:186:10"},{"body":{"nodeType":"YulBlock","src":"2766:464:10","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:10","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:10"},"nodeType":"YulFunctionCall","src":"2822:38:10"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:10","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:10"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:10"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:10"},"nodeType":"YulFunctionCall","src":"2906:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:10"},"nodeType":"YulFunctionCall","src":"2892:44:10"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:10","statements":[{"nodeType":"YulAssignment","src":"3095:23:10","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:10"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:10"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:10"},"nodeType":"YulFunctionCall","src":"3074:18:10"},"nodeType":"YulIf","src":"3071:49:10"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:10"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:10"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:10"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:10"},"nodeType":"YulFunctionCall","src":"3189:22:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:10"},"nodeType":"YulFunctionCall","src":"3175:37:10"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:10"},"nodeType":"YulFunctionCall","src":"3133:80:10"},"nodeType":"YulExpressionStatement","src":"3133:80:10"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:10"},"nodeType":"YulFunctionCall","src":"2780:11:10"},"nodeType":"YulIf","src":"2777:446:10"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:10","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:10","type":""}],"src":"2687:543:10"},{"body":{"nodeType":"YulBlock","src":"3299:54:10","statements":[{"nodeType":"YulAssignment","src":"3309:37:10","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:10"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:10"},"nodeType":"YulFunctionCall","src":"3330:16:10"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:10"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:10","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:10","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:10","type":""}],"src":"3236:117:10"},{"body":{"nodeType":"YulBlock","src":"3410:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:10","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:10"},"nodeType":"YulFunctionCall","src":"3465:13:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:10"},"nodeType":"YulFunctionCall","src":"3480:6:10"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:10"},"nodeType":"YulFunctionCall","src":"3436:51:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:10"},"nodeType":"YulFunctionCall","src":"3432:56:10"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:10","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:10"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:10"},"nodeType":"YulFunctionCall","src":"3507:15:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:10"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:10","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:10","type":""}],"src":"3359:169:10"},{"body":{"nodeType":"YulBlock","src":"3614:214:10","statements":[{"nodeType":"YulAssignment","src":"3747:37:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:10"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:10"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:10"},"nodeType":"YulFunctionCall","src":"3755:29:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:10"}]},{"nodeType":"YulAssignment","src":"3793:29:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:10","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:10"},"nodeType":"YulFunctionCall","src":"3810:11:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:10"},"nodeType":"YulFunctionCall","src":"3801:21:10"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:10"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:10","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:10","type":""}],"src":"3533:295:10"},{"body":{"nodeType":"YulBlock","src":"3925:1303:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:10","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:10"},"nodeType":"YulFunctionCall","src":"3950:37:10"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:10"},"nodeType":"YulFunctionCall","src":"4074:18:10"},"nodeType":"YulExpressionStatement","src":"4074:18:10"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:10"},"nodeType":"YulFunctionCall","src":"4041:30:10"},"nodeType":"YulIf","src":"4038:56:10"},{"nodeType":"YulVariableDeclaration","src":"4104:52:10","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:10"},"nodeType":"YulFunctionCall","src":"4144:11:10"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:10"},"nodeType":"YulFunctionCall","src":"4118:38:10"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:10"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:10"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:10"},"nodeType":"YulFunctionCall","src":"4203:67:10"},"nodeType":"YulExpressionStatement","src":"4203:67:10"},{"nodeType":"YulVariableDeclaration","src":"4280:18:10","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:10","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:10","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:10","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:10","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:10"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:10","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:10","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:10"},"nodeType":"YulFunctionCall","src":"4413:9:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:10"},"nodeType":"YulFunctionCall","src":"4401:22:10"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:10","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:10"},"nodeType":"YulFunctionCall","src":"4451:37:10"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:10","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:10"},"nodeType":"YulFunctionCall","src":"4608:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:10"},"nodeType":"YulFunctionCall","src":"4602:26:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:10"},"nodeType":"YulFunctionCall","src":"4587:42:10"},"nodeType":"YulExpressionStatement","src":"4587:42:10"},{"nodeType":"YulAssignment","src":"4646:24:10","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:10"},"nodeType":"YulFunctionCall","src":"4656:14:10"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:10"}]},{"nodeType":"YulAssignment","src":"4687:31:10","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:10"},"nodeType":"YulFunctionCall","src":"4700:18:10"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:10"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:10"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:10"},"nodeType":"YulFunctionCall","src":"4532:14:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:10","statements":[{"nodeType":"YulAssignment","src":"4549:17:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:10"},"nodeType":"YulFunctionCall","src":"4554:12:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:10","statements":[]},"src":"4524:208:10"},{"body":{"nodeType":"YulBlock","src":"4768:156:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:10","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:10"},"nodeType":"YulFunctionCall","src":"4809:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:10"},"nodeType":"YulFunctionCall","src":"4803:26:10"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:10","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:10"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:10"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:10","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:10"},"nodeType":"YulFunctionCall","src":"4891:17:10"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:10"},"nodeType":"YulFunctionCall","src":"4861:48:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:10"},"nodeType":"YulFunctionCall","src":"4846:64:10"},"nodeType":"YulExpressionStatement","src":"4846:64:10"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:10"},"nodeType":"YulFunctionCall","src":"4748:19:10"},"nodeType":"YulIf","src":"4745:179:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:10"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:10","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:10"},"nodeType":"YulFunctionCall","src":"4954:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:10"},"nodeType":"YulFunctionCall","src":"4950:22:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:10"},"nodeType":"YulFunctionCall","src":"4937:36:10"},"nodeType":"YulExpressionStatement","src":"4937:36:10"}]},"nodeType":"YulCase","src":"4365:618:10","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:10","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:10","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:10","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:10","statements":[{"nodeType":"YulAssignment","src":"5069:35:10","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:10"},"nodeType":"YulFunctionCall","src":"5084:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:10"},"nodeType":"YulFunctionCall","src":"5078:26:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:10"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:10"},"nodeType":"YulIf","src":"5041:77:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:10"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:10"},"nodeType":"YulFunctionCall","src":"5144:67:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:10"},"nodeType":"YulFunctionCall","src":"5131:81:10"},"nodeType":"YulExpressionStatement","src":"5131:81:10"}]},"nodeType":"YulCase","src":"4992:230:10","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:10"},"nodeType":"YulFunctionCall","src":"4342:14:10"},"nodeType":"YulSwitch","src":"4335:887:10"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:10","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:10","type":""}],"src":"3833:1395:10"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xF PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x222D PUSH1 0x2D SWAP2 CODECOPY DUP1 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x42 SWAP2 SWAP1 PUSH3 0x2C4 JUMP JUMPDEST POP POP PUSH3 0x3AB JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xCC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xE2 JUMPI PUSH3 0xE1 PUSH3 0x84 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x14C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x10D JUMP JUMPDEST PUSH3 0x158 DUP7 DUP4 PUSH3 0x10D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A5 PUSH3 0x19F PUSH3 0x199 DUP5 PUSH3 0x170 JUMP JUMPDEST PUSH3 0x17A JUMP JUMPDEST PUSH3 0x170 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1C1 DUP4 PUSH3 0x184 JUMP JUMPDEST PUSH3 0x1D9 PUSH3 0x1D0 DUP3 PUSH3 0x1AC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x11A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x1F0 PUSH3 0x1E1 JUMP JUMPDEST PUSH3 0x1FD DUP2 DUP5 DUP5 PUSH3 0x1B6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x225 JUMPI PUSH3 0x219 PUSH1 0x0 DUP3 PUSH3 0x1E6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x203 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x274 JUMPI PUSH3 0x23E DUP2 PUSH3 0xE8 JUMP JUMPDEST PUSH3 0x249 DUP5 PUSH3 0xFD JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x259 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x271 PUSH3 0x268 DUP6 PUSH3 0xFD JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x202 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x299 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x279 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2B4 DUP4 DUP4 PUSH3 0x286 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2CF DUP3 PUSH3 0x4A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2EB JUMPI PUSH3 0x2EA PUSH3 0x55 JUMP JUMPDEST JUMPDEST PUSH3 0x2F7 DUP3 SLOAD PUSH3 0xB3 JUMP JUMPDEST PUSH3 0x304 DUP3 DUP3 DUP6 PUSH3 0x229 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x33C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x327 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x333 DUP6 DUP3 PUSH3 0x2A6 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x3A3 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x34C DUP7 PUSH3 0xE8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x376 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x34F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x396 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x392 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x286 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E72 DUP1 PUSH3 0x3BB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x142AF66B EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xB6AD16A8 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xBEBC479C EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0xCB2E6043 EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH2 0xDA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82 SWAP2 SWAP1 PUSH2 0xFC8 JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95 SWAP3 SWAP2 SWAP1 PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x1163 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE5 DUP4 DUP4 DUP4 PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP6 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE75235B8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x140 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 EQ PUSH2 0x1A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A0 SWAP1 PUSH2 0x1249 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F54BF6E DUP7 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x211 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP6 DUP6 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x29F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xF8DC5DD900000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x468721A7 DUP9 PUSH1 0x0 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x37E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0xDF8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 NUMBER PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x159C JUMP JUMPDEST DUP2 MSTORE POP SWAP2 POP DUP2 PUSH2 0x415 DUP4 PUSH2 0x5F5 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x42D SWAP1 PUSH2 0x15FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x459 SWAP1 PUSH2 0x15FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x489 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4C0 DUP6 PUSH2 0x649 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x512 DUP3 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x673 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x527 SWAP2 SWAP1 PUSH2 0x1269 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x594 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58B SWAP1 PUSH2 0x167C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD NUMBER PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x159C JUMP JUMPDEST DUP7 PUSH1 0x40 ADD CALLDATALOAD LT ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x606 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x613 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x620 DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x633 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66C PUSH2 0x667 DUP4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x1A18 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0x795 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x682 DUP6 DUP6 PUSH2 0x7D0 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x68F DUP2 PUSH2 0x821 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6C0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x987 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x6D6 DUP5 PUSH2 0xBC3 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6F5 JUMPI PUSH2 0x6F4 PUSH2 0x1924 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x727 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x78A JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x77E JUMPI PUSH2 0x77D PUSH2 0x1A45 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x735 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A1 DUP3 MLOAD PUSH2 0x6C7 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7B3 SWAP3 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x41 DUP4 MLOAD SUB PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x805 DUP8 DUP3 DUP6 DUP6 PUSH2 0xD16 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x81A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x835 JUMPI PUSH2 0x834 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x848 JUMPI PUSH2 0x847 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x984 JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x862 JUMPI PUSH2 0x861 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x875 JUMPI PUSH2 0x874 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST SUB PUSH2 0x8B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP1 PUSH2 0x1B77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x8C9 JUMPI PUSH2 0x8C8 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x8DC JUMPI PUSH2 0x8DB PUSH2 0x14AA JUMP JUMPDEST JUMPDEST SUB PUSH2 0x91C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x913 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x930 JUMPI PUSH2 0x92F PUSH2 0x14AA JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x943 JUMPI PUSH2 0x942 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST SUB PUSH2 0x983 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97A SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x99A SWAP2 SWAP1 PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0x1CD7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9BD JUMPI PUSH2 0x9BC PUSH2 0x1924 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9EF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA27 JUMPI PUSH2 0xA26 PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA8B JUMPI PUSH2 0xA8A PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xACB SWAP2 SWAP1 PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x1CD7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB75 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xB17 JUMPI PUSH2 0xB16 PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB2E JUMPI PUSH2 0xB2D PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xB6E SWAP1 PUSH2 0x1D3A JUMP JUMPDEST SWAP1 POP PUSH2 0xAD8 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0xBB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB0 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0xC21 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0xC17 JUMPI PUSH2 0xC16 PUSH2 0x1A45 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC5E JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0xC54 JUMPI PUSH2 0xC53 PUSH2 0x1A45 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC8D JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0xC83 JUMPI PUSH2 0xC82 PUSH2 0x1A45 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xCB6 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0xCAC JUMPI PUSH2 0xCAB PUSH2 0x1A45 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xCDB JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0xCD1 JUMPI PUSH2 0xCD0 PUSH2 0x1A45 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xCFE JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0xCF4 JUMPI PUSH2 0xCF3 PUSH2 0x1A45 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0xD0D JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0xD51 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xD76 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDE6 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0xDEF JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE84 DUP3 PUSH2 0xE59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE94 DUP2 PUSH2 0xE79 JUMP JUMPDEST DUP2 EQ PUSH2 0xE9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB1 DUP2 PUSH2 0xE8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED2 JUMPI PUSH2 0xED1 PUSH2 0xEB7 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xF00 JUMPI PUSH2 0xEFF PUSH2 0xEDB JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF1D JUMPI PUSH2 0xF1C PUSH2 0xEE0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xF39 JUMPI PUSH2 0xF38 PUSH2 0xEE5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF5C JUMPI PUSH2 0xF5B PUSH2 0xE4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF6A DUP9 DUP3 DUP10 ADD PUSH2 0xEA2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xF7B DUP9 DUP3 DUP10 ADD PUSH2 0xEA2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xF8C DUP9 DUP3 DUP10 ADD PUSH2 0xEBC JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFAD JUMPI PUSH2 0xFAC PUSH2 0xE54 JUMP JUMPDEST JUMPDEST PUSH2 0xFB9 DUP9 DUP3 DUP10 ADD PUSH2 0xEEA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFDF JUMPI PUSH2 0xFDE PUSH2 0xE4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFED DUP6 DUP3 DUP7 ADD PUSH2 0xEA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFFE DUP6 DUP3 DUP7 ADD PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1011 DUP2 PUSH2 0xE79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102A DUP2 PUSH2 0x1017 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1046 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1008 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1059 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1008 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x106C PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1021 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10AC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D4 DUP3 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x10DE DUP2 DUP6 PUSH2 0x107D JUMP JUMPDEST SWAP4 POP PUSH2 0x10EE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x108E JUMP JUMPDEST PUSH2 0x10F7 DUP2 PUSH2 0x10B8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1117 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1030 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1129 DUP2 DUP5 PUSH2 0x10C9 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x114C DUP2 DUP5 PUSH2 0x10C9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x115D DUP2 PUSH2 0x1017 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1178 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1154 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1187 DUP2 PUSH2 0x1017 JUMP JUMPDEST DUP2 EQ PUSH2 0x1192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11A4 DUP2 PUSH2 0x117E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11C0 JUMPI PUSH2 0x11BF PUSH2 0xE4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11CE DUP5 DUP3 DUP6 ADD PUSH2 0x1195 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792073616665277320776974682061207468726573686F6C64206F6620 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E652061726520737570706F72746564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1233 PUSH1 0x31 DUP4 PUSH2 0x107D JUMP JUMPDEST SWAP2 POP PUSH2 0x123E DUP3 PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1262 DUP2 PUSH2 0x1226 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x127F JUMPI PUSH2 0x127E PUSH2 0xE4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x128D DUP5 DUP3 DUP6 ADD PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x129F DUP2 PUSH2 0xE79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1296 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D5 DUP2 PUSH2 0x12C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x12E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12F2 DUP2 PUSH2 0x12CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130E JUMPI PUSH2 0x130D PUSH2 0xE4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x131C DUP5 DUP3 DUP6 ADD PUSH2 0x12E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E6572206973206E6F7420612073616665206F776E657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x135B PUSH1 0x19 DUP4 PUSH2 0x107D JUMP JUMPDEST SWAP2 POP PUSH2 0x1366 DUP3 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x138A DUP2 PUSH2 0x134E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13CD PUSH2 0x13C8 PUSH2 0x13C3 DUP5 PUSH2 0x1391 JUMP JUMPDEST PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x139B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13DD DUP2 PUSH2 0x13B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13F8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1296 JUMP JUMPDEST PUSH2 0x1405 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1296 JUMP JUMPDEST PUSH2 0x1412 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x13D4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143F PUSH2 0x143A PUSH2 0x1435 DUP5 PUSH2 0x141A JUMP JUMPDEST PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x1017 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144F DUP2 PUSH2 0x1424 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x147C DUP3 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x1486 DUP2 DUP6 PUSH2 0x1460 JUMP JUMPDEST SWAP4 POP PUSH2 0x1496 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x108E JUMP JUMPDEST PUSH2 0x149F DUP2 PUSH2 0x10B8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x14EA JUMPI PUSH2 0x14E9 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x14FB DUP3 PUSH2 0x14D9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150B DUP3 PUSH2 0x14ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151B DUP2 PUSH2 0x1500 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1536 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1296 JUMP JUMPDEST PUSH2 0x1543 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1446 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1555 DUP2 DUP6 PUSH2 0x1471 JUMP JUMPDEST SWAP1 POP PUSH2 0x1564 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1512 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15A7 DUP3 PUSH2 0x1017 JUMP JUMPDEST SWAP2 POP PUSH2 0x15B2 DUP4 PUSH2 0x1017 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x15CA JUMPI PUSH2 0x15C9 PUSH2 0x156D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1617 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x162A JUMPI PUSH2 0x1629 PUSH2 0x15D0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1666 PUSH1 0x11 DUP4 PUSH2 0x107D JUMP JUMPDEST SWAP2 POP PUSH2 0x1671 DUP3 PUSH2 0x1630 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1695 DUP2 PUSH2 0x1659 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265717565737420697320746F6F206F6C640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D2 PUSH1 0x12 DUP4 PUSH2 0x107D JUMP JUMPDEST SWAP2 POP PUSH2 0x16DD DUP3 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1701 DUP2 PUSH2 0x16C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x1735 DUP2 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x173F DUP2 DUP7 PUSH2 0x1708 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x175A JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x176F JUMPI PUSH2 0x17A2 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0x1778 DUP6 PUSH2 0x1713 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x179A JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x177B JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA0A4D653A200000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E1 PUSH1 0x6 DUP4 PUSH2 0x1708 JUMP JUMPDEST SWAP2 POP PUSH2 0x17EC DUP3 PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1802 DUP3 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x180C DUP2 DUP6 PUSH2 0x1708 JUMP JUMPDEST SWAP4 POP PUSH2 0x181C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x108E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA4465766963653A200000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x185E PUSH1 0x9 DUP4 PUSH2 0x1708 JUMP JUMPDEST SWAP2 POP PUSH2 0x1869 DUP3 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA4973737565642061743A200000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AA PUSH1 0xC DUP4 PUSH2 0x1708 JUMP JUMPDEST SWAP2 POP PUSH2 0x18B5 DUP3 PUSH2 0x1874 JUMP JUMPDEST PUSH1 0xC DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18CC DUP3 DUP8 PUSH2 0x1728 JUMP JUMPDEST SWAP2 POP PUSH2 0x18D7 DUP3 PUSH2 0x17D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x18E3 DUP3 DUP7 PUSH2 0x17F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x18EE DUP3 PUSH2 0x1851 JUMP JUMPDEST SWAP2 POP PUSH2 0x18FA DUP3 DUP6 PUSH2 0x17F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1905 DUP3 PUSH2 0x189D JUMP JUMPDEST SWAP2 POP PUSH2 0x1911 DUP3 DUP5 PUSH2 0x17F7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x195C DUP3 PUSH2 0x10B8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x197B JUMPI PUSH2 0x197A PUSH2 0x1924 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198E PUSH2 0xE45 JUMP JUMPDEST SWAP1 POP PUSH2 0x199A DUP3 DUP3 PUSH2 0x1953 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19AE DUP2 PUSH2 0x117E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19CA JUMPI PUSH2 0x19C9 PUSH2 0x191F JUMP JUMPDEST JUMPDEST PUSH2 0x19D4 PUSH1 0x60 PUSH2 0x1984 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x19E4 DUP5 DUP3 DUP6 ADD PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x19F8 DUP5 DUP3 DUP6 ADD PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1A0C DUP5 DUP3 DUP6 ADD PUSH2 0x199F JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A2E JUMPI PUSH2 0x1A2D PUSH2 0xE4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A3C DUP5 DUP3 DUP6 ADD PUSH2 0x19B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAA PUSH1 0x1A DUP4 PUSH2 0x1708 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB5 DUP3 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x1A DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD6 DUP3 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x1AE0 DUP2 DUP6 PUSH2 0x1AC0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AF0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x108E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B07 DUP3 PUSH2 0x1A9D JUMP JUMPDEST SWAP2 POP PUSH2 0x1B13 DUP3 DUP6 PUSH2 0x17F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1F DUP3 DUP5 PUSH2 0x1ACB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B61 PUSH1 0x18 DUP4 PUSH2 0x107D JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6C DUP3 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B90 DUP2 PUSH2 0x1B54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BCD PUSH1 0x1F DUP4 PUSH2 0x107D JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD8 DUP3 PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BFC DUP2 PUSH2 0x1BC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5F PUSH1 0x22 DUP4 PUSH2 0x107D JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6A DUP3 PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C8E DUP2 PUSH2 0x1C52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA0 DUP3 PUSH2 0x1017 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CAB DUP4 PUSH2 0x1017 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1CB9 DUP2 PUSH2 0x1017 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1CD0 JUMPI PUSH2 0x1CCF PUSH2 0x156D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE2 DUP3 PUSH2 0x1017 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CED DUP4 PUSH2 0x1017 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D05 JUMPI PUSH2 0x1D04 PUSH2 0x156D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D45 DUP3 PUSH2 0x1017 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1D58 JUMPI PUSH2 0x1D57 PUSH2 0x156D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D99 PUSH1 0x20 DUP4 PUSH2 0x107D JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA4 DUP3 PUSH2 0x1D63 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DC8 DUP2 PUSH2 0x1D8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DE2 DUP2 PUSH2 0x1DCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1DF1 DUP2 PUSH2 0x139B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E0C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1DD9 JUMP JUMPDEST PUSH2 0x1E19 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DE8 JUMP JUMPDEST PUSH2 0x1E26 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1DD9 JUMP JUMPDEST PUSH2 0x1E33 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1DD9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x64223F3A15A76FDF02 PUSH21 0x8F97A467235CDCF0C420AEA8D5C43D8B1860AE1CD7 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER 0x49 KECCAK256 PUSH24 0x616E7420746F2072656D6F76652074686973206465766963 PUSH6 0x2066726F6D20 PUSH14 0x79206163636F756E742E00000000 ","sourceMap":"133:1041:4:-:0;;;407:2:6;376:33;;191:84:4;;;;;;;;;;529:77:6;;;;;;;;;;;;;;;;;589:10;577:9;:22;;;;;;:::i;:::-;;529:77;133:1041:4;;7:99:10;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;133:1041:4:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@STATEMENT_1628":{"entryPoint":1056,"id":1628,"parameterSlots":0,"returnSlots":0},"@_throwError_228":{"entryPoint":2081,"id":228,"parameterSlots":1,"returnSlots":0},"@authenticate_1714":{"entryPoint":1204,"id":1714,"parameterSlots":3,"returnSlots":1},"@createTokenRequest_1744":{"entryPoint":940,"id":1744,"parameterSlots":2,"returnSlots":2},"@hashForToken_1799":{"entryPoint":1609,"id":1799,"parameterSlots":1,"returnSlots":1},"@lengthOfToken_1631":{"entryPoint":1198,"id":1631,"parameterSlots":0,"returnSlots":0},"@log10_1237":{"entryPoint":3011,"id":1237,"parameterSlots":1,"returnSlots":1},"@recover_301":{"entryPoint":1651,"id":301,"parameterSlots":2,"returnSlots":1},"@removeOwner_1570":{"entryPoint":218,"id":1570,"parameterSlots":5,"returnSlots":0},"@stringToSign_1780":{"entryPoint":1525,"id":1780,"parameterSlots":1,"returnSlots":1},"@toEthSignedMessageHash_514":{"entryPoint":1941,"id":514,"parameterSlots":1,"returnSlots":1},"@toHexString_153":{"entryPoint":2439,"id":153,"parameterSlots":2,"returnSlots":1},"@toHexString_173":{"entryPoint":1690,"id":173,"parameterSlots":1,"returnSlots":1},"@toString_57":{"entryPoint":1735,"id":57,"parameterSlots":1,"returnSlots":1},"@tryRecover_274":{"entryPoint":2000,"id":274,"parameterSlots":2,"returnSlots":2},"@tryRecover_442":{"entryPoint":3350,"id":442,"parameterSlots":4,"returnSlots":2},"abi_decode_t_address":{"entryPoint":3746,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":4835,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":3818,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_struct$_TokenRequest_$1638_calldata_ptr":{"entryPoint":3772,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_TokenRequest_$1638_memory_ptr":{"entryPoint":6580,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6559,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":4501,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4713,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4040,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_struct$_TokenRequest_$1638_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":3904,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":4856,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_TokenRequest_$1638_memory_ptr":{"entryPoint":6680,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":4522,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":4104,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4758,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":7641,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":5233,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6859,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_Operation_$2032_to_t_uint8_fromStack":{"entryPoint":5394,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack":{"entryPoint":5190,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack":{"entryPoint":5076,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4297,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6135,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5928,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack":{"entryPoint":6996,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack":{"entryPoint":7564,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack":{"entryPoint":5721,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack":{"entryPoint":7104,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack":{"entryPoint":7250,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6301,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6813,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b_to_t_string_memory_ptr_fromStack":{"entryPoint":4942,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05_to_t_string_memory_ptr_fromStack":{"entryPoint":4646,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6225,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6100,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5_to_t_string_memory_ptr_fromStack":{"entryPoint":5829,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack":{"entryPoint":4144,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":4129,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4436,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":7656,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_storage_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_t_string_memory_ptr_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_t_string_memory_ptr_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6336,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_t_string_memory_ptr_t_bytes_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6908,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4773,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_rational_1_by_1__to_t_address_t_address_t_uint8__fromStack_reversed":{"entryPoint":5091,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_rational_0_by_1_t_bytes_memory_ptr_t_enum$_Operation_$2032__to_t_address_t_uint256_t_bytes_memory_ptr_t_uint8__fromStack_reversed":{"entryPoint":5409,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":7671,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4402,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7031,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7599,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5756,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7139,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7285,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4977,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4681,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5864,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__to_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4354,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4451,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6532,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3653,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":5907,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":5205,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4210,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":5216,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6848,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4221,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5896,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7383,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7317,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5532,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3705,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4800,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7631,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Operation_$2032":{"entryPoint":5357,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_0_by_1":{"entryPoint":5146,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":5009,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3673,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4119,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":5019,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_Operation_$2032_to_t_uint8":{"entryPoint":5376,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_0_by_1_to_t_uint256":{"entryPoint":5156,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint8":{"entryPoint":5042,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4238,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":7482,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5631,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6483,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":5032,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5485,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":6725,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":5290,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":5584,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7435,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6436,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":3808,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3803,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":3767,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":6431,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3813,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3668,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3663,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4280,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be":{"entryPoint":6955,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2":{"entryPoint":7523,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a":{"entryPoint":5680,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77":{"entryPoint":7063,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd":{"entryPoint":7171,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb":{"entryPoint":6260,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4":{"entryPoint":6772,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b":{"entryPoint":4901,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05":{"entryPoint":4567,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60":{"entryPoint":6184,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262":{"entryPoint":6059,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5":{"entryPoint":5788,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_Operation_$2032":{"entryPoint":5337,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3723,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":4812,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4478,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:32581:10","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:10","statements":[{"nodeType":"YulAssignment","src":"57:19:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:10"},"nodeType":"YulFunctionCall","src":"67:9:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:10"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:10","type":""}],"src":"7:75:10"},{"body":{"nodeType":"YulBlock","src":"177:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:10"},"nodeType":"YulFunctionCall","src":"187:12:10"},"nodeType":"YulExpressionStatement","src":"187:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:10"},{"body":{"nodeType":"YulBlock","src":"300:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:10"},"nodeType":"YulFunctionCall","src":"310:12:10"},"nodeType":"YulExpressionStatement","src":"310:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:10"},{"body":{"nodeType":"YulBlock","src":"379:81:10","statements":[{"nodeType":"YulAssignment","src":"389:65:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:10"},"nodeType":"YulFunctionCall","src":"400:54:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:10"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:10","type":""}],"src":"334:126:10"},{"body":{"nodeType":"YulBlock","src":"511:51:10","statements":[{"nodeType":"YulAssignment","src":"521:35:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:10"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:10"},"nodeType":"YulFunctionCall","src":"532:24:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:10"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:10","type":""}],"src":"466:96:10"},{"body":{"nodeType":"YulBlock","src":"611:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:10"},"nodeType":"YulFunctionCall","src":"670:12:10"},"nodeType":"YulExpressionStatement","src":"670:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:10"},"nodeType":"YulFunctionCall","src":"641:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:10"},"nodeType":"YulFunctionCall","src":"631:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:10"},"nodeType":"YulFunctionCall","src":"624:43:10"},"nodeType":"YulIf","src":"621:63:10"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:10","type":""}],"src":"568:122:10"},{"body":{"nodeType":"YulBlock","src":"748:87:10","statements":[{"nodeType":"YulAssignment","src":"758:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:10"},"nodeType":"YulFunctionCall","src":"767:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:10"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:10"},"nodeType":"YulFunctionCall","src":"796:33:10"},"nodeType":"YulExpressionStatement","src":"796:33:10"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:10","type":""}],"src":"696:139:10"},{"body":{"nodeType":"YulBlock","src":"930:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"947:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"950:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"940:6:10"},"nodeType":"YulFunctionCall","src":"940:12:10"},"nodeType":"YulExpressionStatement","src":"940:12:10"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulFunctionDefinition","src":"841:117:10"},{"body":{"nodeType":"YulBlock","src":"1094:152:10","statements":[{"body":{"nodeType":"YulBlock","src":"1133:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulIdentifier","src":"1135:77:10"},"nodeType":"YulFunctionCall","src":"1135:79:10"},"nodeType":"YulExpressionStatement","src":"1135:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"1115:3:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1120:6:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1111:3:10"},"nodeType":"YulFunctionCall","src":"1111:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"1129:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1107:3:10"},"nodeType":"YulFunctionCall","src":"1107:25:10"},"nodeType":"YulIf","src":"1104:112:10"},{"nodeType":"YulAssignment","src":"1225:15:10","value":{"name":"offset","nodeType":"YulIdentifier","src":"1234:6:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1225:5:10"}]}]},"name":"abi_decode_t_struct$_TokenRequest_$1638_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1072:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"1080:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1088:5:10","type":""}],"src":"1010:236:10"},{"body":{"nodeType":"YulBlock","src":"1341:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1358:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1361:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1351:6:10"},"nodeType":"YulFunctionCall","src":"1351:12:10"},"nodeType":"YulExpressionStatement","src":"1351:12:10"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1252:117:10"},{"body":{"nodeType":"YulBlock","src":"1464:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1481:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1484:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1474:6:10"},"nodeType":"YulFunctionCall","src":"1474:12:10"},"nodeType":"YulExpressionStatement","src":"1474:12:10"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"1375:117:10"},{"body":{"nodeType":"YulBlock","src":"1587:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1604:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1607:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1597:6:10"},"nodeType":"YulFunctionCall","src":"1597:12:10"},"nodeType":"YulExpressionStatement","src":"1597:12:10"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1498:117:10"},{"body":{"nodeType":"YulBlock","src":"1708:478:10","statements":[{"body":{"nodeType":"YulBlock","src":"1757:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1759:77:10"},"nodeType":"YulFunctionCall","src":"1759:79:10"},"nodeType":"YulExpressionStatement","src":"1759:79:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1736:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"1744:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1732:3:10"},"nodeType":"YulFunctionCall","src":"1732:17:10"},{"name":"end","nodeType":"YulIdentifier","src":"1751:3:10"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1728:3:10"},"nodeType":"YulFunctionCall","src":"1728:27:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1721:6:10"},"nodeType":"YulFunctionCall","src":"1721:35:10"},"nodeType":"YulIf","src":"1718:122:10"},{"nodeType":"YulAssignment","src":"1849:30:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1872:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1859:12:10"},"nodeType":"YulFunctionCall","src":"1859:20:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1849:6:10"}]},{"body":{"nodeType":"YulBlock","src":"1922:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1924:77:10"},"nodeType":"YulFunctionCall","src":"1924:79:10"},"nodeType":"YulExpressionStatement","src":"1924:79:10"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1894:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"1902:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1891:2:10"},"nodeType":"YulFunctionCall","src":"1891:30:10"},"nodeType":"YulIf","src":"1888:117:10"},{"nodeType":"YulAssignment","src":"2014:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2030:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2038:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2026:3:10"},"nodeType":"YulFunctionCall","src":"2026:17:10"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2014:8:10"}]},{"body":{"nodeType":"YulBlock","src":"2097:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2099:77:10"},"nodeType":"YulFunctionCall","src":"2099:79:10"},"nodeType":"YulExpressionStatement","src":"2099:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2062:8:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2076:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2084:4:10","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2072:3:10"},"nodeType":"YulFunctionCall","src":"2072:17:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2058:3:10"},"nodeType":"YulFunctionCall","src":"2058:32:10"},{"name":"end","nodeType":"YulIdentifier","src":"2092:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2055:2:10"},"nodeType":"YulFunctionCall","src":"2055:41:10"},"nodeType":"YulIf","src":"2052:128:10"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1675:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"1683:3:10","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1691:8:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"1701:6:10","type":""}],"src":"1634:552:10"},{"body":{"nodeType":"YulBlock","src":"2360:860:10","statements":[{"body":{"nodeType":"YulBlock","src":"2407:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2409:77:10"},"nodeType":"YulFunctionCall","src":"2409:79:10"},"nodeType":"YulExpressionStatement","src":"2409:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2381:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"2390:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2377:3:10"},"nodeType":"YulFunctionCall","src":"2377:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"2402:3:10","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2373:3:10"},"nodeType":"YulFunctionCall","src":"2373:33:10"},"nodeType":"YulIf","src":"2370:120:10"},{"nodeType":"YulBlock","src":"2500:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2515:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2529:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2519:6:10","type":""}]},{"nodeType":"YulAssignment","src":"2544:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2579:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2590:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2575:3:10"},"nodeType":"YulFunctionCall","src":"2575:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2599:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2554:20:10"},"nodeType":"YulFunctionCall","src":"2554:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2544:6:10"}]}]},{"nodeType":"YulBlock","src":"2627:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2642:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2656:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2646:6:10","type":""}]},{"nodeType":"YulAssignment","src":"2672:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2707:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2718:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2703:3:10"},"nodeType":"YulFunctionCall","src":"2703:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2727:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2682:20:10"},"nodeType":"YulFunctionCall","src":"2682:53:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2672:6:10"}]}]},{"nodeType":"YulBlock","src":"2755:150:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2770:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2784:2:10","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2774:6:10","type":""}]},{"nodeType":"YulAssignment","src":"2800:95:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2867:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2878:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2863:3:10"},"nodeType":"YulFunctionCall","src":"2863:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2887:7:10"}],"functionName":{"name":"abi_decode_t_struct$_TokenRequest_$1638_calldata_ptr","nodeType":"YulIdentifier","src":"2810:52:10"},"nodeType":"YulFunctionCall","src":"2810:85:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2800:6:10"}]}]},{"nodeType":"YulBlock","src":"2915:298:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2930:47:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2961:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2972:3:10","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2957:3:10"},"nodeType":"YulFunctionCall","src":"2957:19:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2944:12:10"},"nodeType":"YulFunctionCall","src":"2944:33:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2934:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"3024:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3026:77:10"},"nodeType":"YulFunctionCall","src":"3026:79:10"},"nodeType":"YulExpressionStatement","src":"3026:79:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2996:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"3004:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2993:2:10"},"nodeType":"YulFunctionCall","src":"2993:30:10"},"nodeType":"YulIf","src":"2990:117:10"},{"nodeType":"YulAssignment","src":"3121:82:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3175:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"3186:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3171:3:10"},"nodeType":"YulFunctionCall","src":"3171:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3195:7:10"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"3139:31:10"},"nodeType":"YulFunctionCall","src":"3139:64:10"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3121:6:10"},{"name":"value4","nodeType":"YulIdentifier","src":"3129:6:10"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_struct$_TokenRequest_$1638_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2298:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2309:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2321:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2329:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2337:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2345:6:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2353:6:10","type":""}],"src":"2192:1028:10"},{"body":{"nodeType":"YulBlock","src":"3309:391:10","statements":[{"body":{"nodeType":"YulBlock","src":"3355:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3357:77:10"},"nodeType":"YulFunctionCall","src":"3357:79:10"},"nodeType":"YulExpressionStatement","src":"3357:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3330:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"3339:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3326:3:10"},"nodeType":"YulFunctionCall","src":"3326:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"3351:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3322:3:10"},"nodeType":"YulFunctionCall","src":"3322:32:10"},"nodeType":"YulIf","src":"3319:119:10"},{"nodeType":"YulBlock","src":"3448:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3463:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"3477:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3467:6:10","type":""}]},{"nodeType":"YulAssignment","src":"3492:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3527:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"3538:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3523:3:10"},"nodeType":"YulFunctionCall","src":"3523:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3547:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3502:20:10"},"nodeType":"YulFunctionCall","src":"3502:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3492:6:10"}]}]},{"nodeType":"YulBlock","src":"3575:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3590:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"3604:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3594:6:10","type":""}]},{"nodeType":"YulAssignment","src":"3620:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3655:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"3666:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3651:3:10"},"nodeType":"YulFunctionCall","src":"3651:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3675:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3630:20:10"},"nodeType":"YulFunctionCall","src":"3630:53:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3620:6:10"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3271:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3282:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3294:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3302:6:10","type":""}],"src":"3226:474:10"},{"body":{"nodeType":"YulBlock","src":"3761:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3778:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3801:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3783:17:10"},"nodeType":"YulFunctionCall","src":"3783:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3771:6:10"},"nodeType":"YulFunctionCall","src":"3771:37:10"},"nodeType":"YulExpressionStatement","src":"3771:37:10"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3749:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3756:3:10","type":""}],"src":"3706:108:10"},{"body":{"nodeType":"YulBlock","src":"3865:32:10","statements":[{"nodeType":"YulAssignment","src":"3875:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"3886:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3875:7:10"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3847:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3857:7:10","type":""}],"src":"3820:77:10"},{"body":{"nodeType":"YulBlock","src":"3958:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3975:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3998:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3980:17:10"},"nodeType":"YulFunctionCall","src":"3980:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3968:6:10"},"nodeType":"YulFunctionCall","src":"3968:37:10"},"nodeType":"YulExpressionStatement","src":"3968:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3946:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3953:3:10","type":""}],"src":"3903:108:10"},{"body":{"nodeType":"YulBlock","src":"4231:572:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4241:26:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4257:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4262:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4253:3:10"},"nodeType":"YulFunctionCall","src":"4253:14:10"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"4245:4:10","type":""}]},{"nodeType":"YulBlock","src":"4277:165:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4313:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4343:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"4350:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4339:3:10"},"nodeType":"YulFunctionCall","src":"4339:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4333:5:10"},"nodeType":"YulFunctionCall","src":"4333:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4317:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4403:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4421:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4426:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4417:3:10"},"nodeType":"YulFunctionCall","src":"4417:14:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"4369:33:10"},"nodeType":"YulFunctionCall","src":"4369:63:10"},"nodeType":"YulExpressionStatement","src":"4369:63:10"}]},{"nodeType":"YulBlock","src":"4452:166:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4489:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4519:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"4526:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4515:3:10"},"nodeType":"YulFunctionCall","src":"4515:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4509:5:10"},"nodeType":"YulFunctionCall","src":"4509:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4493:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4579:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4597:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4602:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4593:3:10"},"nodeType":"YulFunctionCall","src":"4593:14:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"4545:33:10"},"nodeType":"YulFunctionCall","src":"4545:63:10"},"nodeType":"YulExpressionStatement","src":"4545:63:10"}]},{"nodeType":"YulBlock","src":"4628:168:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4667:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4697:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"4704:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4693:3:10"},"nodeType":"YulFunctionCall","src":"4693:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4687:5:10"},"nodeType":"YulFunctionCall","src":"4687:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4671:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4757:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4775:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4780:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4771:3:10"},"nodeType":"YulFunctionCall","src":"4771:14:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"4723:33:10"},"nodeType":"YulFunctionCall","src":"4723:63:10"},"nodeType":"YulExpressionStatement","src":"4723:63:10"}]}]},"name":"abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4218:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4225:3:10","type":""}],"src":"4105:698:10"},{"body":{"nodeType":"YulBlock","src":"4868:40:10","statements":[{"nodeType":"YulAssignment","src":"4879:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4895:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4889:5:10"},"nodeType":"YulFunctionCall","src":"4889:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4879:6:10"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4851:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4861:6:10","type":""}],"src":"4809:99:10"},{"body":{"nodeType":"YulBlock","src":"5010:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5027:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"5032:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5020:6:10"},"nodeType":"YulFunctionCall","src":"5020:19:10"},"nodeType":"YulExpressionStatement","src":"5020:19:10"},{"nodeType":"YulAssignment","src":"5048:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5067:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"5072:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5063:3:10"},"nodeType":"YulFunctionCall","src":"5063:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5048:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4982:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"4987:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4998:11:10","type":""}],"src":"4914:169:10"},{"body":{"nodeType":"YulBlock","src":"5151:184:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5161:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"5170:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5165:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"5230:63:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5255:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"5260:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5251:3:10"},"nodeType":"YulFunctionCall","src":"5251:11:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5274:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"5279:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5270:3:10"},"nodeType":"YulFunctionCall","src":"5270:11:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5264:5:10"},"nodeType":"YulFunctionCall","src":"5264:18:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5244:6:10"},"nodeType":"YulFunctionCall","src":"5244:39:10"},"nodeType":"YulExpressionStatement","src":"5244:39:10"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5191:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"5194:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5188:2:10"},"nodeType":"YulFunctionCall","src":"5188:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5202:19:10","statements":[{"nodeType":"YulAssignment","src":"5204:15:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5213:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"5216:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5209:3:10"},"nodeType":"YulFunctionCall","src":"5209:10:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5204:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"5184:3:10","statements":[]},"src":"5180:113:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5313:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"5318:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5309:3:10"},"nodeType":"YulFunctionCall","src":"5309:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"5327:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5302:6:10"},"nodeType":"YulFunctionCall","src":"5302:27:10"},"nodeType":"YulExpressionStatement","src":"5302:27:10"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5133:3:10","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5138:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"5143:6:10","type":""}],"src":"5089:246:10"},{"body":{"nodeType":"YulBlock","src":"5389:54:10","statements":[{"nodeType":"YulAssignment","src":"5399:38:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5417:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"5424:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5413:3:10"},"nodeType":"YulFunctionCall","src":"5413:14:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5433:2:10","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5429:3:10"},"nodeType":"YulFunctionCall","src":"5429:7:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5409:3:10"},"nodeType":"YulFunctionCall","src":"5409:28:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5399:6:10"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5372:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5382:6:10","type":""}],"src":"5341:102:10"},{"body":{"nodeType":"YulBlock","src":"5541:285:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5551:53:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5598:5:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5565:32:10"},"nodeType":"YulFunctionCall","src":"5565:39:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5555:6:10","type":""}]},{"nodeType":"YulAssignment","src":"5613:78:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5679:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"5684:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5620:58:10"},"nodeType":"YulFunctionCall","src":"5620:71:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5613:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5739:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"5746:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5735:3:10"},"nodeType":"YulFunctionCall","src":"5735:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"5753:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"5758:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5700:34:10"},"nodeType":"YulFunctionCall","src":"5700:65:10"},"nodeType":"YulExpressionStatement","src":"5700:65:10"},{"nodeType":"YulAssignment","src":"5774:46:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5785:3:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5812:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5790:21:10"},"nodeType":"YulFunctionCall","src":"5790:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5781:3:10"},"nodeType":"YulFunctionCall","src":"5781:39:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5774:3:10"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5522:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5529:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5537:3:10","type":""}],"src":"5449:377:10"},{"body":{"nodeType":"YulBlock","src":"6038:338:10","statements":[{"nodeType":"YulAssignment","src":"6048:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6060:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6071:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6056:3:10"},"nodeType":"YulFunctionCall","src":"6056:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6048:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6189:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6202:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6213:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6198:3:10"},"nodeType":"YulFunctionCall","src":"6198:17:10"}],"functionName":{"name":"abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6085:103:10"},"nodeType":"YulFunctionCall","src":"6085:131:10"},"nodeType":"YulExpressionStatement","src":"6085:131:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6237:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6248:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6233:3:10"},"nodeType":"YulFunctionCall","src":"6233:18:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6257:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"6263:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6253:3:10"},"nodeType":"YulFunctionCall","src":"6253:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6226:6:10"},"nodeType":"YulFunctionCall","src":"6226:48:10"},"nodeType":"YulExpressionStatement","src":"6226:48:10"},{"nodeType":"YulAssignment","src":"6283:86:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6355:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"6364:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6291:63:10"},"nodeType":"YulFunctionCall","src":"6291:78:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6283:4:10"}]}]},"name":"abi_encode_tuple_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__to_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6002:9:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6014:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6022:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6033:4:10","type":""}],"src":"5832:544:10"},{"body":{"nodeType":"YulBlock","src":"6500:195:10","statements":[{"nodeType":"YulAssignment","src":"6510:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6522:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6533:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:10"},"nodeType":"YulFunctionCall","src":"6518:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6510:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6557:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6568:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6553:3:10"},"nodeType":"YulFunctionCall","src":"6553:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6576:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"6582:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6572:3:10"},"nodeType":"YulFunctionCall","src":"6572:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6546:6:10"},"nodeType":"YulFunctionCall","src":"6546:47:10"},"nodeType":"YulExpressionStatement","src":"6546:47:10"},{"nodeType":"YulAssignment","src":"6602:86:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6674:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"6683:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6610:63:10"},"nodeType":"YulFunctionCall","src":"6610:78:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6602:4:10"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6472:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6484:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6495:4:10","type":""}],"src":"6382:313:10"},{"body":{"nodeType":"YulBlock","src":"6766:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6783:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6806:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6788:17:10"},"nodeType":"YulFunctionCall","src":"6788:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6776:6:10"},"nodeType":"YulFunctionCall","src":"6776:37:10"},"nodeType":"YulExpressionStatement","src":"6776:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6754:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6761:3:10","type":""}],"src":"6701:118:10"},{"body":{"nodeType":"YulBlock","src":"6923:124:10","statements":[{"nodeType":"YulAssignment","src":"6933:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6945:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6956:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6941:3:10"},"nodeType":"YulFunctionCall","src":"6941:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6933:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7013:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7026:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7037:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7022:3:10"},"nodeType":"YulFunctionCall","src":"7022:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6969:43:10"},"nodeType":"YulFunctionCall","src":"6969:71:10"},"nodeType":"YulExpressionStatement","src":"6969:71:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6895:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6907:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6918:4:10","type":""}],"src":"6825:222:10"},{"body":{"nodeType":"YulBlock","src":"7096:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"7153:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7162:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7165:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7155:6:10"},"nodeType":"YulFunctionCall","src":"7155:12:10"},"nodeType":"YulExpressionStatement","src":"7155:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7119:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7144:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7126:17:10"},"nodeType":"YulFunctionCall","src":"7126:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7116:2:10"},"nodeType":"YulFunctionCall","src":"7116:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7109:6:10"},"nodeType":"YulFunctionCall","src":"7109:43:10"},"nodeType":"YulIf","src":"7106:63:10"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7089:5:10","type":""}],"src":"7053:122:10"},{"body":{"nodeType":"YulBlock","src":"7244:80:10","statements":[{"nodeType":"YulAssignment","src":"7254:22:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7269:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7263:5:10"},"nodeType":"YulFunctionCall","src":"7263:13:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7254:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7312:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"7285:26:10"},"nodeType":"YulFunctionCall","src":"7285:33:10"},"nodeType":"YulExpressionStatement","src":"7285:33:10"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7222:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"7230:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7238:5:10","type":""}],"src":"7181:143:10"},{"body":{"nodeType":"YulBlock","src":"7407:274:10","statements":[{"body":{"nodeType":"YulBlock","src":"7453:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7455:77:10"},"nodeType":"YulFunctionCall","src":"7455:79:10"},"nodeType":"YulExpressionStatement","src":"7455:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7428:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"7437:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7424:3:10"},"nodeType":"YulFunctionCall","src":"7424:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"7449:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7420:3:10"},"nodeType":"YulFunctionCall","src":"7420:32:10"},"nodeType":"YulIf","src":"7417:119:10"},{"nodeType":"YulBlock","src":"7546:128:10","statements":[{"nodeType":"YulVariableDeclaration","src":"7561:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"7575:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7565:6:10","type":""}]},{"nodeType":"YulAssignment","src":"7590:74:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7636:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"7647:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7632:3:10"},"nodeType":"YulFunctionCall","src":"7632:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7656:7:10"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"7600:31:10"},"nodeType":"YulFunctionCall","src":"7600:64:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7590:6:10"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7377:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7388:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7400:6:10","type":""}],"src":"7330:351:10"},{"body":{"nodeType":"YulBlock","src":"7793:130:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7815:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"7823:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7811:3:10"},"nodeType":"YulFunctionCall","src":"7811:14:10"},{"hexValue":"4f6e6c792073616665277320776974682061207468726573686f6c64206f6620","kind":"string","nodeType":"YulLiteral","src":"7827:34:10","type":"","value":"Only safe's with a threshold of "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7804:6:10"},"nodeType":"YulFunctionCall","src":"7804:58:10"},"nodeType":"YulExpressionStatement","src":"7804:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7883:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"7891:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7879:3:10"},"nodeType":"YulFunctionCall","src":"7879:15:10"},{"hexValue":"6f6e652061726520737570706f72746564","kind":"string","nodeType":"YulLiteral","src":"7896:19:10","type":"","value":"one are supported"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7872:6:10"},"nodeType":"YulFunctionCall","src":"7872:44:10"},"nodeType":"YulExpressionStatement","src":"7872:44:10"}]},"name":"store_literal_in_memory_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7785:6:10","type":""}],"src":"7687:236:10"},{"body":{"nodeType":"YulBlock","src":"8075:220:10","statements":[{"nodeType":"YulAssignment","src":"8085:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8151:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"8156:2:10","type":"","value":"49"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8092:58:10"},"nodeType":"YulFunctionCall","src":"8092:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8085:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8257:3:10"}],"functionName":{"name":"store_literal_in_memory_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05","nodeType":"YulIdentifier","src":"8168:88:10"},"nodeType":"YulFunctionCall","src":"8168:93:10"},"nodeType":"YulExpressionStatement","src":"8168:93:10"},{"nodeType":"YulAssignment","src":"8270:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8281:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"8286:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8277:3:10"},"nodeType":"YulFunctionCall","src":"8277:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8270:3:10"}]}]},"name":"abi_encode_t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8063:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8071:3:10","type":""}],"src":"7929:366:10"},{"body":{"nodeType":"YulBlock","src":"8472:248:10","statements":[{"nodeType":"YulAssignment","src":"8482:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8494:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8505:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8490:3:10"},"nodeType":"YulFunctionCall","src":"8490:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8482:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8529:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8540:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8525:3:10"},"nodeType":"YulFunctionCall","src":"8525:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8548:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"8554:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8544:3:10"},"nodeType":"YulFunctionCall","src":"8544:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8518:6:10"},"nodeType":"YulFunctionCall","src":"8518:47:10"},"nodeType":"YulExpressionStatement","src":"8518:47:10"},{"nodeType":"YulAssignment","src":"8574:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8708:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8582:124:10"},"nodeType":"YulFunctionCall","src":"8582:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8574:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8452:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8467:4:10","type":""}],"src":"8301:419:10"},{"body":{"nodeType":"YulBlock","src":"8792:263:10","statements":[{"body":{"nodeType":"YulBlock","src":"8838:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8840:77:10"},"nodeType":"YulFunctionCall","src":"8840:79:10"},"nodeType":"YulExpressionStatement","src":"8840:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8813:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"8822:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8809:3:10"},"nodeType":"YulFunctionCall","src":"8809:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"8834:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8805:3:10"},"nodeType":"YulFunctionCall","src":"8805:32:10"},"nodeType":"YulIf","src":"8802:119:10"},{"nodeType":"YulBlock","src":"8931:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"8946:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"8960:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8950:6:10","type":""}]},{"nodeType":"YulAssignment","src":"8975:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9010:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"9021:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9006:3:10"},"nodeType":"YulFunctionCall","src":"9006:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9030:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8985:20:10"},"nodeType":"YulFunctionCall","src":"8985:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8975:6:10"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8762:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8773:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8785:6:10","type":""}],"src":"8726:329:10"},{"body":{"nodeType":"YulBlock","src":"9126:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9143:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9166:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9148:17:10"},"nodeType":"YulFunctionCall","src":"9148:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9136:6:10"},"nodeType":"YulFunctionCall","src":"9136:37:10"},"nodeType":"YulExpressionStatement","src":"9136:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9114:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9121:3:10","type":""}],"src":"9061:118:10"},{"body":{"nodeType":"YulBlock","src":"9283:124:10","statements":[{"nodeType":"YulAssignment","src":"9293:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9305:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9316:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:10"},"nodeType":"YulFunctionCall","src":"9301:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9293:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9373:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9386:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9397:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9382:3:10"},"nodeType":"YulFunctionCall","src":"9382:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9329:43:10"},"nodeType":"YulFunctionCall","src":"9329:71:10"},"nodeType":"YulExpressionStatement","src":"9329:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9255:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9267:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9278:4:10","type":""}],"src":"9185:222:10"},{"body":{"nodeType":"YulBlock","src":"9455:48:10","statements":[{"nodeType":"YulAssignment","src":"9465:32:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9490:5:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9483:6:10"},"nodeType":"YulFunctionCall","src":"9483:13:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9476:6:10"},"nodeType":"YulFunctionCall","src":"9476:21:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9465:7:10"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9437:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9447:7:10","type":""}],"src":"9413:90:10"},{"body":{"nodeType":"YulBlock","src":"9549:76:10","statements":[{"body":{"nodeType":"YulBlock","src":"9603:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9612:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9615:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9605:6:10"},"nodeType":"YulFunctionCall","src":"9605:12:10"},"nodeType":"YulExpressionStatement","src":"9605:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9572:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9594:5:10"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9579:14:10"},"nodeType":"YulFunctionCall","src":"9579:21:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9569:2:10"},"nodeType":"YulFunctionCall","src":"9569:32:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9562:6:10"},"nodeType":"YulFunctionCall","src":"9562:40:10"},"nodeType":"YulIf","src":"9559:60:10"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9542:5:10","type":""}],"src":"9509:116:10"},{"body":{"nodeType":"YulBlock","src":"9691:77:10","statements":[{"nodeType":"YulAssignment","src":"9701:22:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9716:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9710:5:10"},"nodeType":"YulFunctionCall","src":"9710:13:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9701:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9756:5:10"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"9732:23:10"},"nodeType":"YulFunctionCall","src":"9732:30:10"},"nodeType":"YulExpressionStatement","src":"9732:30:10"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9669:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"9677:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9685:5:10","type":""}],"src":"9631:137:10"},{"body":{"nodeType":"YulBlock","src":"9848:271:10","statements":[{"body":{"nodeType":"YulBlock","src":"9894:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9896:77:10"},"nodeType":"YulFunctionCall","src":"9896:79:10"},"nodeType":"YulExpressionStatement","src":"9896:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9869:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"9878:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9865:3:10"},"nodeType":"YulFunctionCall","src":"9865:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"9890:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9861:3:10"},"nodeType":"YulFunctionCall","src":"9861:32:10"},"nodeType":"YulIf","src":"9858:119:10"},{"nodeType":"YulBlock","src":"9987:125:10","statements":[{"nodeType":"YulVariableDeclaration","src":"10002:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"10016:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10006:6:10","type":""}]},{"nodeType":"YulAssignment","src":"10031:71:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10074:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"10085:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10070:3:10"},"nodeType":"YulFunctionCall","src":"10070:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10094:7:10"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"10041:28:10"},"nodeType":"YulFunctionCall","src":"10041:61:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10031:6:10"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9818:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9829:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9841:6:10","type":""}],"src":"9774:345:10"},{"body":{"nodeType":"YulBlock","src":"10231:69:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10253:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"10261:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10249:3:10"},"nodeType":"YulFunctionCall","src":"10249:14:10"},{"hexValue":"4f776e6572206973206e6f7420612073616665206f776e6572","kind":"string","nodeType":"YulLiteral","src":"10265:27:10","type":"","value":"Owner is not a safe owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10242:6:10"},"nodeType":"YulFunctionCall","src":"10242:51:10"},"nodeType":"YulExpressionStatement","src":"10242:51:10"}]},"name":"store_literal_in_memory_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10223:6:10","type":""}],"src":"10125:175:10"},{"body":{"nodeType":"YulBlock","src":"10452:220:10","statements":[{"nodeType":"YulAssignment","src":"10462:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10528:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"10533:2:10","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10469:58:10"},"nodeType":"YulFunctionCall","src":"10469:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10462:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10634:3:10"}],"functionName":{"name":"store_literal_in_memory_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b","nodeType":"YulIdentifier","src":"10545:88:10"},"nodeType":"YulFunctionCall","src":"10545:93:10"},"nodeType":"YulExpressionStatement","src":"10545:93:10"},{"nodeType":"YulAssignment","src":"10647:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10658:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"10663:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10654:3:10"},"nodeType":"YulFunctionCall","src":"10654:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10647:3:10"}]}]},"name":"abi_encode_t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10440:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10448:3:10","type":""}],"src":"10306:366:10"},{"body":{"nodeType":"YulBlock","src":"10849:248:10","statements":[{"nodeType":"YulAssignment","src":"10859:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10871:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10882:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10867:3:10"},"nodeType":"YulFunctionCall","src":"10867:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10859:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10906:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10917:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10902:3:10"},"nodeType":"YulFunctionCall","src":"10902:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10925:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"10931:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10921:3:10"},"nodeType":"YulFunctionCall","src":"10921:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10895:6:10"},"nodeType":"YulFunctionCall","src":"10895:47:10"},"nodeType":"YulExpressionStatement","src":"10895:47:10"},{"nodeType":"YulAssignment","src":"10951:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11085:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10959:124:10"},"nodeType":"YulFunctionCall","src":"10959:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10951:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10829:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10844:4:10","type":""}],"src":"10678:419:10"},{"body":{"nodeType":"YulBlock","src":"11156:32:10","statements":[{"nodeType":"YulAssignment","src":"11166:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"11177:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11166:7:10"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11138:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11148:7:10","type":""}],"src":"11103:85:10"},{"body":{"nodeType":"YulBlock","src":"11237:43:10","statements":[{"nodeType":"YulAssignment","src":"11247:27:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11262:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"11269:4:10","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11258:3:10"},"nodeType":"YulFunctionCall","src":"11258:16:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11247:7:10"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11219:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11229:7:10","type":""}],"src":"11194:86:10"},{"body":{"nodeType":"YulBlock","src":"11318:28:10","statements":[{"nodeType":"YulAssignment","src":"11328:12:10","value":{"name":"value","nodeType":"YulIdentifier","src":"11335:5:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11328:3:10"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11304:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11314:3:10","type":""}],"src":"11286:60:10"},{"body":{"nodeType":"YulBlock","src":"11418:88:10","statements":[{"nodeType":"YulAssignment","src":"11428:72:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11492:5:10"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"11466:25:10"},"nodeType":"YulFunctionCall","src":"11466:32:10"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"11457:8:10"},"nodeType":"YulFunctionCall","src":"11457:42:10"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"11441:15:10"},"nodeType":"YulFunctionCall","src":"11441:59:10"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"11428:9:10"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11398:5:10","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"11408:9:10","type":""}],"src":"11352:154:10"},{"body":{"nodeType":"YulBlock","src":"11583:72:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11600:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11642:5:10"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"11605:36:10"},"nodeType":"YulFunctionCall","src":"11605:43:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11593:6:10"},"nodeType":"YulFunctionCall","src":"11593:56:10"},"nodeType":"YulExpressionStatement","src":"11593:56:10"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11571:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11578:3:10","type":""}],"src":"11512:143:10"},{"body":{"nodeType":"YulBlock","src":"11821:294:10","statements":[{"nodeType":"YulAssignment","src":"11831:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11843:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11854:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11839:3:10"},"nodeType":"YulFunctionCall","src":"11839:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11831:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11911:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11924:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11935:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11920:3:10"},"nodeType":"YulFunctionCall","src":"11920:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11867:43:10"},"nodeType":"YulFunctionCall","src":"11867:71:10"},"nodeType":"YulExpressionStatement","src":"11867:71:10"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11992:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12005:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12016:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12001:3:10"},"nodeType":"YulFunctionCall","src":"12001:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11948:43:10"},"nodeType":"YulFunctionCall","src":"11948:72:10"},"nodeType":"YulExpressionStatement","src":"11948:72:10"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12080:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12093:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12089:3:10"},"nodeType":"YulFunctionCall","src":"12089:18:10"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"12030:49:10"},"nodeType":"YulFunctionCall","src":"12030:78:10"},"nodeType":"YulExpressionStatement","src":"12030:78:10"}]},"name":"abi_encode_tuple_t_address_t_address_t_rational_1_by_1__to_t_address_t_address_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11777:9:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11789:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11797:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11805:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11816:4:10","type":""}],"src":"11661:454:10"},{"body":{"nodeType":"YulBlock","src":"12174:32:10","statements":[{"nodeType":"YulAssignment","src":"12184:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"12195:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12184:7:10"}]}]},"name":"cleanup_t_rational_0_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12156:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12166:7:10","type":""}],"src":"12121:85:10"},{"body":{"nodeType":"YulBlock","src":"12280:90:10","statements":[{"nodeType":"YulAssignment","src":"12290:74:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12356:5:10"}],"functionName":{"name":"cleanup_t_rational_0_by_1","nodeType":"YulIdentifier","src":"12330:25:10"},"nodeType":"YulFunctionCall","src":"12330:32:10"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"12321:8:10"},"nodeType":"YulFunctionCall","src":"12321:42:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12303:17:10"},"nodeType":"YulFunctionCall","src":"12303:61:10"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12290:9:10"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12260:5:10","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12270:9:10","type":""}],"src":"12212:158:10"},{"body":{"nodeType":"YulBlock","src":"12449:74:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12466:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12510:5:10"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"12471:38:10"},"nodeType":"YulFunctionCall","src":"12471:45:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12459:6:10"},"nodeType":"YulFunctionCall","src":"12459:58:10"},"nodeType":"YulExpressionStatement","src":"12459:58:10"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12437:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12444:3:10","type":""}],"src":"12376:147:10"},{"body":{"nodeType":"YulBlock","src":"12587:40:10","statements":[{"nodeType":"YulAssignment","src":"12598:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12614:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12608:5:10"},"nodeType":"YulFunctionCall","src":"12608:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12598:6:10"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12570:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12580:6:10","type":""}],"src":"12529:98:10"},{"body":{"nodeType":"YulBlock","src":"12728:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12745:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"12750:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12738:6:10"},"nodeType":"YulFunctionCall","src":"12738:19:10"},"nodeType":"YulExpressionStatement","src":"12738:19:10"},{"nodeType":"YulAssignment","src":"12766:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12785:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"12790:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12781:3:10"},"nodeType":"YulFunctionCall","src":"12781:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12766:11:10"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12700:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"12705:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12716:11:10","type":""}],"src":"12633:168:10"},{"body":{"nodeType":"YulBlock","src":"12897:283:10","statements":[{"nodeType":"YulVariableDeclaration","src":"12907:52:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12953:5:10"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12921:31:10"},"nodeType":"YulFunctionCall","src":"12921:38:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12911:6:10","type":""}]},{"nodeType":"YulAssignment","src":"12968:77:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13033:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"13038:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12975:57:10"},"nodeType":"YulFunctionCall","src":"12975:70:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12968:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13093:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"13100:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13089:3:10"},"nodeType":"YulFunctionCall","src":"13089:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"13107:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"13112:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13054:34:10"},"nodeType":"YulFunctionCall","src":"13054:65:10"},"nodeType":"YulExpressionStatement","src":"13054:65:10"},{"nodeType":"YulAssignment","src":"13128:46:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13139:3:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13166:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13144:21:10"},"nodeType":"YulFunctionCall","src":"13144:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13135:3:10"},"nodeType":"YulFunctionCall","src":"13135:39:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13128:3:10"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12878:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12885:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12893:3:10","type":""}],"src":"12807:373:10"},{"body":{"nodeType":"YulBlock","src":"13214:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13231:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13234:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13224:6:10"},"nodeType":"YulFunctionCall","src":"13224:88:10"},"nodeType":"YulExpressionStatement","src":"13224:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13328:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13331:4:10","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13321:6:10"},"nodeType":"YulFunctionCall","src":"13321:15:10"},"nodeType":"YulExpressionStatement","src":"13321:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13352:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13355:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13345:6:10"},"nodeType":"YulFunctionCall","src":"13345:15:10"},"nodeType":"YulExpressionStatement","src":"13345:15:10"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"13186:180:10"},{"body":{"nodeType":"YulBlock","src":"13429:62:10","statements":[{"body":{"nodeType":"YulBlock","src":"13463:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"13465:16:10"},"nodeType":"YulFunctionCall","src":"13465:18:10"},"nodeType":"YulExpressionStatement","src":"13465:18:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13452:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"13459:1:10","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13449:2:10"},"nodeType":"YulFunctionCall","src":"13449:12:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13442:6:10"},"nodeType":"YulFunctionCall","src":"13442:20:10"},"nodeType":"YulIf","src":"13439:46:10"}]},"name":"validator_assert_t_enum$_Operation_$2032","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13422:5:10","type":""}],"src":"13372:119:10"},{"body":{"nodeType":"YulBlock","src":"13556:80:10","statements":[{"nodeType":"YulAssignment","src":"13566:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"13577:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13566:7:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13624:5:10"}],"functionName":{"name":"validator_assert_t_enum$_Operation_$2032","nodeType":"YulIdentifier","src":"13583:40:10"},"nodeType":"YulFunctionCall","src":"13583:47:10"},"nodeType":"YulExpressionStatement","src":"13583:47:10"}]},"name":"cleanup_t_enum$_Operation_$2032","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13538:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13548:7:10","type":""}],"src":"13497:139:10"},{"body":{"nodeType":"YulBlock","src":"13714:67:10","statements":[{"nodeType":"YulAssignment","src":"13724:51:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13769:5:10"}],"functionName":{"name":"cleanup_t_enum$_Operation_$2032","nodeType":"YulIdentifier","src":"13737:31:10"},"nodeType":"YulFunctionCall","src":"13737:38:10"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"13724:9:10"}]}]},"name":"convert_t_enum$_Operation_$2032_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13694:5:10","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"13704:9:10","type":""}],"src":"13642:139:10"},{"body":{"nodeType":"YulBlock","src":"13864:78:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13881:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13929:5:10"}],"functionName":{"name":"convert_t_enum$_Operation_$2032_to_t_uint8","nodeType":"YulIdentifier","src":"13886:42:10"},"nodeType":"YulFunctionCall","src":"13886:49:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13874:6:10"},"nodeType":"YulFunctionCall","src":"13874:62:10"},"nodeType":"YulExpressionStatement","src":"13874:62:10"}]},"name":"abi_encode_t_enum$_Operation_$2032_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13852:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13859:3:10","type":""}],"src":"13787:155:10"},{"body":{"nodeType":"YulBlock","src":"14168:460:10","statements":[{"nodeType":"YulAssignment","src":"14178:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14190:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14201:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14186:3:10"},"nodeType":"YulFunctionCall","src":"14186:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14178:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14259:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14272:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14283:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14268:3:10"},"nodeType":"YulFunctionCall","src":"14268:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14215:43:10"},"nodeType":"YulFunctionCall","src":"14215:71:10"},"nodeType":"YulExpressionStatement","src":"14215:71:10"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14348:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14361:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14372:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14357:3:10"},"nodeType":"YulFunctionCall","src":"14357:18:10"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14296:51:10"},"nodeType":"YulFunctionCall","src":"14296:80:10"},"nodeType":"YulExpressionStatement","src":"14296:80:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14397:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14408:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14393:3:10"},"nodeType":"YulFunctionCall","src":"14393:18:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14417:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"14423:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14413:3:10"},"nodeType":"YulFunctionCall","src":"14413:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14386:6:10"},"nodeType":"YulFunctionCall","src":"14386:48:10"},"nodeType":"YulExpressionStatement","src":"14386:48:10"},{"nodeType":"YulAssignment","src":"14443:84:10","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14513:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"14522:4:10"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14451:61:10"},"nodeType":"YulFunctionCall","src":"14451:76:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14443:4:10"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14593:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14606:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14617:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14602:3:10"},"nodeType":"YulFunctionCall","src":"14602:18:10"}],"functionName":{"name":"abi_encode_t_enum$_Operation_$2032_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"14537:55:10"},"nodeType":"YulFunctionCall","src":"14537:84:10"},"nodeType":"YulExpressionStatement","src":"14537:84:10"}]},"name":"abi_encode_tuple_t_address_t_rational_0_by_1_t_bytes_memory_ptr_t_enum$_Operation_$2032__to_t_address_t_uint256_t_bytes_memory_ptr_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14116:9:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14128:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14136:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14144:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14152:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14163:4:10","type":""}],"src":"13948:680:10"},{"body":{"nodeType":"YulBlock","src":"14662:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14679:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14682:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14672:6:10"},"nodeType":"YulFunctionCall","src":"14672:88:10"},"nodeType":"YulExpressionStatement","src":"14672:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14776:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14779:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14769:6:10"},"nodeType":"YulFunctionCall","src":"14769:15:10"},"nodeType":"YulExpressionStatement","src":"14769:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14800:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14803:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14793:6:10"},"nodeType":"YulFunctionCall","src":"14793:15:10"},"nodeType":"YulExpressionStatement","src":"14793:15:10"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14634:180:10"},{"body":{"nodeType":"YulBlock","src":"14865:149:10","statements":[{"nodeType":"YulAssignment","src":"14875:25:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14898:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14880:17:10"},"nodeType":"YulFunctionCall","src":"14880:20:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14875:1:10"}]},{"nodeType":"YulAssignment","src":"14909:25:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14932:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14914:17:10"},"nodeType":"YulFunctionCall","src":"14914:20:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14909:1:10"}]},{"nodeType":"YulAssignment","src":"14943:17:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14955:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"14958:1:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14951:3:10"},"nodeType":"YulFunctionCall","src":"14951:9:10"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"14943:4:10"}]},{"body":{"nodeType":"YulBlock","src":"14985:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14987:16:10"},"nodeType":"YulFunctionCall","src":"14987:18:10"},"nodeType":"YulExpressionStatement","src":"14987:18:10"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"14976:4:10"},{"name":"x","nodeType":"YulIdentifier","src":"14982:1:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14973:2:10"},"nodeType":"YulFunctionCall","src":"14973:11:10"},"nodeType":"YulIf","src":"14970:37:10"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14851:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"14854:1:10","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"14860:4:10","type":""}],"src":"14820:194:10"},{"body":{"nodeType":"YulBlock","src":"15048:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15065:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15068:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15058:6:10"},"nodeType":"YulFunctionCall","src":"15058:88:10"},"nodeType":"YulExpressionStatement","src":"15058:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15162:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15165:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15155:6:10"},"nodeType":"YulFunctionCall","src":"15155:15:10"},"nodeType":"YulExpressionStatement","src":"15155:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15186:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15189:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15179:6:10"},"nodeType":"YulFunctionCall","src":"15179:15:10"},"nodeType":"YulExpressionStatement","src":"15179:15:10"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"15020:180:10"},{"body":{"nodeType":"YulBlock","src":"15257:269:10","statements":[{"nodeType":"YulAssignment","src":"15267:22:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15281:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"15287:1:10","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15277:3:10"},"nodeType":"YulFunctionCall","src":"15277:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15267:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"15298:38:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15328:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"15334:1:10","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15324:3:10"},"nodeType":"YulFunctionCall","src":"15324:12:10"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"15302:18:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"15375:51:10","statements":[{"nodeType":"YulAssignment","src":"15389:27:10","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15403:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"15411:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15399:3:10"},"nodeType":"YulFunctionCall","src":"15399:17:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15389:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15355:18:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15348:6:10"},"nodeType":"YulFunctionCall","src":"15348:26:10"},"nodeType":"YulIf","src":"15345:81:10"},{"body":{"nodeType":"YulBlock","src":"15478:42:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"15492:16:10"},"nodeType":"YulFunctionCall","src":"15492:18:10"},"nodeType":"YulExpressionStatement","src":"15492:18:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15442:18:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15465:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"15473:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15462:2:10"},"nodeType":"YulFunctionCall","src":"15462:14:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15439:2:10"},"nodeType":"YulFunctionCall","src":"15439:38:10"},"nodeType":"YulIf","src":"15436:84:10"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15241:4:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15250:6:10","type":""}],"src":"15206:320:10"},{"body":{"nodeType":"YulBlock","src":"15638:61:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15660:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"15668:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15656:3:10"},"nodeType":"YulFunctionCall","src":"15656:14:10"},{"hexValue":"696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"15672:19:10","type":"","value":"invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15649:6:10"},"nodeType":"YulFunctionCall","src":"15649:43:10"},"nodeType":"YulExpressionStatement","src":"15649:43:10"}]},"name":"store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15630:6:10","type":""}],"src":"15532:167:10"},{"body":{"nodeType":"YulBlock","src":"15851:220:10","statements":[{"nodeType":"YulAssignment","src":"15861:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15927:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15932:2:10","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15868:58:10"},"nodeType":"YulFunctionCall","src":"15868:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15861:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16033:3:10"}],"functionName":{"name":"store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a","nodeType":"YulIdentifier","src":"15944:88:10"},"nodeType":"YulFunctionCall","src":"15944:93:10"},"nodeType":"YulExpressionStatement","src":"15944:93:10"},{"nodeType":"YulAssignment","src":"16046:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16057:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"16062:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16053:3:10"},"nodeType":"YulFunctionCall","src":"16053:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16046:3:10"}]}]},"name":"abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15839:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15847:3:10","type":""}],"src":"15705:366:10"},{"body":{"nodeType":"YulBlock","src":"16248:248:10","statements":[{"nodeType":"YulAssignment","src":"16258:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16270:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16281:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16266:3:10"},"nodeType":"YulFunctionCall","src":"16266:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16258:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16305:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16316:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16301:3:10"},"nodeType":"YulFunctionCall","src":"16301:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16324:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"16330:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16320:3:10"},"nodeType":"YulFunctionCall","src":"16320:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16294:6:10"},"nodeType":"YulFunctionCall","src":"16294:47:10"},"nodeType":"YulExpressionStatement","src":"16294:47:10"},{"nodeType":"YulAssignment","src":"16350:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16484:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16358:124:10"},"nodeType":"YulFunctionCall","src":"16358:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16350:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16228:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16243:4:10","type":""}],"src":"16077:419:10"},{"body":{"nodeType":"YulBlock","src":"16608:62:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16630:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"16638:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16626:3:10"},"nodeType":"YulFunctionCall","src":"16626:14:10"},{"hexValue":"5265717565737420697320746f6f206f6c64","kind":"string","nodeType":"YulLiteral","src":"16642:20:10","type":"","value":"Request is too old"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16619:6:10"},"nodeType":"YulFunctionCall","src":"16619:44:10"},"nodeType":"YulExpressionStatement","src":"16619:44:10"}]},"name":"store_literal_in_memory_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16600:6:10","type":""}],"src":"16502:168:10"},{"body":{"nodeType":"YulBlock","src":"16822:220:10","statements":[{"nodeType":"YulAssignment","src":"16832:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16898:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"16903:2:10","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16839:58:10"},"nodeType":"YulFunctionCall","src":"16839:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16832:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17004:3:10"}],"functionName":{"name":"store_literal_in_memory_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5","nodeType":"YulIdentifier","src":"16915:88:10"},"nodeType":"YulFunctionCall","src":"16915:93:10"},"nodeType":"YulExpressionStatement","src":"16915:93:10"},{"nodeType":"YulAssignment","src":"17017:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17028:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"17033:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17024:3:10"},"nodeType":"YulFunctionCall","src":"17024:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17017:3:10"}]}]},"name":"abi_encode_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16810:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16818:3:10","type":""}],"src":"16676:366:10"},{"body":{"nodeType":"YulBlock","src":"17219:248:10","statements":[{"nodeType":"YulAssignment","src":"17229:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17241:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"17252:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17237:3:10"},"nodeType":"YulFunctionCall","src":"17237:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17229:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17276:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"17287:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17272:3:10"},"nodeType":"YulFunctionCall","src":"17272:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17295:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"17301:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17291:3:10"},"nodeType":"YulFunctionCall","src":"17291:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17265:6:10"},"nodeType":"YulFunctionCall","src":"17265:47:10"},"nodeType":"YulExpressionStatement","src":"17265:47:10"},{"nodeType":"YulAssignment","src":"17321:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17455:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17329:124:10"},"nodeType":"YulFunctionCall","src":"17329:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17321:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17199:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17214:4:10","type":""}],"src":"17048:419:10"},{"body":{"nodeType":"YulBlock","src":"17587:34:10","statements":[{"nodeType":"YulAssignment","src":"17597:18:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"17612:3:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17597:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17559:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"17564:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17575:11:10","type":""}],"src":"17473:148:10"},{"body":{"nodeType":"YulBlock","src":"17681:87:10","statements":[{"nodeType":"YulAssignment","src":"17691:11:10","value":{"name":"ptr","nodeType":"YulIdentifier","src":"17699:3:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17691:4:10"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17719:1:10","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"17722:3:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17712:6:10"},"nodeType":"YulFunctionCall","src":"17712:14:10"},"nodeType":"YulExpressionStatement","src":"17712:14:10"},{"nodeType":"YulAssignment","src":"17735:26:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17753:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17756:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17743:9:10"},"nodeType":"YulFunctionCall","src":"17743:18:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17735:4:10"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"17668:3:10","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"17676:4:10","type":""}],"src":"17627:141:10"},{"body":{"nodeType":"YulBlock","src":"17905:767:10","statements":[{"nodeType":"YulVariableDeclaration","src":"17915:29:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17938:5:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"17932:5:10"},"nodeType":"YulFunctionCall","src":"17932:12:10"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"17919:9:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17953:50:10","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"17993:9:10"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"17967:25:10"},"nodeType":"YulFunctionCall","src":"17967:36:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17957:6:10","type":""}]},{"nodeType":"YulAssignment","src":"18012:96:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18096:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"18101:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18019:76:10"},"nodeType":"YulFunctionCall","src":"18019:89:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18012:3:10"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"18157:159:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18210:3:10"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"18219:9:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18234:4:10","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18230:3:10"},"nodeType":"YulFunctionCall","src":"18230:9:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18215:3:10"},"nodeType":"YulFunctionCall","src":"18215:25:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18203:6:10"},"nodeType":"YulFunctionCall","src":"18203:38:10"},"nodeType":"YulExpressionStatement","src":"18203:38:10"},{"nodeType":"YulAssignment","src":"18254:52:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18265:3:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18274:6:10"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18296:6:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18289:6:10"},"nodeType":"YulFunctionCall","src":"18289:14:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18282:6:10"},"nodeType":"YulFunctionCall","src":"18282:22:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18270:3:10"},"nodeType":"YulFunctionCall","src":"18270:35:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18261:3:10"},"nodeType":"YulFunctionCall","src":"18261:45:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18254:3:10"}]}]},"nodeType":"YulCase","src":"18150:166:10","value":{"kind":"number","nodeType":"YulLiteral","src":"18155:1:10","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"18332:334:10","statements":[{"nodeType":"YulVariableDeclaration","src":"18377:53:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18424:5:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"18392:31:10"},"nodeType":"YulFunctionCall","src":"18392:38:10"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"18381:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18443:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"18452:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18447:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"18510:110:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18539:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"18544:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18535:3:10"},"nodeType":"YulFunctionCall","src":"18535:11:10"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"18554:7:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18548:5:10"},"nodeType":"YulFunctionCall","src":"18548:14:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18528:6:10"},"nodeType":"YulFunctionCall","src":"18528:35:10"},"nodeType":"YulExpressionStatement","src":"18528:35:10"},{"nodeType":"YulAssignment","src":"18580:26:10","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"18595:7:10"},{"kind":"number","nodeType":"YulLiteral","src":"18604:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18591:3:10"},"nodeType":"YulFunctionCall","src":"18591:15:10"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"18580:7:10"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18477:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"18480:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18474:2:10"},"nodeType":"YulFunctionCall","src":"18474:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18488:21:10","statements":[{"nodeType":"YulAssignment","src":"18490:17:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18499:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"18502:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18495:3:10"},"nodeType":"YulFunctionCall","src":"18495:12:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18490:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"18470:3:10","statements":[]},"src":"18466:154:10"},{"nodeType":"YulAssignment","src":"18633:23:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18644:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"18649:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18640:3:10"},"nodeType":"YulFunctionCall","src":"18640:16:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18633:3:10"}]}]},"nodeType":"YulCase","src":"18325:341:10","value":{"kind":"number","nodeType":"YulLiteral","src":"18330:1:10","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"18128:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18139:1:10","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18124:3:10"},"nodeType":"YulFunctionCall","src":"18124:17:10"},"nodeType":"YulSwitch","src":"18117:549:10"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17886:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17893:3:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"17901:3:10","type":""}],"src":"17798:874:10"},{"body":{"nodeType":"YulBlock","src":"18784:108:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18806:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"18814:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18802:3:10"},"nodeType":"YulFunctionCall","src":"18802:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"18818:66:10","type":"","value":"0x0a0a4d653a200000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18795:6:10"},"nodeType":"YulFunctionCall","src":"18795:90:10"},"nodeType":"YulExpressionStatement","src":"18795:90:10"}]},"name":"store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18776:6:10","type":""}],"src":"18678:214:10"},{"body":{"nodeType":"YulBlock","src":"19062:236:10","statements":[{"nodeType":"YulAssignment","src":"19072:91:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19156:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"19161:1:10","type":"","value":"6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19079:76:10"},"nodeType":"YulFunctionCall","src":"19079:84:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19072:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19261:3:10"}],"functionName":{"name":"store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262","nodeType":"YulIdentifier","src":"19172:88:10"},"nodeType":"YulFunctionCall","src":"19172:93:10"},"nodeType":"YulExpressionStatement","src":"19172:93:10"},{"nodeType":"YulAssignment","src":"19274:18:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19285:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"19290:1:10","type":"","value":"6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19281:3:10"},"nodeType":"YulFunctionCall","src":"19281:11:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19274:3:10"}]}]},"name":"abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19050:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19058:3:10","type":""}],"src":"18898:400:10"},{"body":{"nodeType":"YulBlock","src":"19414:280:10","statements":[{"nodeType":"YulVariableDeclaration","src":"19424:53:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19471:5:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19438:32:10"},"nodeType":"YulFunctionCall","src":"19438:39:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"19428:6:10","type":""}]},{"nodeType":"YulAssignment","src":"19486:96:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19570:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"19575:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19493:76:10"},"nodeType":"YulFunctionCall","src":"19493:89:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19486:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19630:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"19637:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19626:3:10"},"nodeType":"YulFunctionCall","src":"19626:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"19644:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"19649:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"19591:34:10"},"nodeType":"YulFunctionCall","src":"19591:65:10"},"nodeType":"YulExpressionStatement","src":"19591:65:10"},{"nodeType":"YulAssignment","src":"19665:23:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19676:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"19681:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19672:3:10"},"nodeType":"YulFunctionCall","src":"19672:16:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19665:3:10"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19395:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19402:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19410:3:10","type":""}],"src":"19304:390:10"},{"body":{"nodeType":"YulBlock","src":"19806:108:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19828:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"19836:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19824:3:10"},"nodeType":"YulFunctionCall","src":"19824:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"19840:66:10","type":"","value":"0x0a4465766963653a200000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19817:6:10"},"nodeType":"YulFunctionCall","src":"19817:90:10"},"nodeType":"YulExpressionStatement","src":"19817:90:10"}]},"name":"store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19798:6:10","type":""}],"src":"19700:214:10"},{"body":{"nodeType":"YulBlock","src":"20084:236:10","statements":[{"nodeType":"YulAssignment","src":"20094:91:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20178:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"20183:1:10","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20101:76:10"},"nodeType":"YulFunctionCall","src":"20101:84:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20094:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20283:3:10"}],"functionName":{"name":"store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60","nodeType":"YulIdentifier","src":"20194:88:10"},"nodeType":"YulFunctionCall","src":"20194:93:10"},"nodeType":"YulExpressionStatement","src":"20194:93:10"},{"nodeType":"YulAssignment","src":"20296:18:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20307:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"20312:1:10","type":"","value":"9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20303:3:10"},"nodeType":"YulFunctionCall","src":"20303:11:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20296:3:10"}]}]},"name":"abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20072:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20080:3:10","type":""}],"src":"19920:400:10"},{"body":{"nodeType":"YulBlock","src":"20432:108:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20454:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"20462:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20450:3:10"},"nodeType":"YulFunctionCall","src":"20450:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"20466:66:10","type":"","value":"0x0a4973737565642061743a200000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20443:6:10"},"nodeType":"YulFunctionCall","src":"20443:90:10"},"nodeType":"YulExpressionStatement","src":"20443:90:10"}]},"name":"store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20424:6:10","type":""}],"src":"20326:214:10"},{"body":{"nodeType":"YulBlock","src":"20710:238:10","statements":[{"nodeType":"YulAssignment","src":"20720:92:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20804:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"20809:2:10","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20727:76:10"},"nodeType":"YulFunctionCall","src":"20727:85:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20720:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20910:3:10"}],"functionName":{"name":"store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb","nodeType":"YulIdentifier","src":"20821:88:10"},"nodeType":"YulFunctionCall","src":"20821:93:10"},"nodeType":"YulExpressionStatement","src":"20821:93:10"},{"nodeType":"YulAssignment","src":"20923:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20934:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"20939:2:10","type":"","value":"12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20930:3:10"},"nodeType":"YulFunctionCall","src":"20930:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20923:3:10"}]}]},"name":"abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20698:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20706:3:10","type":""}],"src":"20546:402:10"},{"body":{"nodeType":"YulBlock","src":"21534:967:10","statements":[{"nodeType":"YulAssignment","src":"21545:99:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21631:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"21640:3:10"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21552:78:10"},"nodeType":"YulFunctionCall","src":"21552:92:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21545:3:10"}]},{"nodeType":"YulAssignment","src":"21654:155:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21805:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21661:142:10"},"nodeType":"YulFunctionCall","src":"21661:148:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21654:3:10"}]},{"nodeType":"YulAssignment","src":"21819:102:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21908:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"21917:3:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21826:81:10"},"nodeType":"YulFunctionCall","src":"21826:95:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21819:3:10"}]},{"nodeType":"YulAssignment","src":"21931:155:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22082:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21938:142:10"},"nodeType":"YulFunctionCall","src":"21938:148:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21931:3:10"}]},{"nodeType":"YulAssignment","src":"22096:102:10","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22185:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"22194:3:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22103:81:10"},"nodeType":"YulFunctionCall","src":"22103:95:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22096:3:10"}]},{"nodeType":"YulAssignment","src":"22208:155:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22359:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22215:142:10"},"nodeType":"YulFunctionCall","src":"22215:148:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22208:3:10"}]},{"nodeType":"YulAssignment","src":"22373:102:10","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22462:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"22471:3:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22380:81:10"},"nodeType":"YulFunctionCall","src":"22380:95:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22373:3:10"}]},{"nodeType":"YulAssignment","src":"22485:10:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"22492:3:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22485:3:10"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_t_string_memory_ptr_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_t_string_memory_ptr_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21489:3:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21495:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21503:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21511:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21519:6:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21530:3:10","type":""}],"src":"20954:1547:10"},{"body":{"nodeType":"YulBlock","src":"22596:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22613:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22616:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22606:6:10"},"nodeType":"YulFunctionCall","src":"22606:12:10"},"nodeType":"YulExpressionStatement","src":"22606:12:10"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"22507:117:10"},{"body":{"nodeType":"YulBlock","src":"22658:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22675:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22678:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22668:6:10"},"nodeType":"YulFunctionCall","src":"22668:88:10"},"nodeType":"YulExpressionStatement","src":"22668:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22772:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22775:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22765:6:10"},"nodeType":"YulFunctionCall","src":"22765:15:10"},"nodeType":"YulExpressionStatement","src":"22765:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22796:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22799:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22789:6:10"},"nodeType":"YulFunctionCall","src":"22789:15:10"},"nodeType":"YulExpressionStatement","src":"22789:15:10"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"22630:180:10"},{"body":{"nodeType":"YulBlock","src":"22859:238:10","statements":[{"nodeType":"YulVariableDeclaration","src":"22869:58:10","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22891:6:10"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"22921:4:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"22899:21:10"},"nodeType":"YulFunctionCall","src":"22899:27:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22887:3:10"},"nodeType":"YulFunctionCall","src":"22887:40:10"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"22873:10:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"23038:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"23040:16:10"},"nodeType":"YulFunctionCall","src":"23040:18:10"},"nodeType":"YulExpressionStatement","src":"23040:18:10"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"22981:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"22993:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22978:2:10"},"nodeType":"YulFunctionCall","src":"22978:34:10"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"23017:10:10"},{"name":"memPtr","nodeType":"YulIdentifier","src":"23029:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23014:2:10"},"nodeType":"YulFunctionCall","src":"23014:22:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"22975:2:10"},"nodeType":"YulFunctionCall","src":"22975:62:10"},"nodeType":"YulIf","src":"22972:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23076:2:10","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"23080:10:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23069:6:10"},"nodeType":"YulFunctionCall","src":"23069:22:10"},"nodeType":"YulExpressionStatement","src":"23069:22:10"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22845:6:10","type":""},{"name":"size","nodeType":"YulTypedName","src":"22853:4:10","type":""}],"src":"22816:281:10"},{"body":{"nodeType":"YulBlock","src":"23144:88:10","statements":[{"nodeType":"YulAssignment","src":"23154:30:10","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"23164:18:10"},"nodeType":"YulFunctionCall","src":"23164:20:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23154:6:10"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23213:6:10"},{"name":"size","nodeType":"YulIdentifier","src":"23221:4:10"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"23193:19:10"},"nodeType":"YulFunctionCall","src":"23193:33:10"},"nodeType":"YulExpressionStatement","src":"23193:33:10"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"23128:4:10","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"23137:6:10","type":""}],"src":"23103:129:10"},{"body":{"nodeType":"YulBlock","src":"23327:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23344:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23347:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23337:6:10"},"nodeType":"YulFunctionCall","src":"23337:12:10"},"nodeType":"YulExpressionStatement","src":"23337:12:10"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"23238:117:10"},{"body":{"nodeType":"YulBlock","src":"23413:87:10","statements":[{"nodeType":"YulAssignment","src":"23423:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23445:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23432:12:10"},"nodeType":"YulFunctionCall","src":"23432:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23423:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23488:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"23461:26:10"},"nodeType":"YulFunctionCall","src":"23461:33:10"},"nodeType":"YulExpressionStatement","src":"23461:33:10"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"23391:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"23399:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"23407:5:10","type":""}],"src":"23361:139:10"},{"body":{"nodeType":"YulBlock","src":"23637:662:10","statements":[{"body":{"nodeType":"YulBlock","src":"23681:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"23683:77:10"},"nodeType":"YulFunctionCall","src":"23683:79:10"},"nodeType":"YulExpressionStatement","src":"23683:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"23658:3:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"23663:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23654:3:10"},"nodeType":"YulFunctionCall","src":"23654:19:10"},{"kind":"number","nodeType":"YulLiteral","src":"23675:4:10","type":"","value":"0x60"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23650:3:10"},"nodeType":"YulFunctionCall","src":"23650:30:10"},"nodeType":"YulIf","src":"23647:117:10"},{"nodeType":"YulAssignment","src":"23773:30:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23798:4:10","type":"","value":"0x60"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"23782:15:10"},"nodeType":"YulFunctionCall","src":"23782:21:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23773:5:10"}]},{"nodeType":"YulBlock","src":"23813:151:10","statements":[{"nodeType":"YulVariableDeclaration","src":"23849:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"23863:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23853:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23889:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"23896:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23885:3:10"},"nodeType":"YulFunctionCall","src":"23885:16:10"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23928:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"23939:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23924:3:10"},"nodeType":"YulFunctionCall","src":"23924:22:10"},{"name":"end","nodeType":"YulIdentifier","src":"23948:3:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"23903:20:10"},"nodeType":"YulFunctionCall","src":"23903:49:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23878:6:10"},"nodeType":"YulFunctionCall","src":"23878:75:10"},"nodeType":"YulExpressionStatement","src":"23878:75:10"}]},{"nodeType":"YulBlock","src":"23974:153:10","statements":[{"nodeType":"YulVariableDeclaration","src":"24011:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"24025:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24015:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24052:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"24059:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24048:3:10"},"nodeType":"YulFunctionCall","src":"24048:16:10"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24091:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"24102:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24087:3:10"},"nodeType":"YulFunctionCall","src":"24087:22:10"},{"name":"end","nodeType":"YulIdentifier","src":"24111:3:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"24066:20:10"},"nodeType":"YulFunctionCall","src":"24066:49:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24041:6:10"},"nodeType":"YulFunctionCall","src":"24041:75:10"},"nodeType":"YulExpressionStatement","src":"24041:75:10"}]},{"nodeType":"YulBlock","src":"24137:155:10","statements":[{"nodeType":"YulVariableDeclaration","src":"24176:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"24190:2:10","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24180:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24217:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"24224:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24213:3:10"},"nodeType":"YulFunctionCall","src":"24213:16:10"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24256:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"24267:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24252:3:10"},"nodeType":"YulFunctionCall","src":"24252:22:10"},{"name":"end","nodeType":"YulIdentifier","src":"24276:3:10"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"24231:20:10"},"nodeType":"YulFunctionCall","src":"24231:49:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24206:6:10"},"nodeType":"YulFunctionCall","src":"24206:75:10"},"nodeType":"YulExpressionStatement","src":"24206:75:10"}]}]},"name":"abi_decode_t_struct$_TokenRequest_$1638_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23612:9:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"23623:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"23631:5:10","type":""}],"src":"23552:747:10"},{"body":{"nodeType":"YulBlock","src":"24401:293:10","statements":[{"body":{"nodeType":"YulBlock","src":"24447:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24449:77:10"},"nodeType":"YulFunctionCall","src":"24449:79:10"},"nodeType":"YulExpressionStatement","src":"24449:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24422:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"24431:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24418:3:10"},"nodeType":"YulFunctionCall","src":"24418:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"24443:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24414:3:10"},"nodeType":"YulFunctionCall","src":"24414:32:10"},"nodeType":"YulIf","src":"24411:119:10"},{"nodeType":"YulBlock","src":"24540:147:10","statements":[{"nodeType":"YulVariableDeclaration","src":"24555:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"24569:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24559:6:10","type":""}]},{"nodeType":"YulAssignment","src":"24584:93:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24649:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"24660:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24645:3:10"},"nodeType":"YulFunctionCall","src":"24645:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24669:7:10"}],"functionName":{"name":"abi_decode_t_struct$_TokenRequest_$1638_memory_ptr","nodeType":"YulIdentifier","src":"24594:50:10"},"nodeType":"YulFunctionCall","src":"24594:83:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24584:6:10"}]}]}]},"name":"abi_decode_tuple_t_struct$_TokenRequest_$1638_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24371:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24382:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24394:6:10","type":""}],"src":"24305:389:10"},{"body":{"nodeType":"YulBlock","src":"24728:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24745:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24748:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24738:6:10"},"nodeType":"YulFunctionCall","src":"24738:88:10"},"nodeType":"YulExpressionStatement","src":"24738:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24842:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24845:4:10","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24835:6:10"},"nodeType":"YulFunctionCall","src":"24835:15:10"},"nodeType":"YulExpressionStatement","src":"24835:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24866:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24869:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24859:6:10"},"nodeType":"YulFunctionCall","src":"24859:15:10"},"nodeType":"YulExpressionStatement","src":"24859:15:10"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"24700:180:10"},{"body":{"nodeType":"YulBlock","src":"24992:108:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25014:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"25022:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25010:3:10"},"nodeType":"YulFunctionCall","src":"25010:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"25026:66:10","type":"","value":"0x19457468657265756d205369676e6564204d6573736167653a0a000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25003:6:10"},"nodeType":"YulFunctionCall","src":"25003:90:10"},"nodeType":"YulExpressionStatement","src":"25003:90:10"}]},"name":"store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24984:6:10","type":""}],"src":"24886:214:10"},{"body":{"nodeType":"YulBlock","src":"25270:238:10","statements":[{"nodeType":"YulAssignment","src":"25280:92:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25364:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"25369:2:10","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25287:76:10"},"nodeType":"YulFunctionCall","src":"25287:85:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25280:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25470:3:10"}],"functionName":{"name":"store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","nodeType":"YulIdentifier","src":"25381:88:10"},"nodeType":"YulFunctionCall","src":"25381:93:10"},"nodeType":"YulExpressionStatement","src":"25381:93:10"},{"nodeType":"YulAssignment","src":"25483:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25494:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"25499:2:10","type":"","value":"26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25490:3:10"},"nodeType":"YulFunctionCall","src":"25490:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25483:3:10"}]}]},"name":"abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25258:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25266:3:10","type":""}],"src":"25106:402:10"},{"body":{"nodeType":"YulBlock","src":"25627:34:10","statements":[{"nodeType":"YulAssignment","src":"25637:18:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"25652:3:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"25637:11:10"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25599:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"25604:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"25615:11:10","type":""}],"src":"25514:147:10"},{"body":{"nodeType":"YulBlock","src":"25775:278:10","statements":[{"nodeType":"YulVariableDeclaration","src":"25785:52:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25831:5:10"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"25799:31:10"},"nodeType":"YulFunctionCall","src":"25799:38:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"25789:6:10","type":""}]},{"nodeType":"YulAssignment","src":"25846:95:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25929:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"25934:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25853:75:10"},"nodeType":"YulFunctionCall","src":"25853:88:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25846:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25989:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"25996:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25985:3:10"},"nodeType":"YulFunctionCall","src":"25985:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"26003:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"26008:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"25950:34:10"},"nodeType":"YulFunctionCall","src":"25950:65:10"},"nodeType":"YulExpressionStatement","src":"25950:65:10"},{"nodeType":"YulAssignment","src":"26024:23:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26035:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"26040:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26031:3:10"},"nodeType":"YulFunctionCall","src":"26031:16:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26024:3:10"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25756:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"25763:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25771:3:10","type":""}],"src":"25667:386:10"},{"body":{"nodeType":"YulBlock","src":"26342:414:10","statements":[{"nodeType":"YulAssignment","src":"26353:155:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26504:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26360:142:10"},"nodeType":"YulFunctionCall","src":"26360:148:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26353:3:10"}]},{"nodeType":"YulAssignment","src":"26518:102:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26607:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"26616:3:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26525:81:10"},"nodeType":"YulFunctionCall","src":"26525:95:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26518:3:10"}]},{"nodeType":"YulAssignment","src":"26630:100:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26717:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"26726:3:10"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26637:79:10"},"nodeType":"YulFunctionCall","src":"26637:93:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26630:3:10"}]},{"nodeType":"YulAssignment","src":"26740:10:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"26747:3:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26740:3:10"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_t_string_memory_ptr_t_bytes_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26313:3:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26319:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26327:6:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26338:3:10","type":""}],"src":"26059:697:10"},{"body":{"nodeType":"YulBlock","src":"26868:68:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26890:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"26898:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26886:3:10"},"nodeType":"YulFunctionCall","src":"26886:14:10"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"26902:26:10","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26879:6:10"},"nodeType":"YulFunctionCall","src":"26879:50:10"},"nodeType":"YulExpressionStatement","src":"26879:50:10"}]},"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26860:6:10","type":""}],"src":"26762:174:10"},{"body":{"nodeType":"YulBlock","src":"27088:220:10","statements":[{"nodeType":"YulAssignment","src":"27098:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27164:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"27169:2:10","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27105:58:10"},"nodeType":"YulFunctionCall","src":"27105:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27098:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27270:3:10"}],"functionName":{"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulIdentifier","src":"27181:88:10"},"nodeType":"YulFunctionCall","src":"27181:93:10"},"nodeType":"YulExpressionStatement","src":"27181:93:10"},{"nodeType":"YulAssignment","src":"27283:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27294:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"27299:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27290:3:10"},"nodeType":"YulFunctionCall","src":"27290:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27283:3:10"}]}]},"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27076:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27084:3:10","type":""}],"src":"26942:366:10"},{"body":{"nodeType":"YulBlock","src":"27485:248:10","statements":[{"nodeType":"YulAssignment","src":"27495:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27507:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"27518:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27503:3:10"},"nodeType":"YulFunctionCall","src":"27503:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27495:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27542:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"27553:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27538:3:10"},"nodeType":"YulFunctionCall","src":"27538:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27561:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"27567:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27557:3:10"},"nodeType":"YulFunctionCall","src":"27557:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27531:6:10"},"nodeType":"YulFunctionCall","src":"27531:47:10"},"nodeType":"YulExpressionStatement","src":"27531:47:10"},{"nodeType":"YulAssignment","src":"27587:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27721:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27595:124:10"},"nodeType":"YulFunctionCall","src":"27595:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27587:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27465:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27480:4:10","type":""}],"src":"27314:419:10"},{"body":{"nodeType":"YulBlock","src":"27845:75:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27867:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"27875:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27863:3:10"},"nodeType":"YulFunctionCall","src":"27863:14:10"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"27879:33:10","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27856:6:10"},"nodeType":"YulFunctionCall","src":"27856:57:10"},"nodeType":"YulExpressionStatement","src":"27856:57:10"}]},"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27837:6:10","type":""}],"src":"27739:181:10"},{"body":{"nodeType":"YulBlock","src":"28072:220:10","statements":[{"nodeType":"YulAssignment","src":"28082:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28148:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"28153:2:10","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28089:58:10"},"nodeType":"YulFunctionCall","src":"28089:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28082:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28254:3:10"}],"functionName":{"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulIdentifier","src":"28165:88:10"},"nodeType":"YulFunctionCall","src":"28165:93:10"},"nodeType":"YulExpressionStatement","src":"28165:93:10"},{"nodeType":"YulAssignment","src":"28267:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28278:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"28283:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28274:3:10"},"nodeType":"YulFunctionCall","src":"28274:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28267:3:10"}]}]},"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28060:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28068:3:10","type":""}],"src":"27926:366:10"},{"body":{"nodeType":"YulBlock","src":"28469:248:10","statements":[{"nodeType":"YulAssignment","src":"28479:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28491:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"28502:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28487:3:10"},"nodeType":"YulFunctionCall","src":"28487:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28479:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28526:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"28537:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28522:3:10"},"nodeType":"YulFunctionCall","src":"28522:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28545:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"28551:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28541:3:10"},"nodeType":"YulFunctionCall","src":"28541:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28515:6:10"},"nodeType":"YulFunctionCall","src":"28515:47:10"},"nodeType":"YulExpressionStatement","src":"28515:47:10"},{"nodeType":"YulAssignment","src":"28571:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28705:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28579:124:10"},"nodeType":"YulFunctionCall","src":"28579:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28571:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28449:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28464:4:10","type":""}],"src":"28298:419:10"},{"body":{"nodeType":"YulBlock","src":"28829:115:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28851:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"28859:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28847:3:10"},"nodeType":"YulFunctionCall","src":"28847:14:10"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"28863:34:10","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28840:6:10"},"nodeType":"YulFunctionCall","src":"28840:58:10"},"nodeType":"YulExpressionStatement","src":"28840:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28919:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"28927:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28915:3:10"},"nodeType":"YulFunctionCall","src":"28915:15:10"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"28932:4:10","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28908:6:10"},"nodeType":"YulFunctionCall","src":"28908:29:10"},"nodeType":"YulExpressionStatement","src":"28908:29:10"}]},"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28821:6:10","type":""}],"src":"28723:221:10"},{"body":{"nodeType":"YulBlock","src":"29096:220:10","statements":[{"nodeType":"YulAssignment","src":"29106:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29172:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"29177:2:10","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29113:58:10"},"nodeType":"YulFunctionCall","src":"29113:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29106:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29278:3:10"}],"functionName":{"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulIdentifier","src":"29189:88:10"},"nodeType":"YulFunctionCall","src":"29189:93:10"},"nodeType":"YulExpressionStatement","src":"29189:93:10"},{"nodeType":"YulAssignment","src":"29291:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29302:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"29307:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29298:3:10"},"nodeType":"YulFunctionCall","src":"29298:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29291:3:10"}]}]},"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29084:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29092:3:10","type":""}],"src":"28950:366:10"},{"body":{"nodeType":"YulBlock","src":"29493:248:10","statements":[{"nodeType":"YulAssignment","src":"29503:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29515:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"29526:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29511:3:10"},"nodeType":"YulFunctionCall","src":"29511:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29503:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29550:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"29561:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29546:3:10"},"nodeType":"YulFunctionCall","src":"29546:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29569:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"29575:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29565:3:10"},"nodeType":"YulFunctionCall","src":"29565:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29539:6:10"},"nodeType":"YulFunctionCall","src":"29539:47:10"},"nodeType":"YulExpressionStatement","src":"29539:47:10"},{"nodeType":"YulAssignment","src":"29595:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29729:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29603:124:10"},"nodeType":"YulFunctionCall","src":"29603:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29595:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29473:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29488:4:10","type":""}],"src":"29322:419:10"},{"body":{"nodeType":"YulBlock","src":"29795:362:10","statements":[{"nodeType":"YulAssignment","src":"29805:25:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29828:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29810:17:10"},"nodeType":"YulFunctionCall","src":"29810:20:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"29805:1:10"}]},{"nodeType":"YulAssignment","src":"29839:25:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29862:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29844:17:10"},"nodeType":"YulFunctionCall","src":"29844:20:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"29839:1:10"}]},{"nodeType":"YulVariableDeclaration","src":"29873:28:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29896:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"29899:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29892:3:10"},"nodeType":"YulFunctionCall","src":"29892:9:10"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"29877:11:10","type":""}]},{"nodeType":"YulAssignment","src":"29910:41:10","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"29939:11:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29921:17:10"},"nodeType":"YulFunctionCall","src":"29921:30:10"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"29910:7:10"}]},{"body":{"nodeType":"YulBlock","src":"30128:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30130:16:10"},"nodeType":"YulFunctionCall","src":"30130:18:10"},"nodeType":"YulExpressionStatement","src":"30130:18:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30061:1:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30054:6:10"},"nodeType":"YulFunctionCall","src":"30054:9:10"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"30084:1:10"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"30091:7:10"},{"name":"x","nodeType":"YulIdentifier","src":"30100:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"30087:3:10"},"nodeType":"YulFunctionCall","src":"30087:15:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"30081:2:10"},"nodeType":"YulFunctionCall","src":"30081:22:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"30034:2:10"},"nodeType":"YulFunctionCall","src":"30034:83:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30014:6:10"},"nodeType":"YulFunctionCall","src":"30014:113:10"},"nodeType":"YulIf","src":"30011:139:10"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29778:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"29781:1:10","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"29787:7:10","type":""}],"src":"29747:410:10"},{"body":{"nodeType":"YulBlock","src":"30207:147:10","statements":[{"nodeType":"YulAssignment","src":"30217:25:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30240:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30222:17:10"},"nodeType":"YulFunctionCall","src":"30222:20:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"30217:1:10"}]},{"nodeType":"YulAssignment","src":"30251:25:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"30274:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30256:17:10"},"nodeType":"YulFunctionCall","src":"30256:20:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"30251:1:10"}]},{"nodeType":"YulAssignment","src":"30285:16:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30296:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"30299:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30292:3:10"},"nodeType":"YulFunctionCall","src":"30292:9:10"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"30285:3:10"}]},{"body":{"nodeType":"YulBlock","src":"30325:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30327:16:10"},"nodeType":"YulFunctionCall","src":"30327:18:10"},"nodeType":"YulExpressionStatement","src":"30327:18:10"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30317:1:10"},{"name":"sum","nodeType":"YulIdentifier","src":"30320:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30314:2:10"},"nodeType":"YulFunctionCall","src":"30314:10:10"},"nodeType":"YulIf","src":"30311:36:10"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"30194:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"30197:1:10","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"30203:3:10","type":""}],"src":"30163:191:10"},{"body":{"nodeType":"YulBlock","src":"30388:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30405:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30408:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30398:6:10"},"nodeType":"YulFunctionCall","src":"30398:88:10"},"nodeType":"YulExpressionStatement","src":"30398:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30502:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"30505:4:10","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30495:6:10"},"nodeType":"YulFunctionCall","src":"30495:15:10"},"nodeType":"YulExpressionStatement","src":"30495:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30526:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30529:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30519:6:10"},"nodeType":"YulFunctionCall","src":"30519:15:10"},"nodeType":"YulExpressionStatement","src":"30519:15:10"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"30360:180:10"},{"body":{"nodeType":"YulBlock","src":"30589:128:10","statements":[{"nodeType":"YulAssignment","src":"30599:33:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30626:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30608:17:10"},"nodeType":"YulFunctionCall","src":"30608:24:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"30599:5:10"}]},{"body":{"nodeType":"YulBlock","src":"30660:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30662:16:10"},"nodeType":"YulFunctionCall","src":"30662:18:10"},"nodeType":"YulExpressionStatement","src":"30662:18:10"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30647:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"30654:4:10","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"30644:2:10"},"nodeType":"YulFunctionCall","src":"30644:15:10"},"nodeType":"YulIf","src":"30641:41:10"},{"nodeType":"YulAssignment","src":"30691:20:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30702:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"30709:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30698:3:10"},"nodeType":"YulFunctionCall","src":"30698:13:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"30691:3:10"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30575:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"30585:3:10","type":""}],"src":"30546:171:10"},{"body":{"nodeType":"YulBlock","src":"30829:76:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30851:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"30859:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30847:3:10"},"nodeType":"YulFunctionCall","src":"30847:14:10"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"30863:34:10","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30840:6:10"},"nodeType":"YulFunctionCall","src":"30840:58:10"},"nodeType":"YulExpressionStatement","src":"30840:58:10"}]},"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30821:6:10","type":""}],"src":"30723:182:10"},{"body":{"nodeType":"YulBlock","src":"31057:220:10","statements":[{"nodeType":"YulAssignment","src":"31067:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31133:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"31138:2:10","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31074:58:10"},"nodeType":"YulFunctionCall","src":"31074:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31067:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31239:3:10"}],"functionName":{"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulIdentifier","src":"31150:88:10"},"nodeType":"YulFunctionCall","src":"31150:93:10"},"nodeType":"YulExpressionStatement","src":"31150:93:10"},{"nodeType":"YulAssignment","src":"31252:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31263:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"31268:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31259:3:10"},"nodeType":"YulFunctionCall","src":"31259:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31252:3:10"}]}]},"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31045:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31053:3:10","type":""}],"src":"30911:366:10"},{"body":{"nodeType":"YulBlock","src":"31454:248:10","statements":[{"nodeType":"YulAssignment","src":"31464:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31476:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"31487:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31472:3:10"},"nodeType":"YulFunctionCall","src":"31472:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31464:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31511:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"31522:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31507:3:10"},"nodeType":"YulFunctionCall","src":"31507:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31530:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"31536:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31526:3:10"},"nodeType":"YulFunctionCall","src":"31526:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31500:6:10"},"nodeType":"YulFunctionCall","src":"31500:47:10"},"nodeType":"YulExpressionStatement","src":"31500:47:10"},{"nodeType":"YulAssignment","src":"31556:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31690:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31564:124:10"},"nodeType":"YulFunctionCall","src":"31564:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31556:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31434:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31449:4:10","type":""}],"src":"31283:419:10"},{"body":{"nodeType":"YulBlock","src":"31753:32:10","statements":[{"nodeType":"YulAssignment","src":"31763:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"31774:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"31763:7:10"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31735:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"31745:7:10","type":""}],"src":"31708:77:10"},{"body":{"nodeType":"YulBlock","src":"31856:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31873:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31896:5:10"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"31878:17:10"},"nodeType":"YulFunctionCall","src":"31878:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31866:6:10"},"nodeType":"YulFunctionCall","src":"31866:37:10"},"nodeType":"YulExpressionStatement","src":"31866:37:10"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31844:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"31851:3:10","type":""}],"src":"31791:118:10"},{"body":{"nodeType":"YulBlock","src":"31976:51:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31993:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32014:5:10"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"31998:15:10"},"nodeType":"YulFunctionCall","src":"31998:22:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31986:6:10"},"nodeType":"YulFunctionCall","src":"31986:35:10"},"nodeType":"YulExpressionStatement","src":"31986:35:10"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31964:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"31971:3:10","type":""}],"src":"31915:112:10"},{"body":{"nodeType":"YulBlock","src":"32211:367:10","statements":[{"nodeType":"YulAssignment","src":"32221:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32233:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"32244:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32229:3:10"},"nodeType":"YulFunctionCall","src":"32229:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32221:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32302:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32315:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"32326:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32311:3:10"},"nodeType":"YulFunctionCall","src":"32311:17:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"32258:43:10"},"nodeType":"YulFunctionCall","src":"32258:71:10"},"nodeType":"YulExpressionStatement","src":"32258:71:10"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32379:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32392:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"32403:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32388:3:10"},"nodeType":"YulFunctionCall","src":"32388:18:10"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"32339:39:10"},"nodeType":"YulFunctionCall","src":"32339:68:10"},"nodeType":"YulExpressionStatement","src":"32339:68:10"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"32461:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32474:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"32485:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32470:3:10"},"nodeType":"YulFunctionCall","src":"32470:18:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"32417:43:10"},"nodeType":"YulFunctionCall","src":"32417:72:10"},"nodeType":"YulExpressionStatement","src":"32417:72:10"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"32543:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32556:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"32567:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32552:3:10"},"nodeType":"YulFunctionCall","src":"32552:18:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"32499:43:10"},"nodeType":"YulFunctionCall","src":"32499:72:10"},"nodeType":"YulExpressionStatement","src":"32499:72:10"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32159:9:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"32171:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"32179:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32187:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32195:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32206:4:10","type":""}],"src":"32033:545:10"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct TokenAuthenticated.TokenRequest\n    function abi_decode_t_struct$_TokenRequest_$1638_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 96) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_struct$_TokenRequest_$1638_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_struct$_TokenRequest_$1638_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct TokenAuthenticated.TokenRequest -> struct TokenAuthenticated.TokenRequest\n    function abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // device\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // issuedAt\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__to_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only safe's with a threshold of \")\n\n        mstore(add(memPtr, 32), \"one are supported\")\n\n    }\n\n    function abi_encode_t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_afd27bc9310dd12e1a2d8027720774b57ea52683268026d40dc087659419be05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Owner is not a safe owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad3c33960f6977dd83f72ba1903123c6bcbb555d6b3e5d33695bcea916b1380b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_rational_1_by_1__to_t_address_t_address_t_uint8__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Operation_$2032(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Operation_$2032(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Operation_$2032(value)\n    }\n\n    function convert_t_enum$_Operation_$2032_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Operation_$2032(value)\n    }\n\n    function abi_encode_t_enum$_Operation_$2032_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Operation_$2032_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1_t_bytes_memory_ptr_t_enum$_Operation_$2032__to_t_address_t_uint256_t_bytes_memory_ptr_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_enum$_Operation_$2032_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Request is too old\")\n\n    }\n\n    function abi_encode_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262(memPtr) {\n\n        mstore(add(memPtr, 0), 0x0a0a4d653a200000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 6)\n        store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262(pos)\n        end := add(pos, 6)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60(memPtr) {\n\n        mstore(add(memPtr, 0), 0x0a4465766963653a200000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n        store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60(pos)\n        end := add(pos, 9)\n    }\n\n    function store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb(memPtr) {\n\n        mstore(add(memPtr, 0), 0x0a4973737565642061743a200000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 12)\n        store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb(pos)\n        end := add(pos, 12)\n    }\n\n    function abi_encode_tuple_packed_t_string_storage_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_t_string_memory_ptr_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_t_string_memory_ptr_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value3, value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        pos := abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value3,  pos)\n\n        end := pos\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // struct TokenAuthenticated.TokenRequest\n    function abi_decode_t_struct$_TokenRequest_$1638_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x60) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x60)\n\n        {\n            // owner\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // device\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // issuedAt\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_TokenRequest_$1638_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_TokenRequest_$1638_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4(memPtr) {\n\n        mstore(add(memPtr, 0), 0x19457468657265756d205369676e6564204d6573736167653a0a000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 26)\n        store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4(pos)\n        end := add(pos, 26)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_t_string_memory_ptr_t_bytes_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c8063142af66b14610051578063b6ad16a81461006d578063bebc479c1461009e578063cb2e6043146100bc575b600080fd5b61006b60048036038101906100669190610f40565b6100da565b005b61008760048036038101906100829190610fc8565b6103ac565b604051610095929190611102565b60405180910390f35b6100a6610420565b6040516100b39190611132565b60405180910390f35b6100c46104ae565b6040516100d19190611163565b60405180910390f35b6100e58383836104b4565b6100ee57600080fd5b600085905060008173ffffffffffffffffffffffffffffffffffffffff1663e75235b86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610140573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016491906111aa565b9050600181146101a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a090611249565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16632f54bf6e8660000160208101906101d89190611269565b6040518263ffffffff1660e01b81526004016101f491906112a5565b602060405180830381865afa158015610211573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023591906112f8565b610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b90611371565b60405180910390fd5b5060008585602001602081019061028b9190611269565b600160405160240161029f939291906113e3565b6040516020818303038152906040527ff8dc5dd9000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090508673ffffffffffffffffffffffffffffffffffffffff1663468721a78860008460006040518563ffffffff1660e01b815260040161035f9493929190611521565b6020604051808303816000875af115801561037e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a291906112f8565b5050505050505050565b6103b4610df8565b606060405180606001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001600143610406919061159c565b815250915081610415836105f5565b915091509250929050565b6000805461042d906115ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610459906115ff565b80156104a65780601f1061047b576101008083540402835291602001916104a6565b820191906000526020600020905b81548152906001019060200180831161048957829003601f168201915b505050505081565b60015481565b6000806104c085610649565b905060006105128286868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610673565b90508560000160208101906105279190611269565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b9061167c565b60405180910390fd5b600154436105a2919061159c565b866040013510156105e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105df906116e8565b60405180910390fd5b6001925050509392505050565b60606000610606836000015161069a565b610613846020015161069a565b61062085604001516106c7565b60405160200161063394939291906118c0565b6040516020818303038152906040529050919050565b600061066c610667838036038101906106629190611a18565b6105f5565b610795565b9050919050565b600080600061068285856107d0565b9150915061068f81610821565b819250505092915050565b60606106c08273ffffffffffffffffffffffffffffffffffffffff16601460ff16610987565b9050919050565b6060600060016106d684610bc3565b01905060008167ffffffffffffffff8111156106f5576106f4611924565b5b6040519080825280601f01601f1916602001820160405280156107275781602001600182028036833780820191505090505b509050600082602001820190505b60011561078a578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161077e5761077d611a45565b5b04945060008503610735575b819350505050919050565b60006107a182516106c7565b826040516020016107b3929190611afc565b604051602081830303815290604052805190602001209050919050565b60008060418351036108115760008060006020860151925060408601519150606086015160001a905061080587828585610d16565b9450945050505061081a565b60006002915091505b9250929050565b60006004811115610835576108346114aa565b5b816004811115610848576108476114aa565b5b03156109845760016004811115610862576108616114aa565b5b816004811115610875576108746114aa565b5b036108b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ac90611b77565b60405180910390fd5b600260048111156108c9576108c86114aa565b5b8160048111156108dc576108db6114aa565b5b0361091c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091390611be3565b60405180910390fd5b600360048111156109305761092f6114aa565b5b816004811115610943576109426114aa565b5b03610983576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097a90611c75565b60405180910390fd5b5b50565b60606000600283600261099a9190611c95565b6109a49190611cd7565b67ffffffffffffffff8111156109bd576109bc611924565b5b6040519080825280601f01601f1916602001820160405280156109ef5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610a2757610a26611d0b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610a8b57610a8a611d0b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610acb9190611c95565b610ad59190611cd7565b90505b6001811115610b75577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610b1757610b16611d0b565b5b1a60f81b828281518110610b2e57610b2d611d0b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610b6e90611d3a565b9050610ad8565b5060008414610bb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb090611daf565b60405180910390fd5b8091505092915050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610c21577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381610c1757610c16611a45565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610c5e576d04ee2d6d415b85acef81000000008381610c5457610c53611a45565b5b0492506020810190505b662386f26fc100008310610c8d57662386f26fc100008381610c8357610c82611a45565b5b0492506010810190505b6305f5e1008310610cb6576305f5e1008381610cac57610cab611a45565b5b0492506008810190505b6127108310610cdb576127108381610cd157610cd0611a45565b5b0492506004810190505b60648310610cfe5760648381610cf457610cf3611a45565b5b0492506002810190505b600a8310610d0d576001810190505b80915050919050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115610d51576000600391509150610def565b600060018787878760405160008152602001604052604051610d769493929190611df7565b6020604051602081039080840390855afa158015610d98573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610de657600060019250925050610def565b80600092509250505b94509492505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e8482610e59565b9050919050565b610e9481610e79565b8114610e9f57600080fd5b50565b600081359050610eb181610e8b565b92915050565b600080fd5b600060608284031215610ed257610ed1610eb7565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610f0057610eff610edb565b5b8235905067ffffffffffffffff811115610f1d57610f1c610ee0565b5b602083019150836001820283011115610f3957610f38610ee5565b5b9250929050565b600080600080600060c08688031215610f5c57610f5b610e4f565b5b6000610f6a88828901610ea2565b9550506020610f7b88828901610ea2565b9450506040610f8c88828901610ebc565b93505060a086013567ffffffffffffffff811115610fad57610fac610e54565b5b610fb988828901610eea565b92509250509295509295909350565b60008060408385031215610fdf57610fde610e4f565b5b6000610fed85828601610ea2565b9250506020610ffe85828601610ea2565b9150509250929050565b61101181610e79565b82525050565b6000819050919050565b61102a81611017565b82525050565b6060820160008201516110466000850182611008565b5060208201516110596020850182611008565b50604082015161106c6040850182611021565b50505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110ac578082015181840152602081019050611091565b60008484015250505050565b6000601f19601f8301169050919050565b60006110d482611072565b6110de818561107d565b93506110ee81856020860161108e565b6110f7816110b8565b840191505092915050565b60006080820190506111176000830185611030565b818103606083015261112981846110c9565b90509392505050565b6000602082019050818103600083015261114c81846110c9565b905092915050565b61115d81611017565b82525050565b60006020820190506111786000830184611154565b92915050565b61118781611017565b811461119257600080fd5b50565b6000815190506111a48161117e565b92915050565b6000602082840312156111c0576111bf610e4f565b5b60006111ce84828501611195565b91505092915050565b7f4f6e6c792073616665277320776974682061207468726573686f6c64206f662060008201527f6f6e652061726520737570706f72746564000000000000000000000000000000602082015250565b600061123360318361107d565b915061123e826111d7565b604082019050919050565b6000602082019050818103600083015261126281611226565b9050919050565b60006020828403121561127f5761127e610e4f565b5b600061128d84828501610ea2565b91505092915050565b61129f81610e79565b82525050565b60006020820190506112ba6000830184611296565b92915050565b60008115159050919050565b6112d5816112c0565b81146112e057600080fd5b50565b6000815190506112f2816112cc565b92915050565b60006020828403121561130e5761130d610e4f565b5b600061131c848285016112e3565b91505092915050565b7f4f776e6572206973206e6f7420612073616665206f776e657200000000000000600082015250565b600061135b60198361107d565b915061136682611325565b602082019050919050565b6000602082019050818103600083015261138a8161134e565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b60006113cd6113c86113c384611391565b6113a8565b61139b565b9050919050565b6113dd816113b2565b82525050565b60006060820190506113f86000830186611296565b6114056020830185611296565b61141260408301846113d4565b949350505050565b6000819050919050565b600061143f61143a6114358461141a565b6113a8565b611017565b9050919050565b61144f81611424565b82525050565b600081519050919050565b600082825260208201905092915050565b600061147c82611455565b6114868185611460565b935061149681856020860161108e565b61149f816110b8565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106114ea576114e96114aa565b5b50565b60008190506114fb826114d9565b919050565b600061150b826114ed565b9050919050565b61151b81611500565b82525050565b60006080820190506115366000830187611296565b6115436020830186611446565b81810360408301526115558185611471565b90506115646060830184611512565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115a782611017565b91506115b283611017565b92508282039050818111156115ca576115c961156d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061161757607f821691505b60208210810361162a576116296115d0565b5b50919050565b7f696e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b600061166660118361107d565b915061167182611630565b602082019050919050565b6000602082019050818103600083015261169581611659565b9050919050565b7f5265717565737420697320746f6f206f6c640000000000000000000000000000600082015250565b60006116d260128361107d565b91506116dd8261169c565b602082019050919050565b60006020820190508181036000830152611701816116c5565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154611735816115ff565b61173f8186611708565b9450600182166000811461175a576001811461176f576117a2565b60ff19831686528115158202860193506117a2565b61177885611713565b60005b8381101561179a5781548189015260018201915060208101905061177b565b838801955050505b50505092915050565b7f0a0a4d653a200000000000000000000000000000000000000000000000000000600082015250565b60006117e1600683611708565b91506117ec826117ab565b600682019050919050565b600061180282611072565b61180c8185611708565b935061181c81856020860161108e565b80840191505092915050565b7f0a4465766963653a200000000000000000000000000000000000000000000000600082015250565b600061185e600983611708565b915061186982611828565b600982019050919050565b7f0a4973737565642061743a200000000000000000000000000000000000000000600082015250565b60006118aa600c83611708565b91506118b582611874565b600c82019050919050565b60006118cc8287611728565b91506118d7826117d4565b91506118e382866117f7565b91506118ee82611851565b91506118fa82856117f7565b91506119058261189d565b915061191182846117f7565b915081905095945050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61195c826110b8565b810181811067ffffffffffffffff8211171561197b5761197a611924565b5b80604052505050565b600061198e610e45565b905061199a8282611953565b919050565b6000813590506119ae8161117e565b92915050565b6000606082840312156119ca576119c961191f565b5b6119d46060611984565b905060006119e484828501610ea2565b60008301525060206119f884828501610ea2565b6020830152506040611a0c8482850161199f565b60408301525092915050565b600060608284031215611a2e57611a2d610e4f565b5b6000611a3c848285016119b4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f19457468657265756d205369676e6564204d6573736167653a0a000000000000600082015250565b6000611aaa601a83611708565b9150611ab582611a74565b601a82019050919050565b600081905092915050565b6000611ad682611455565b611ae08185611ac0565b9350611af081856020860161108e565b80840191505092915050565b6000611b0782611a9d565b9150611b1382856117f7565b9150611b1f8284611acb565b91508190509392505050565b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000611b6160188361107d565b9150611b6c82611b2b565b602082019050919050565b60006020820190508181036000830152611b9081611b54565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000611bcd601f8361107d565b9150611bd882611b97565b602082019050919050565b60006020820190508181036000830152611bfc81611bc0565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000611c5f60228361107d565b9150611c6a82611c03565b604082019050919050565b60006020820190508181036000830152611c8e81611c52565b9050919050565b6000611ca082611017565b9150611cab83611017565b9250828202611cb981611017565b91508282048414831517611cd057611ccf61156d565b5b5092915050565b6000611ce282611017565b9150611ced83611017565b9250828201905080821115611d0557611d0461156d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611d4582611017565b915060008203611d5857611d5761156d565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611d9960208361107d565b9150611da482611d63565b602082019050919050565b60006020820190508181036000830152611dc881611d8c565b9050919050565b6000819050919050565b611de281611dcf565b82525050565b611df18161139b565b82525050565b6000608082019050611e0c6000830187611dd9565b611e196020830186611de8565b611e266040830185611dd9565b611e336060830184611dd9565b9594505050505056fea26469706673582212206864223f3a15a76fdf02748f97a467235cdcf0c420aea8d5c43d8b1860ae1cd764736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x142AF66B EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xB6AD16A8 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xBEBC479C EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0xCB2E6043 EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH2 0xDA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82 SWAP2 SWAP1 PUSH2 0xFC8 JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95 SWAP3 SWAP2 SWAP1 PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x1163 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE5 DUP4 DUP4 DUP4 PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP6 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE75235B8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x140 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 EQ PUSH2 0x1A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A0 SWAP1 PUSH2 0x1249 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F54BF6E DUP7 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x211 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP6 DUP6 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x29F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xF8DC5DD900000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x468721A7 DUP9 PUSH1 0x0 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x37E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0xDF8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 NUMBER PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x159C JUMP JUMPDEST DUP2 MSTORE POP SWAP2 POP DUP2 PUSH2 0x415 DUP4 PUSH2 0x5F5 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x42D SWAP1 PUSH2 0x15FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x459 SWAP1 PUSH2 0x15FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x489 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4C0 DUP6 PUSH2 0x649 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x512 DUP3 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x673 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x527 SWAP2 SWAP1 PUSH2 0x1269 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x594 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58B SWAP1 PUSH2 0x167C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD NUMBER PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x159C JUMP JUMPDEST DUP7 PUSH1 0x40 ADD CALLDATALOAD LT ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x606 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x613 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x620 DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x633 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66C PUSH2 0x667 DUP4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x1A18 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0x795 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x682 DUP6 DUP6 PUSH2 0x7D0 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x68F DUP2 PUSH2 0x821 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6C0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x987 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x6D6 DUP5 PUSH2 0xBC3 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6F5 JUMPI PUSH2 0x6F4 PUSH2 0x1924 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x727 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x78A JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x77E JUMPI PUSH2 0x77D PUSH2 0x1A45 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x735 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A1 DUP3 MLOAD PUSH2 0x6C7 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7B3 SWAP3 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x41 DUP4 MLOAD SUB PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x805 DUP8 DUP3 DUP6 DUP6 PUSH2 0xD16 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x81A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x835 JUMPI PUSH2 0x834 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x848 JUMPI PUSH2 0x847 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x984 JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x862 JUMPI PUSH2 0x861 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x875 JUMPI PUSH2 0x874 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST SUB PUSH2 0x8B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP1 PUSH2 0x1B77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x8C9 JUMPI PUSH2 0x8C8 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x8DC JUMPI PUSH2 0x8DB PUSH2 0x14AA JUMP JUMPDEST JUMPDEST SUB PUSH2 0x91C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x913 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x930 JUMPI PUSH2 0x92F PUSH2 0x14AA JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x943 JUMPI PUSH2 0x942 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST SUB PUSH2 0x983 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97A SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x99A SWAP2 SWAP1 PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0x1CD7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9BD JUMPI PUSH2 0x9BC PUSH2 0x1924 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9EF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA27 JUMPI PUSH2 0xA26 PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA8B JUMPI PUSH2 0xA8A PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xACB SWAP2 SWAP1 PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x1CD7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB75 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xB17 JUMPI PUSH2 0xB16 PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB2E JUMPI PUSH2 0xB2D PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xB6E SWAP1 PUSH2 0x1D3A JUMP JUMPDEST SWAP1 POP PUSH2 0xAD8 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0xBB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB0 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0xC21 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0xC17 JUMPI PUSH2 0xC16 PUSH2 0x1A45 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC5E JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0xC54 JUMPI PUSH2 0xC53 PUSH2 0x1A45 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC8D JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0xC83 JUMPI PUSH2 0xC82 PUSH2 0x1A45 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xCB6 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0xCAC JUMPI PUSH2 0xCAB PUSH2 0x1A45 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xCDB JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0xCD1 JUMPI PUSH2 0xCD0 PUSH2 0x1A45 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xCFE JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0xCF4 JUMPI PUSH2 0xCF3 PUSH2 0x1A45 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0xD0D JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0xD51 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xD76 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDE6 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0xDEF JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE84 DUP3 PUSH2 0xE59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE94 DUP2 PUSH2 0xE79 JUMP JUMPDEST DUP2 EQ PUSH2 0xE9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB1 DUP2 PUSH2 0xE8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED2 JUMPI PUSH2 0xED1 PUSH2 0xEB7 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xF00 JUMPI PUSH2 0xEFF PUSH2 0xEDB JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF1D JUMPI PUSH2 0xF1C PUSH2 0xEE0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xF39 JUMPI PUSH2 0xF38 PUSH2 0xEE5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF5C JUMPI PUSH2 0xF5B PUSH2 0xE4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF6A DUP9 DUP3 DUP10 ADD PUSH2 0xEA2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xF7B DUP9 DUP3 DUP10 ADD PUSH2 0xEA2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xF8C DUP9 DUP3 DUP10 ADD PUSH2 0xEBC JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFAD JUMPI PUSH2 0xFAC PUSH2 0xE54 JUMP JUMPDEST JUMPDEST PUSH2 0xFB9 DUP9 DUP3 DUP10 ADD PUSH2 0xEEA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFDF JUMPI PUSH2 0xFDE PUSH2 0xE4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFED DUP6 DUP3 DUP7 ADD PUSH2 0xEA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFFE DUP6 DUP3 DUP7 ADD PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1011 DUP2 PUSH2 0xE79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102A DUP2 PUSH2 0x1017 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1046 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1008 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1059 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1008 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x106C PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1021 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10AC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D4 DUP3 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x10DE DUP2 DUP6 PUSH2 0x107D JUMP JUMPDEST SWAP4 POP PUSH2 0x10EE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x108E JUMP JUMPDEST PUSH2 0x10F7 DUP2 PUSH2 0x10B8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1117 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1030 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1129 DUP2 DUP5 PUSH2 0x10C9 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x114C DUP2 DUP5 PUSH2 0x10C9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x115D DUP2 PUSH2 0x1017 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1178 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1154 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1187 DUP2 PUSH2 0x1017 JUMP JUMPDEST DUP2 EQ PUSH2 0x1192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11A4 DUP2 PUSH2 0x117E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11C0 JUMPI PUSH2 0x11BF PUSH2 0xE4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11CE DUP5 DUP3 DUP6 ADD PUSH2 0x1195 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792073616665277320776974682061207468726573686F6C64206F6620 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E652061726520737570706F72746564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1233 PUSH1 0x31 DUP4 PUSH2 0x107D JUMP JUMPDEST SWAP2 POP PUSH2 0x123E DUP3 PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1262 DUP2 PUSH2 0x1226 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x127F JUMPI PUSH2 0x127E PUSH2 0xE4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x128D DUP5 DUP3 DUP6 ADD PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x129F DUP2 PUSH2 0xE79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1296 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D5 DUP2 PUSH2 0x12C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x12E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12F2 DUP2 PUSH2 0x12CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130E JUMPI PUSH2 0x130D PUSH2 0xE4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x131C DUP5 DUP3 DUP6 ADD PUSH2 0x12E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E6572206973206E6F7420612073616665206F776E657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x135B PUSH1 0x19 DUP4 PUSH2 0x107D JUMP JUMPDEST SWAP2 POP PUSH2 0x1366 DUP3 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x138A DUP2 PUSH2 0x134E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13CD PUSH2 0x13C8 PUSH2 0x13C3 DUP5 PUSH2 0x1391 JUMP JUMPDEST PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x139B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13DD DUP2 PUSH2 0x13B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13F8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1296 JUMP JUMPDEST PUSH2 0x1405 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1296 JUMP JUMPDEST PUSH2 0x1412 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x13D4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143F PUSH2 0x143A PUSH2 0x1435 DUP5 PUSH2 0x141A JUMP JUMPDEST PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x1017 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144F DUP2 PUSH2 0x1424 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x147C DUP3 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x1486 DUP2 DUP6 PUSH2 0x1460 JUMP JUMPDEST SWAP4 POP PUSH2 0x1496 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x108E JUMP JUMPDEST PUSH2 0x149F DUP2 PUSH2 0x10B8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x14EA JUMPI PUSH2 0x14E9 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x14FB DUP3 PUSH2 0x14D9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150B DUP3 PUSH2 0x14ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151B DUP2 PUSH2 0x1500 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1536 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1296 JUMP JUMPDEST PUSH2 0x1543 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1446 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1555 DUP2 DUP6 PUSH2 0x1471 JUMP JUMPDEST SWAP1 POP PUSH2 0x1564 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1512 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15A7 DUP3 PUSH2 0x1017 JUMP JUMPDEST SWAP2 POP PUSH2 0x15B2 DUP4 PUSH2 0x1017 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x15CA JUMPI PUSH2 0x15C9 PUSH2 0x156D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1617 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x162A JUMPI PUSH2 0x1629 PUSH2 0x15D0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1666 PUSH1 0x11 DUP4 PUSH2 0x107D JUMP JUMPDEST SWAP2 POP PUSH2 0x1671 DUP3 PUSH2 0x1630 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1695 DUP2 PUSH2 0x1659 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265717565737420697320746F6F206F6C640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D2 PUSH1 0x12 DUP4 PUSH2 0x107D JUMP JUMPDEST SWAP2 POP PUSH2 0x16DD DUP3 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1701 DUP2 PUSH2 0x16C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x1735 DUP2 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x173F DUP2 DUP7 PUSH2 0x1708 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x175A JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x176F JUMPI PUSH2 0x17A2 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0x1778 DUP6 PUSH2 0x1713 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x179A JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x177B JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA0A4D653A200000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E1 PUSH1 0x6 DUP4 PUSH2 0x1708 JUMP JUMPDEST SWAP2 POP PUSH2 0x17EC DUP3 PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1802 DUP3 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x180C DUP2 DUP6 PUSH2 0x1708 JUMP JUMPDEST SWAP4 POP PUSH2 0x181C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x108E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA4465766963653A200000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x185E PUSH1 0x9 DUP4 PUSH2 0x1708 JUMP JUMPDEST SWAP2 POP PUSH2 0x1869 DUP3 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA4973737565642061743A200000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AA PUSH1 0xC DUP4 PUSH2 0x1708 JUMP JUMPDEST SWAP2 POP PUSH2 0x18B5 DUP3 PUSH2 0x1874 JUMP JUMPDEST PUSH1 0xC DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18CC DUP3 DUP8 PUSH2 0x1728 JUMP JUMPDEST SWAP2 POP PUSH2 0x18D7 DUP3 PUSH2 0x17D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x18E3 DUP3 DUP7 PUSH2 0x17F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x18EE DUP3 PUSH2 0x1851 JUMP JUMPDEST SWAP2 POP PUSH2 0x18FA DUP3 DUP6 PUSH2 0x17F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1905 DUP3 PUSH2 0x189D JUMP JUMPDEST SWAP2 POP PUSH2 0x1911 DUP3 DUP5 PUSH2 0x17F7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x195C DUP3 PUSH2 0x10B8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x197B JUMPI PUSH2 0x197A PUSH2 0x1924 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198E PUSH2 0xE45 JUMP JUMPDEST SWAP1 POP PUSH2 0x199A DUP3 DUP3 PUSH2 0x1953 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19AE DUP2 PUSH2 0x117E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19CA JUMPI PUSH2 0x19C9 PUSH2 0x191F JUMP JUMPDEST JUMPDEST PUSH2 0x19D4 PUSH1 0x60 PUSH2 0x1984 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x19E4 DUP5 DUP3 DUP6 ADD PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x19F8 DUP5 DUP3 DUP6 ADD PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1A0C DUP5 DUP3 DUP6 ADD PUSH2 0x199F JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A2E JUMPI PUSH2 0x1A2D PUSH2 0xE4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A3C DUP5 DUP3 DUP6 ADD PUSH2 0x19B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAA PUSH1 0x1A DUP4 PUSH2 0x1708 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB5 DUP3 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x1A DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD6 DUP3 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x1AE0 DUP2 DUP6 PUSH2 0x1AC0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AF0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x108E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B07 DUP3 PUSH2 0x1A9D JUMP JUMPDEST SWAP2 POP PUSH2 0x1B13 DUP3 DUP6 PUSH2 0x17F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1F DUP3 DUP5 PUSH2 0x1ACB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B61 PUSH1 0x18 DUP4 PUSH2 0x107D JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6C DUP3 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B90 DUP2 PUSH2 0x1B54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BCD PUSH1 0x1F DUP4 PUSH2 0x107D JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD8 DUP3 PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BFC DUP2 PUSH2 0x1BC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5F PUSH1 0x22 DUP4 PUSH2 0x107D JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6A DUP3 PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C8E DUP2 PUSH2 0x1C52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA0 DUP3 PUSH2 0x1017 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CAB DUP4 PUSH2 0x1017 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1CB9 DUP2 PUSH2 0x1017 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1CD0 JUMPI PUSH2 0x1CCF PUSH2 0x156D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE2 DUP3 PUSH2 0x1017 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CED DUP4 PUSH2 0x1017 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D05 JUMPI PUSH2 0x1D04 PUSH2 0x156D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D45 DUP3 PUSH2 0x1017 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1D58 JUMPI PUSH2 0x1D57 PUSH2 0x156D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D99 PUSH1 0x20 DUP4 PUSH2 0x107D JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA4 DUP3 PUSH2 0x1D63 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DC8 DUP2 PUSH2 0x1D8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DE2 DUP2 PUSH2 0x1DCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1DF1 DUP2 PUSH2 0x139B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E0C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1DD9 JUMP JUMPDEST PUSH2 0x1E19 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DE8 JUMP JUMPDEST PUSH2 0x1E26 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1DD9 JUMP JUMPDEST PUSH2 0x1E33 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1DD9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x64223F3A15A76FDF02 PUSH21 0x8F97A467235CDCF0C420AEA8D5C43D8B1860AE1CD7 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"133:1041:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;281:890;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1287:340:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;346:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;376:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;281:890:4;462:32;475:7;484:9;;462:12;:32::i;:::-;454:41;;;;;;506:15;535:5;506:35;;565:17;585:4;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;565:39;;656:1;643:9;:14;618:122;;;;;;;;;;;;:::i;:::-;;;;;;;;;762:4;:12;;;775:7;:13;;;;;;;;;;:::i;:::-;762:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;754:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;551:279;840:17;949:13;976:7;:14;;;;;;;;;;:::i;:::-;1004:1;860:155;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;840:175;;1037:5;1026:43;;;1083:5;1102:1;1117:4;1135:19;1026:138;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;444:727;;281:890;;;;;:::o;1287:340:6:-;1389:27;;:::i;:::-;1418:13;1453:118;;;;;;;;1487:5;1453:118;;;;;;1514:6;1453:118;;;;;;1559:1;1544:12;:16;;;;:::i;:::-;1453:118;;;1443:128;;1589:7;1598:21;1611:7;1598:12;:21::i;:::-;1581:39;;;;1287:340;;;;;:::o;346:23::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;376:33::-;;;;:::o;828:453::-;952:4;968:15;986:21;999:7;986:12;:21::i;:::-;968:39;;1017:14;1034:33;1048:7;1057:9;;1034:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:33::i;:::-;1017:50;;1095:7;:13;;;;;;;;;;:::i;:::-;1085:23;;:6;:23;;;1077:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1196:13;;1181:12;:28;;;;:::i;:::-;1161:7;:16;;;:48;;1140:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;1270:4;1263:11;;;;828:453;;;;;:::o;1852:408::-;1940:13;2009:9;2056:34;2076:7;:13;;;2056:19;:34::i;:::-;2130:35;2150:7;:14;;;2130:19;:35::i;:::-;2208:34;2225:7;:16;;;2208;:34::i;:::-;1979:273;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1965:288;;1852:408;;;:::o;2266:181::-;2356:7;2382:58;2417:21;2430:7;2417:21;;;;;;;;;;:::i;:::-;:12;:21::i;:::-;2382:28;:58::i;:::-;2375:65;;2266:181;;;:::o;3661:227:1:-;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;3872:9;3865:16;;;;3661:227;;;;:::o;2102:149:0:-;2160:13;2192:52;2220:4;2204:22;;311:2;2192:52;;:11;:52::i;:::-;2185:59;;2102:149;;;:::o;415:696::-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;788:280;1032:21;788:280;1088:6;1081:13;;;;;415:696;;;:::o;7806:196:1:-;7877:7;7964:26;7981:1;:8;7964:16;:26::i;:::-;7992:1;7913:81;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7903:92;;;;;;7896:99;;7806:196;;;:::o;2145:730::-;2226:7;2235:12;2283:2;2263:9;:16;:22;2259:610;;2301:9;2324;2347:7;2599:4;2588:9;2584:20;2578:27;2573:32;;2648:4;2637:9;2633:20;2627:27;2622:32;;2705:4;2694:9;2690:20;2684:27;2681:1;2676:36;2671:41;;2746:25;2757:4;2763:1;2766;2769;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;2818:1;2822:35;2802:56;;;;2145:730;;;;;;:::o;570:511::-;647:20;638:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;634:441;683:7;634:441;743:29;734:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;730:345;;788:34;;;;;;;;;;:::i;:::-;;;;;;;;730:345;852:35;843:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;839:236;;903:41;;;;;;;;;;:::i;:::-;;;;;;;;839:236;974:30;965:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;961:114;;1020:44;;;;;;;;;;:::i;:::-;;;;;;;;961:114;570:511;;:::o;1513:437:0:-;1588:13;1613:19;1658:1;1649:6;1645:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:47;;1670:15;:6;1677:1;1670:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1695;:6;1702:1;1695:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1725:9;1750:1;1741:6;1737:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;1791:8;1808:3;1800:5;:11;1791:21;;;;;;;:::i;:::-;;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;1836:1;1826:11;;;;;1760:3;;;;:::i;:::-;;;1720:128;;;;1874:1;1865:5;:10;1857:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1936:6;1922:21;;;1513:437;;;;:::o;9889:890:2:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;5069:1494:1:-;5195:7;5204:12;6119:66;6114:1;6106:10;;:79;6102:161;;;6217:1;6221:30;6201:51;;;;;;6102:161;6357:14;6374:24;6384:4;6390:1;6393;6396;6374:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6357:41;;6430:1;6412:20;;:6;:20;;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;6535:20;6519:37;;;;;5069:1494;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:117::-;950:1;947;940:12;1010:236;1088:5;1129:2;1120:6;1115:3;1111:16;1107:25;1104:112;;;1135:79;;:::i;:::-;1104:112;1234:6;1225:15;;1010:236;;;;:::o;1252:117::-;1361:1;1358;1351:12;1375:117;1484:1;1481;1474:12;1498:117;1607:1;1604;1597:12;1634:552;1691:8;1701:6;1751:3;1744:4;1736:6;1732:17;1728:27;1718:122;;1759:79;;:::i;:::-;1718:122;1872:6;1859:20;1849:30;;1902:18;1894:6;1891:30;1888:117;;;1924:79;;:::i;:::-;1888:117;2038:4;2030:6;2026:17;2014:29;;2092:3;2084:4;2076:6;2072:17;2062:8;2058:32;2055:41;2052:128;;;2099:79;;:::i;:::-;2052:128;1634:552;;;;;:::o;2192:1028::-;2321:6;2329;2337;2345;2353;2402:3;2390:9;2381:7;2377:23;2373:33;2370:120;;;2409:79;;:::i;:::-;2370:120;2529:1;2554:53;2599:7;2590:6;2579:9;2575:22;2554:53;:::i;:::-;2544:63;;2500:117;2656:2;2682:53;2727:7;2718:6;2707:9;2703:22;2682:53;:::i;:::-;2672:63;;2627:118;2784:2;2810:85;2887:7;2878:6;2867:9;2863:22;2810:85;:::i;:::-;2800:95;;2755:150;2972:3;2961:9;2957:19;2944:33;3004:18;2996:6;2993:30;2990:117;;;3026:79;;:::i;:::-;2990:117;3139:64;3195:7;3186:6;3175:9;3171:22;3139:64;:::i;:::-;3121:82;;;;2915:298;2192:1028;;;;;;;;:::o;3226:474::-;3294:6;3302;3351:2;3339:9;3330:7;3326:23;3322:32;3319:119;;;3357:79;;:::i;:::-;3319:119;3477:1;3502:53;3547:7;3538:6;3527:9;3523:22;3502:53;:::i;:::-;3492:63;;3448:117;3604:2;3630:53;3675:7;3666:6;3655:9;3651:22;3630:53;:::i;:::-;3620:63;;3575:118;3226:474;;;;;:::o;3706:108::-;3783:24;3801:5;3783:24;:::i;:::-;3778:3;3771:37;3706:108;;:::o;3820:77::-;3857:7;3886:5;3875:16;;3820:77;;;:::o;3903:108::-;3980:24;3998:5;3980:24;:::i;:::-;3975:3;3968:37;3903:108;;:::o;4105:698::-;4262:4;4257:3;4253:14;4350:4;4343:5;4339:16;4333:23;4369:63;4426:4;4421:3;4417:14;4403:12;4369:63;:::i;:::-;4277:165;4526:4;4519:5;4515:16;4509:23;4545:63;4602:4;4597:3;4593:14;4579:12;4545:63;:::i;:::-;4452:166;4704:4;4697:5;4693:16;4687:23;4723:63;4780:4;4775:3;4771:14;4757:12;4723:63;:::i;:::-;4628:168;4231:572;4105:698;;:::o;4809:99::-;4861:6;4895:5;4889:12;4879:22;;4809:99;;;:::o;4914:169::-;4998:11;5032:6;5027:3;5020:19;5072:4;5067:3;5063:14;5048:29;;4914:169;;;;:::o;5089:246::-;5170:1;5180:113;5194:6;5191:1;5188:13;5180:113;;;5279:1;5274:3;5270:11;5264:18;5260:1;5255:3;5251:11;5244:39;5216:2;5213:1;5209:10;5204:15;;5180:113;;;5327:1;5318:6;5313:3;5309:16;5302:27;5151:184;5089:246;;;:::o;5341:102::-;5382:6;5433:2;5429:7;5424:2;5417:5;5413:14;5409:28;5399:38;;5341:102;;;:::o;5449:377::-;5537:3;5565:39;5598:5;5565:39;:::i;:::-;5620:71;5684:6;5679:3;5620:71;:::i;:::-;5613:78;;5700:65;5758:6;5753:3;5746:4;5739:5;5735:16;5700:65;:::i;:::-;5790:29;5812:6;5790:29;:::i;:::-;5785:3;5781:39;5774:46;;5541:285;5449:377;;;;:::o;5832:544::-;6033:4;6071:3;6060:9;6056:19;6048:27;;6085:131;6213:1;6202:9;6198:17;6189:6;6085:131;:::i;:::-;6263:9;6257:4;6253:20;6248:2;6237:9;6233:18;6226:48;6291:78;6364:4;6355:6;6291:78;:::i;:::-;6283:86;;5832:544;;;;;:::o;6382:313::-;6495:4;6533:2;6522:9;6518:18;6510:26;;6582:9;6576:4;6572:20;6568:1;6557:9;6553:17;6546:47;6610:78;6683:4;6674:6;6610:78;:::i;:::-;6602:86;;6382:313;;;;:::o;6701:118::-;6788:24;6806:5;6788:24;:::i;:::-;6783:3;6776:37;6701:118;;:::o;6825:222::-;6918:4;6956:2;6945:9;6941:18;6933:26;;6969:71;7037:1;7026:9;7022:17;7013:6;6969:71;:::i;:::-;6825:222;;;;:::o;7053:122::-;7126:24;7144:5;7126:24;:::i;:::-;7119:5;7116:35;7106:63;;7165:1;7162;7155:12;7106:63;7053:122;:::o;7181:143::-;7238:5;7269:6;7263:13;7254:22;;7285:33;7312:5;7285:33;:::i;:::-;7181:143;;;;:::o;7330:351::-;7400:6;7449:2;7437:9;7428:7;7424:23;7420:32;7417:119;;;7455:79;;:::i;:::-;7417:119;7575:1;7600:64;7656:7;7647:6;7636:9;7632:22;7600:64;:::i;:::-;7590:74;;7546:128;7330:351;;;;:::o;7687:236::-;7827:34;7823:1;7815:6;7811:14;7804:58;7896:19;7891:2;7883:6;7879:15;7872:44;7687:236;:::o;7929:366::-;8071:3;8092:67;8156:2;8151:3;8092:67;:::i;:::-;8085:74;;8168:93;8257:3;8168:93;:::i;:::-;8286:2;8281:3;8277:12;8270:19;;7929:366;;;:::o;8301:419::-;8467:4;8505:2;8494:9;8490:18;8482:26;;8554:9;8548:4;8544:20;8540:1;8529:9;8525:17;8518:47;8582:131;8708:4;8582:131;:::i;:::-;8574:139;;8301:419;;;:::o;8726:329::-;8785:6;8834:2;8822:9;8813:7;8809:23;8805:32;8802:119;;;8840:79;;:::i;:::-;8802:119;8960:1;8985:53;9030:7;9021:6;9010:9;9006:22;8985:53;:::i;:::-;8975:63;;8931:117;8726:329;;;;:::o;9061:118::-;9148:24;9166:5;9148:24;:::i;:::-;9143:3;9136:37;9061:118;;:::o;9185:222::-;9278:4;9316:2;9305:9;9301:18;9293:26;;9329:71;9397:1;9386:9;9382:17;9373:6;9329:71;:::i;:::-;9185:222;;;;:::o;9413:90::-;9447:7;9490:5;9483:13;9476:21;9465:32;;9413:90;;;:::o;9509:116::-;9579:21;9594:5;9579:21;:::i;:::-;9572:5;9569:32;9559:60;;9615:1;9612;9605:12;9559:60;9509:116;:::o;9631:137::-;9685:5;9716:6;9710:13;9701:22;;9732:30;9756:5;9732:30;:::i;:::-;9631:137;;;;:::o;9774:345::-;9841:6;9890:2;9878:9;9869:7;9865:23;9861:32;9858:119;;;9896:79;;:::i;:::-;9858:119;10016:1;10041:61;10094:7;10085:6;10074:9;10070:22;10041:61;:::i;:::-;10031:71;;9987:125;9774:345;;;;:::o;10125:175::-;10265:27;10261:1;10253:6;10249:14;10242:51;10125:175;:::o;10306:366::-;10448:3;10469:67;10533:2;10528:3;10469:67;:::i;:::-;10462:74;;10545:93;10634:3;10545:93;:::i;:::-;10663:2;10658:3;10654:12;10647:19;;10306:366;;;:::o;10678:419::-;10844:4;10882:2;10871:9;10867:18;10859:26;;10931:9;10925:4;10921:20;10917:1;10906:9;10902:17;10895:47;10959:131;11085:4;10959:131;:::i;:::-;10951:139;;10678:419;;;:::o;11103:85::-;11148:7;11177:5;11166:16;;11103:85;;;:::o;11194:86::-;11229:7;11269:4;11262:5;11258:16;11247:27;;11194:86;;;:::o;11286:60::-;11314:3;11335:5;11328:12;;11286:60;;;:::o;11352:154::-;11408:9;11441:59;11457:42;11466:32;11492:5;11466:32;:::i;:::-;11457:42;:::i;:::-;11441:59;:::i;:::-;11428:72;;11352:154;;;:::o;11512:143::-;11605:43;11642:5;11605:43;:::i;:::-;11600:3;11593:56;11512:143;;:::o;11661:454::-;11816:4;11854:2;11843:9;11839:18;11831:26;;11867:71;11935:1;11924:9;11920:17;11911:6;11867:71;:::i;:::-;11948:72;12016:2;12005:9;12001:18;11992:6;11948:72;:::i;:::-;12030:78;12104:2;12093:9;12089:18;12080:6;12030:78;:::i;:::-;11661:454;;;;;;:::o;12121:85::-;12166:7;12195:5;12184:16;;12121:85;;;:::o;12212:158::-;12270:9;12303:61;12321:42;12330:32;12356:5;12330:32;:::i;:::-;12321:42;:::i;:::-;12303:61;:::i;:::-;12290:74;;12212:158;;;:::o;12376:147::-;12471:45;12510:5;12471:45;:::i;:::-;12466:3;12459:58;12376:147;;:::o;12529:98::-;12580:6;12614:5;12608:12;12598:22;;12529:98;;;:::o;12633:168::-;12716:11;12750:6;12745:3;12738:19;12790:4;12785:3;12781:14;12766:29;;12633:168;;;;:::o;12807:373::-;12893:3;12921:38;12953:5;12921:38;:::i;:::-;12975:70;13038:6;13033:3;12975:70;:::i;:::-;12968:77;;13054:65;13112:6;13107:3;13100:4;13093:5;13089:16;13054:65;:::i;:::-;13144:29;13166:6;13144:29;:::i;:::-;13139:3;13135:39;13128:46;;12897:283;12807:373;;;;:::o;13186:180::-;13234:77;13231:1;13224:88;13331:4;13328:1;13321:15;13355:4;13352:1;13345:15;13372:119;13459:1;13452:5;13449:12;13439:46;;13465:18;;:::i;:::-;13439:46;13372:119;:::o;13497:139::-;13548:7;13577:5;13566:16;;13583:47;13624:5;13583:47;:::i;:::-;13497:139;;;:::o;13642:::-;13704:9;13737:38;13769:5;13737:38;:::i;:::-;13724:51;;13642:139;;;:::o;13787:155::-;13886:49;13929:5;13886:49;:::i;:::-;13881:3;13874:62;13787:155;;:::o;13948:680::-;14163:4;14201:3;14190:9;14186:19;14178:27;;14215:71;14283:1;14272:9;14268:17;14259:6;14215:71;:::i;:::-;14296:80;14372:2;14361:9;14357:18;14348:6;14296:80;:::i;:::-;14423:9;14417:4;14413:20;14408:2;14397:9;14393:18;14386:48;14451:76;14522:4;14513:6;14451:76;:::i;:::-;14443:84;;14537;14617:2;14606:9;14602:18;14593:6;14537:84;:::i;:::-;13948:680;;;;;;;:::o;14634:180::-;14682:77;14679:1;14672:88;14779:4;14776:1;14769:15;14803:4;14800:1;14793:15;14820:194;14860:4;14880:20;14898:1;14880:20;:::i;:::-;14875:25;;14914:20;14932:1;14914:20;:::i;:::-;14909:25;;14958:1;14955;14951:9;14943:17;;14982:1;14976:4;14973:11;14970:37;;;14987:18;;:::i;:::-;14970:37;14820:194;;;;:::o;15020:180::-;15068:77;15065:1;15058:88;15165:4;15162:1;15155:15;15189:4;15186:1;15179:15;15206:320;15250:6;15287:1;15281:4;15277:12;15267:22;;15334:1;15328:4;15324:12;15355:18;15345:81;;15411:4;15403:6;15399:17;15389:27;;15345:81;15473:2;15465:6;15462:14;15442:18;15439:38;15436:84;;15492:18;;:::i;:::-;15436:84;15257:269;15206:320;;;:::o;15532:167::-;15672:19;15668:1;15660:6;15656:14;15649:43;15532:167;:::o;15705:366::-;15847:3;15868:67;15932:2;15927:3;15868:67;:::i;:::-;15861:74;;15944:93;16033:3;15944:93;:::i;:::-;16062:2;16057:3;16053:12;16046:19;;15705:366;;;:::o;16077:419::-;16243:4;16281:2;16270:9;16266:18;16258:26;;16330:9;16324:4;16320:20;16316:1;16305:9;16301:17;16294:47;16358:131;16484:4;16358:131;:::i;:::-;16350:139;;16077:419;;;:::o;16502:168::-;16642:20;16638:1;16630:6;16626:14;16619:44;16502:168;:::o;16676:366::-;16818:3;16839:67;16903:2;16898:3;16839:67;:::i;:::-;16832:74;;16915:93;17004:3;16915:93;:::i;:::-;17033:2;17028:3;17024:12;17017:19;;16676:366;;;:::o;17048:419::-;17214:4;17252:2;17241:9;17237:18;17229:26;;17301:9;17295:4;17291:20;17287:1;17276:9;17272:17;17265:47;17329:131;17455:4;17329:131;:::i;:::-;17321:139;;17048:419;;;:::o;17473:148::-;17575:11;17612:3;17597:18;;17473:148;;;;:::o;17627:141::-;17676:4;17699:3;17691:11;;17722:3;17719:1;17712:14;17756:4;17753:1;17743:18;17735:26;;17627:141;;;:::o;17798:874::-;17901:3;17938:5;17932:12;17967:36;17993:9;17967:36;:::i;:::-;18019:89;18101:6;18096:3;18019:89;:::i;:::-;18012:96;;18139:1;18128:9;18124:17;18155:1;18150:166;;;;18330:1;18325:341;;;;18117:549;;18150:166;18234:4;18230:9;18219;18215:25;18210:3;18203:38;18296:6;18289:14;18282:22;18274:6;18270:35;18265:3;18261:45;18254:52;;18150:166;;18325:341;18392:38;18424:5;18392:38;:::i;:::-;18452:1;18466:154;18480:6;18477:1;18474:13;18466:154;;;18554:7;18548:14;18544:1;18539:3;18535:11;18528:35;18604:1;18595:7;18591:15;18580:26;;18502:4;18499:1;18495:12;18490:17;;18466:154;;;18649:6;18644:3;18640:16;18633:23;;18332:334;;18117:549;;17905:767;;17798:874;;;;:::o;18678:214::-;18818:66;18814:1;18806:6;18802:14;18795:90;18678:214;:::o;18898:400::-;19058:3;19079:84;19161:1;19156:3;19079:84;:::i;:::-;19072:91;;19172:93;19261:3;19172:93;:::i;:::-;19290:1;19285:3;19281:11;19274:18;;18898:400;;;:::o;19304:390::-;19410:3;19438:39;19471:5;19438:39;:::i;:::-;19493:89;19575:6;19570:3;19493:89;:::i;:::-;19486:96;;19591:65;19649:6;19644:3;19637:4;19630:5;19626:16;19591:65;:::i;:::-;19681:6;19676:3;19672:16;19665:23;;19414:280;19304:390;;;;:::o;19700:214::-;19840:66;19836:1;19828:6;19824:14;19817:90;19700:214;:::o;19920:400::-;20080:3;20101:84;20183:1;20178:3;20101:84;:::i;:::-;20094:91;;20194:93;20283:3;20194:93;:::i;:::-;20312:1;20307:3;20303:11;20296:18;;19920:400;;;:::o;20326:214::-;20466:66;20462:1;20454:6;20450:14;20443:90;20326:214;:::o;20546:402::-;20706:3;20727:85;20809:2;20804:3;20727:85;:::i;:::-;20720:92;;20821:93;20910:3;20821:93;:::i;:::-;20939:2;20934:3;20930:12;20923:19;;20546:402;;;:::o;20954:1547::-;21530:3;21552:92;21640:3;21631:6;21552:92;:::i;:::-;21545:99;;21661:148;21805:3;21661:148;:::i;:::-;21654:155;;21826:95;21917:3;21908:6;21826:95;:::i;:::-;21819:102;;21938:148;22082:3;21938:148;:::i;:::-;21931:155;;22103:95;22194:3;22185:6;22103:95;:::i;:::-;22096:102;;22215:148;22359:3;22215:148;:::i;:::-;22208:155;;22380:95;22471:3;22462:6;22380:95;:::i;:::-;22373:102;;22492:3;22485:10;;20954:1547;;;;;;;:::o;22507:117::-;22616:1;22613;22606:12;22630:180;22678:77;22675:1;22668:88;22775:4;22772:1;22765:15;22799:4;22796:1;22789:15;22816:281;22899:27;22921:4;22899:27;:::i;:::-;22891:6;22887:40;23029:6;23017:10;23014:22;22993:18;22981:10;22978:34;22975:62;22972:88;;;23040:18;;:::i;:::-;22972:88;23080:10;23076:2;23069:22;22859:238;22816:281;;:::o;23103:129::-;23137:6;23164:20;;:::i;:::-;23154:30;;23193:33;23221:4;23213:6;23193:33;:::i;:::-;23103:129;;;:::o;23361:139::-;23407:5;23445:6;23432:20;23423:29;;23461:33;23488:5;23461:33;:::i;:::-;23361:139;;;;:::o;23552:747::-;23631:5;23675:4;23663:9;23658:3;23654:19;23650:30;23647:117;;;23683:79;;:::i;:::-;23647:117;23782:21;23798:4;23782:21;:::i;:::-;23773:30;;23863:1;23903:49;23948:3;23939:6;23928:9;23924:22;23903:49;:::i;:::-;23896:4;23889:5;23885:16;23878:75;23813:151;24025:2;24066:49;24111:3;24102:6;24091:9;24087:22;24066:49;:::i;:::-;24059:4;24052:5;24048:16;24041:75;23974:153;24190:2;24231:49;24276:3;24267:6;24256:9;24252:22;24231:49;:::i;:::-;24224:4;24217:5;24213:16;24206:75;24137:155;23552:747;;;;:::o;24305:389::-;24394:6;24443:2;24431:9;24422:7;24418:23;24414:32;24411:119;;;24449:79;;:::i;:::-;24411:119;24569:1;24594:83;24669:7;24660:6;24649:9;24645:22;24594:83;:::i;:::-;24584:93;;24540:147;24305:389;;;;:::o;24700:180::-;24748:77;24745:1;24738:88;24845:4;24842:1;24835:15;24869:4;24866:1;24859:15;24886:214;25026:66;25022:1;25014:6;25010:14;25003:90;24886:214;:::o;25106:402::-;25266:3;25287:85;25369:2;25364:3;25287:85;:::i;:::-;25280:92;;25381:93;25470:3;25381:93;:::i;:::-;25499:2;25494:3;25490:12;25483:19;;25106:402;;;:::o;25514:147::-;25615:11;25652:3;25637:18;;25514:147;;;;:::o;25667:386::-;25771:3;25799:38;25831:5;25799:38;:::i;:::-;25853:88;25934:6;25929:3;25853:88;:::i;:::-;25846:95;;25950:65;26008:6;26003:3;25996:4;25989:5;25985:16;25950:65;:::i;:::-;26040:6;26035:3;26031:16;26024:23;;25775:278;25667:386;;;;:::o;26059:697::-;26338:3;26360:148;26504:3;26360:148;:::i;:::-;26353:155;;26525:95;26616:3;26607:6;26525:95;:::i;:::-;26518:102;;26637:93;26726:3;26717:6;26637:93;:::i;:::-;26630:100;;26747:3;26740:10;;26059:697;;;;;:::o;26762:174::-;26902:26;26898:1;26890:6;26886:14;26879:50;26762:174;:::o;26942:366::-;27084:3;27105:67;27169:2;27164:3;27105:67;:::i;:::-;27098:74;;27181:93;27270:3;27181:93;:::i;:::-;27299:2;27294:3;27290:12;27283:19;;26942:366;;;:::o;27314:419::-;27480:4;27518:2;27507:9;27503:18;27495:26;;27567:9;27561:4;27557:20;27553:1;27542:9;27538:17;27531:47;27595:131;27721:4;27595:131;:::i;:::-;27587:139;;27314:419;;;:::o;27739:181::-;27879:33;27875:1;27867:6;27863:14;27856:57;27739:181;:::o;27926:366::-;28068:3;28089:67;28153:2;28148:3;28089:67;:::i;:::-;28082:74;;28165:93;28254:3;28165:93;:::i;:::-;28283:2;28278:3;28274:12;28267:19;;27926:366;;;:::o;28298:419::-;28464:4;28502:2;28491:9;28487:18;28479:26;;28551:9;28545:4;28541:20;28537:1;28526:9;28522:17;28515:47;28579:131;28705:4;28579:131;:::i;:::-;28571:139;;28298:419;;;:::o;28723:221::-;28863:34;28859:1;28851:6;28847:14;28840:58;28932:4;28927:2;28919:6;28915:15;28908:29;28723:221;:::o;28950:366::-;29092:3;29113:67;29177:2;29172:3;29113:67;:::i;:::-;29106:74;;29189:93;29278:3;29189:93;:::i;:::-;29307:2;29302:3;29298:12;29291:19;;28950:366;;;:::o;29322:419::-;29488:4;29526:2;29515:9;29511:18;29503:26;;29575:9;29569:4;29565:20;29561:1;29550:9;29546:17;29539:47;29603:131;29729:4;29603:131;:::i;:::-;29595:139;;29322:419;;;:::o;29747:410::-;29787:7;29810:20;29828:1;29810:20;:::i;:::-;29805:25;;29844:20;29862:1;29844:20;:::i;:::-;29839:25;;29899:1;29896;29892:9;29921:30;29939:11;29921:30;:::i;:::-;29910:41;;30100:1;30091:7;30087:15;30084:1;30081:22;30061:1;30054:9;30034:83;30011:139;;30130:18;;:::i;:::-;30011:139;29795:362;29747:410;;;;:::o;30163:191::-;30203:3;30222:20;30240:1;30222:20;:::i;:::-;30217:25;;30256:20;30274:1;30256:20;:::i;:::-;30251:25;;30299:1;30296;30292:9;30285:16;;30320:3;30317:1;30314:10;30311:36;;;30327:18;;:::i;:::-;30311:36;30163:191;;;;:::o;30360:180::-;30408:77;30405:1;30398:88;30505:4;30502:1;30495:15;30529:4;30526:1;30519:15;30546:171;30585:3;30608:24;30626:5;30608:24;:::i;:::-;30599:33;;30654:4;30647:5;30644:15;30641:41;;30662:18;;:::i;:::-;30641:41;30709:1;30702:5;30698:13;30691:20;;30546:171;;;:::o;30723:182::-;30863:34;30859:1;30851:6;30847:14;30840:58;30723:182;:::o;30911:366::-;31053:3;31074:67;31138:2;31133:3;31074:67;:::i;:::-;31067:74;;31150:93;31239:3;31150:93;:::i;:::-;31268:2;31263:3;31259:12;31252:19;;30911:366;;;:::o;31283:419::-;31449:4;31487:2;31476:9;31472:18;31464:26;;31536:9;31530:4;31526:20;31522:1;31511:9;31507:17;31500:47;31564:131;31690:4;31564:131;:::i;:::-;31556:139;;31283:419;;;:::o;31708:77::-;31745:7;31774:5;31763:16;;31708:77;;;:::o;31791:118::-;31878:24;31896:5;31878:24;:::i;:::-;31873:3;31866:37;31791:118;;:::o;31915:112::-;31998:22;32014:5;31998:22;:::i;:::-;31993:3;31986:35;31915:112;;:::o;32033:545::-;32206:4;32244:3;32233:9;32229:19;32221:27;;32258:71;32326:1;32315:9;32311:17;32302:6;32258:71;:::i;:::-;32339:68;32403:2;32392:9;32388:18;32379:6;32339:68;:::i;:::-;32417:72;32485:2;32474:9;32470:18;32461:6;32417:72;:::i;:::-;32499;32567:2;32556:9;32552:18;32543:6;32499:72;:::i;:::-;32033:545;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1558800","executionCost":"infinite","totalCost":"infinite"},"external":{"STATEMENT()":"infinite","createTokenRequest(address,address)":"infinite","lengthOfToken()":"2473","removeOwner(address,address,(address,address,uint256),bytes)":"infinite"}},"methodIdentifiers":{"STATEMENT()":"bebc479c","createTokenRequest(address,address)":"b6ad16a8","lengthOfToken()":"cb2e6043","removeOwner(address,address,(address,address,uint256),bytes)":"142af66b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"STATEMENT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"device\",\"type\":\"address\"}],\"name\":\"createTokenRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"device\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"issuedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenAuthenticated.TokenRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lengthOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_safe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"device\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"issuedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenAuthenticated.TokenRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"removeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EnglishOwnerRemover.sol\":\"EnglishOwnerRemover\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Strings.sol\\\";\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS,\\n        InvalidSignatureV // Deprecated in v4.8\\n    }\\n\\n    function _throwError(RecoverError error) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert(\\\"ECDSA: invalid signature\\\");\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature` or error string. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address, RecoverError) {\\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\\n        return tryRecover(hash, v, r, s);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     *\\n     * _Available since v4.2._\\n     */\\n    function recover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address, RecoverError) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature);\\n        }\\n\\n        return (signer, RecoverError.NoError);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\", Strings.toString(s.length), s));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Typed Data, created from a\\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\\n     * to the one signed with the\\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\\n     * JSON-RPC method as part of EIP-712.\\n     *\\n     * See {recover}.\\n     */\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n    }\\n}\\n\",\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/EnglishOwnerRemover.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"./TokenAuthenticated.sol\\\";\\nimport \\\"./interfaces/IGnosisSafe.sol\\\";\\n\\ncontract EnglishOwnerRemover is TokenAuthenticated {\\n\\n    constructor() TokenAuthenticated(\\\"I want to remove this device from my account.\\\") {}\\n\\n    function removeOwner(\\n        address _safe,\\n        address previousOwner,\\n        TokenRequest calldata request,\\n        bytes calldata signature\\n    ) external {\\n        require(authenticate(request, signature));\\n\\n        GnosisSafe safe = GnosisSafe(_safe);\\n        {\\n            uint256 threshold = safe.getThreshold();\\n            require(\\n                threshold == 1,\\n                \\\"Only safe's with a threshold of one are supported\\\"\\n            );\\n            require(safe.isOwner(request.owner), \\\"Owner is not a safe owner\\\");\\n        }\\n\\n        bytes memory data = abi.encodeWithSignature(\\n            \\\"removeOwner(address,address,uint256)\\\",\\n            previousOwner,\\n            request.device,\\n            1\\n        );\\n\\n        GnosisSafe(_safe).execTransactionFromModule(\\n            _safe,\\n            0,\\n            data,\\n            Enum.Operation.Call\\n        );\\n    }\\n\\n}\\n\",\"keccak256\":\"0xd293a5f0ca577ef03285b9960a100d64b38b9f01d8d3e00a3d2206d7ebd46454\",\"license\":\"MIT\"},\"contracts/TokenAuthenticated.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\n// import \\\"hardhat/console.sol\\\";\\n\\n/**\\n * @title TokenAuthenticated\\n * @dev allow a user to authenticate with a signed english token.\\n */\\ncontract TokenAuthenticated {\\n    string public STATEMENT;\\n\\n    uint256 public lengthOfToken = 15;\\n       \\n    struct TokenRequest {\\n        address owner;\\n        address device;\\n        uint256 issuedAt;\\n    }\\n\\n    constructor(string memory _statement) {\\n        STATEMENT = _statement;\\n    }\\n\\n    function _updateStatement(string memory newStatement) internal {\\n        STATEMENT = newStatement;\\n    }\\n\\n    function _updateLengthOfToken(uint256 newLength) internal {\\n        lengthOfToken = newLength;\\n    }\\n\\n    function authenticate(\\n        TokenRequest calldata request,\\n        bytes calldata signature\\n    ) internal view returns (bool) {\\n        bytes32 msgHash = hashForToken(request);\\n        address signer = ECDSA.recover(msgHash, signature);\\n        require(signer == request.owner, \\\"invalid signature\\\");\\n        require(\\n            request.issuedAt >= block.number - lengthOfToken,\\n            \\\"Request is too old\\\"\\n        );\\n        return true;\\n    }\\n\\n    function createTokenRequest(\\n        address owner,\\n        address device\\n    ) public view returns (TokenRequest memory request, string memory) {\\n        request = TokenRequest({\\n            owner: owner,\\n            device: device,\\n            issuedAt: block.number - 1\\n        });\\n        return (request, stringToSign(request));\\n    }\\n\\n\\n    /**\\n     * @dev Returns the string to sign of the provided WalletCreateRequest.\\n     * @param request The WalletCreateRequest struct containing the owner address, device address, and issuedAt block number.\\n     */\\n    function stringToSign(\\n        TokenRequest memory request\\n    ) internal view returns (string memory) {\\n        return string(abi.encodePacked(\\n            STATEMENT,\\n            \\\"\\\\n\\\\nMe: \\\",\\n            Strings.toHexString(request.owner),\\n            \\\"\\\\nDevice: \\\",\\n            Strings.toHexString(request.device),\\n            \\\"\\\\nIssued at: \\\",\\n            Strings.toString(request.issuedAt)\\n        ));\\n    }\\n\\n    function hashForToken(\\n        TokenRequest calldata request\\n    ) internal view returns (bytes32) {\\n        return ECDSA.toEthSignedMessageHash(bytes(stringToSign(request)));\\n    }\\n}\",\"keccak256\":\"0x46bcf484ada1e1d321fd73afe7060e7e0b3930ba844bc32599fe88b7860715ce\",\"license\":\"MIT\"},\"contracts/interfaces/IGnosisSafe.sol\":{\"content\":\"pragma solidity ^0.8.19;\\n\\ncontract Enum {\\n    enum Operation {\\n        Call,\\n        DelegateCall\\n    }\\n}\\n\\ninterface GnosisSafe {\\n    /// @dev Allows a Module to execute a Safe transaction without any further confirmations.\\n    /// @param to Destination address of module transaction.\\n    /// @param value Ether value of module transaction.\\n    /// @param data Data payload of module transaction.\\n    /// @param operation Operation type of module transaction.\\n    function execTransactionFromModule(\\n        address to,\\n        uint256 value,\\n        bytes calldata data,\\n        Enum.Operation operation\\n    ) external returns (bool success);\\n\\n    function getThreshold() external view returns (uint256);\\n\\n    function getOwners() external view returns (address[] memory);\\n\\n    function isOwner(address owner) external view returns (bool);\\n\\n    function enableModule(address module) external;\\n}\\n\",\"keccak256\":\"0x24f2aae9d94b5a3f8e69fe4628bb053a35c4d9ad3343469d2d2bd66d13c67038\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1628,"contract":"contracts/EnglishOwnerRemover.sol:EnglishOwnerRemover","label":"STATEMENT","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1631,"contract":"contracts/EnglishOwnerRemover.sol:EnglishOwnerRemover","label":"lengthOfToken","offset":0,"slot":"1","type":"t_uint256"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SafeSetup.sol":{"SafeSetup":{"abi":[{"inputs":[{"internalType":"address","name":"_addOwnerModule","type":"address"},{"internalType":"address","name":"_removeOwnerModule","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"setup","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1594":{"entryPoint":null,"id":1594,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":239,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":260,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":198,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":166,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":161,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":216,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1355:10","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:10","statements":[{"nodeType":"YulAssignment","src":"57:19:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:10"},"nodeType":"YulFunctionCall","src":"67:9:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:10"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:10","type":""}],"src":"7:75:10"},{"body":{"nodeType":"YulBlock","src":"177:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:10"},"nodeType":"YulFunctionCall","src":"187:12:10"},"nodeType":"YulExpressionStatement","src":"187:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:10"},{"body":{"nodeType":"YulBlock","src":"300:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:10"},"nodeType":"YulFunctionCall","src":"310:12:10"},"nodeType":"YulExpressionStatement","src":"310:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:10"},{"body":{"nodeType":"YulBlock","src":"379:81:10","statements":[{"nodeType":"YulAssignment","src":"389:65:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:10"},"nodeType":"YulFunctionCall","src":"400:54:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:10"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:10","type":""}],"src":"334:126:10"},{"body":{"nodeType":"YulBlock","src":"511:51:10","statements":[{"nodeType":"YulAssignment","src":"521:35:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:10"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:10"},"nodeType":"YulFunctionCall","src":"532:24:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:10"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:10","type":""}],"src":"466:96:10"},{"body":{"nodeType":"YulBlock","src":"611:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:10"},"nodeType":"YulFunctionCall","src":"670:12:10"},"nodeType":"YulExpressionStatement","src":"670:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:10"},"nodeType":"YulFunctionCall","src":"641:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:10"},"nodeType":"YulFunctionCall","src":"631:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:10"},"nodeType":"YulFunctionCall","src":"624:43:10"},"nodeType":"YulIf","src":"621:63:10"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:10","type":""}],"src":"568:122:10"},{"body":{"nodeType":"YulBlock","src":"759:80:10","statements":[{"nodeType":"YulAssignment","src":"769:22:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:10"},"nodeType":"YulFunctionCall","src":"778:13:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:10"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:10"},"nodeType":"YulFunctionCall","src":"800:33:10"},"nodeType":"YulExpressionStatement","src":"800:33:10"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:10","type":""}],"src":"696:143:10"},{"body":{"nodeType":"YulBlock","src":"939:413:10","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:10"},"nodeType":"YulFunctionCall","src":"987:79:10"},"nodeType":"YulExpressionStatement","src":"987:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:10"},"nodeType":"YulFunctionCall","src":"956:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:10"},"nodeType":"YulFunctionCall","src":"952:32:10"},"nodeType":"YulIf","src":"949:119:10"},{"nodeType":"YulBlock","src":"1078:128:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:10","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:10"},"nodeType":"YulFunctionCall","src":"1164:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:10"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:10"},"nodeType":"YulFunctionCall","src":"1132:64:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:10"}]}]},{"nodeType":"YulBlock","src":"1216:129:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:10","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:10"},"nodeType":"YulFunctionCall","src":"1303:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:10"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:10"},"nodeType":"YulFunctionCall","src":"1271:64:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:10"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:10","type":""}],"src":"845:507:10"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c060405234801561001057600080fd5b5060405161035138038061035183398181016040528101906100329190610104565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050610144565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d1826100a6565b9050919050565b6100e1816100c6565b81146100ec57600080fd5b50565b6000815190506100fe816100d8565b92915050565b6000806040838503121561011b5761011a6100a1565b5b6000610129858286016100ef565b925050602061013a858286016100ef565b9150509250929050565b60805160a0516101ea610167600039600060e801526000605d01526101ea6000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ba0bba4014610030575b600080fd5b61003861003a565b005b60003090508073ffffffffffffffffffffffffffffffffffffffff1663610b59257f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016100989190610199565b600060405180830381600087803b1580156100b257600080fd5b505af11580156100c6573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663610b59257f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016101239190610199565b600060405180830381600087803b15801561013d57600080fd5b505af1158015610151573d6000803e3d6000fd5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061018382610158565b9050919050565b61019381610178565b82525050565b60006020820190506101ae600083018461018a565b9291505056fea26469706673582212200724c2197e032bf64a7d9d173f384fc1c8008ccaabf707069ee3fdd8c2b0941864736f6c63430008130033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x351 CODESIZE SUB DUP1 PUSH2 0x351 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x104 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x144 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1 DUP3 PUSH2 0xA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE1 DUP2 PUSH2 0xC6 JUMP JUMPDEST DUP2 EQ PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFE DUP2 PUSH2 0xD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11B JUMPI PUSH2 0x11A PUSH2 0xA1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x129 DUP6 DUP3 DUP7 ADD PUSH2 0xEF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13A DUP6 DUP3 DUP7 ADD PUSH2 0xEF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1EA PUSH2 0x167 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0xE8 ADD MSTORE PUSH1 0x0 PUSH1 0x5D ADD MSTORE PUSH2 0x1EA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBA0BBA40 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 ADDRESS SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x610B5925 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x199 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x610B5925 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x199 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x151 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x183 DUP3 PUSH2 0x158 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x193 DUP2 PUSH2 0x178 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0x24 0xC2 NOT PUSH31 0x32BF64A7D9D173F384FC1C8008CCAABF707069EE3FDD8C2B0941864736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"66:448:5:-:0;;;171:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;263:15;246:32;;;;;;;;;;308:18;288:38;;;;;;;;;;171:162;;66:448;;88:117:10;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;66:448:5:-;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@setup_1620":{"entryPoint":58,"id":1620,"parameterSlots":0,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":394,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":409,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":376,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":344,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:590:10","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:10","statements":[{"nodeType":"YulAssignment","src":"62:65:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:10"},"nodeType":"YulFunctionCall","src":"73:54:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:10"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:10","type":""}],"src":"7:126:10"},{"body":{"nodeType":"YulBlock","src":"184:51:10","statements":[{"nodeType":"YulAssignment","src":"194:35:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:10"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:10"},"nodeType":"YulFunctionCall","src":"205:24:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:10"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:10","type":""}],"src":"139:96:10"},{"body":{"nodeType":"YulBlock","src":"306:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:10"},"nodeType":"YulFunctionCall","src":"328:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:10"},"nodeType":"YulFunctionCall","src":"316:37:10"},"nodeType":"YulExpressionStatement","src":"316:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:10","type":""}],"src":"241:118:10"},{"body":{"nodeType":"YulBlock","src":"463:124:10","statements":[{"nodeType":"YulAssignment","src":"473:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:10"},"nodeType":"YulFunctionCall","src":"481:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:10"},"nodeType":"YulFunctionCall","src":"562:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:10"},"nodeType":"YulFunctionCall","src":"509:71:10"},"nodeType":"YulExpressionStatement","src":"509:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:10","type":""}],"src":"365:222:10"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1576":[{"length":32,"start":93}],"1578":[{"length":32,"start":232}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ba0bba4014610030575b600080fd5b61003861003a565b005b60003090508073ffffffffffffffffffffffffffffffffffffffff1663610b59257f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016100989190610199565b600060405180830381600087803b1580156100b257600080fd5b505af11580156100c6573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663610b59257f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016101239190610199565b600060405180830381600087803b15801561013d57600080fd5b505af1158015610151573d6000803e3d6000fd5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061018382610158565b9050919050565b61019381610178565b82525050565b60006020820190506101ae600083018461018a565b9291505056fea26469706673582212200724c2197e032bf64a7d9d173f384fc1c8008ccaabf707069ee3fdd8c2b0941864736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBA0BBA40 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 ADDRESS SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x610B5925 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x199 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x610B5925 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x199 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x151 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x183 DUP3 PUSH2 0x158 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x193 DUP2 PUSH2 0x178 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0x24 0xC2 NOT PUSH31 0x32BF64A7D9D173F384FC1C8008CCAABF707069EE3FDD8C2B0941864736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"66:448:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:173;;;:::i;:::-;;;373:15;410:4;373:43;;426:4;:17;;;444:14;426:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;469:4;:17;;;487;469:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;363:149;339:173::o;7:126:10:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"98000","executionCost":"infinite","totalCost":"infinite"},"external":{"setup()":"infinite"}},"methodIdentifiers":{"setup()":"ba0bba40"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addOwnerModule\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_removeOwnerModule\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"setup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeSetup.sol\":\"SafeSetup\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SafeSetup.sol\":{\"content\":\"pragma solidity ^0.8.19;\\n\\nimport \\\"./interfaces/IGnosisSafe.sol\\\";\\n\\ncontract SafeSetup {\\n    address immutable addOwnerModule;\\n    address immutable removeOwnerModule;\\n\\n    constructor(address _addOwnerModule, address _removeOwnerModule) {\\n        addOwnerModule = _addOwnerModule;\\n        removeOwnerModule = _removeOwnerModule;\\n    }\\n\\n    function setup() public {\\n        GnosisSafe safe = GnosisSafe(address(this));\\n        safe.enableModule(addOwnerModule);\\n        safe.enableModule(removeOwnerModule);\\n    }\\n}\\n\",\"keccak256\":\"0xed6db32aa34ab8415111c38f01cfbafc9becfead8f4d90c25b9f99124d29e030\"},\"contracts/interfaces/IGnosisSafe.sol\":{\"content\":\"pragma solidity ^0.8.19;\\n\\ncontract Enum {\\n    enum Operation {\\n        Call,\\n        DelegateCall\\n    }\\n}\\n\\ninterface GnosisSafe {\\n    /// @dev Allows a Module to execute a Safe transaction without any further confirmations.\\n    /// @param to Destination address of module transaction.\\n    /// @param value Ether value of module transaction.\\n    /// @param data Data payload of module transaction.\\n    /// @param operation Operation type of module transaction.\\n    function execTransactionFromModule(\\n        address to,\\n        uint256 value,\\n        bytes calldata data,\\n        Enum.Operation operation\\n    ) external returns (bool success);\\n\\n    function getThreshold() external view returns (uint256);\\n\\n    function getOwners() external view returns (address[] memory);\\n\\n    function isOwner(address owner) external view returns (bool);\\n\\n    function enableModule(address module) external;\\n}\\n\",\"keccak256\":\"0x24f2aae9d94b5a3f8e69fe4628bb053a35c4d9ad3343469d2d2bd66d13c67038\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/TokenAuthenticated.sol":{"TokenAuthenticated":{"abi":[{"inputs":[{"internalType":"string","name":"_statement","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"STATEMENT","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"device","type":"address"}],"name":"createTokenRequest","outputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"device","type":"address"},{"internalType":"uint256","name":"issuedAt","type":"uint256"}],"internalType":"struct TokenAuthenticated.TokenRequest","name":"request","type":"tuple"},{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lengthOfToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"allow a user to authenticate with a signed english token.","kind":"dev","methods":{},"title":"TokenAuthenticated","version":1},"evm":{"bytecode":{"functionDebugData":{"@_1648":{"entryPoint":null,"id":1648,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":362,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":437,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr_fromMemory":{"entryPoint":488,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":233,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":85,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":264,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":680,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":569,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1001,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":816,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":962,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":836,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1156,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":318,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":701,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":627,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1126,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":179,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":826,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1094,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":580,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":132,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":876,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":105,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":110,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":100,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":95,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":115,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":717,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1081,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":934,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":730,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":886,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":929,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8245:10","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:10","statements":[{"nodeType":"YulAssignment","src":"57:19:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:10"},"nodeType":"YulFunctionCall","src":"67:9:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:10"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:10","type":""}],"src":"7:75:10"},{"body":{"nodeType":"YulBlock","src":"177:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:10"},"nodeType":"YulFunctionCall","src":"187:12:10"},"nodeType":"YulExpressionStatement","src":"187:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:10"},{"body":{"nodeType":"YulBlock","src":"300:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:10"},"nodeType":"YulFunctionCall","src":"310:12:10"},"nodeType":"YulExpressionStatement","src":"310:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:10"},{"body":{"nodeType":"YulBlock","src":"423:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:10"},"nodeType":"YulFunctionCall","src":"433:12:10"},"nodeType":"YulExpressionStatement","src":"433:12:10"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:10"},{"body":{"nodeType":"YulBlock","src":"546:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:10"},"nodeType":"YulFunctionCall","src":"556:12:10"},"nodeType":"YulExpressionStatement","src":"556:12:10"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:10"},{"body":{"nodeType":"YulBlock","src":"628:54:10","statements":[{"nodeType":"YulAssignment","src":"638:38:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:10"},"nodeType":"YulFunctionCall","src":"652:14:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:10","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:10"},"nodeType":"YulFunctionCall","src":"668:7:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:10"},"nodeType":"YulFunctionCall","src":"648:28:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:10"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:10","type":""}],"src":"580:102:10"},{"body":{"nodeType":"YulBlock","src":"716:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:10"},"nodeType":"YulFunctionCall","src":"726:88:10"},"nodeType":"YulExpressionStatement","src":"726:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:10"},"nodeType":"YulFunctionCall","src":"823:15:10"},"nodeType":"YulExpressionStatement","src":"823:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:10"},"nodeType":"YulFunctionCall","src":"847:15:10"},"nodeType":"YulExpressionStatement","src":"847:15:10"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:10"},{"body":{"nodeType":"YulBlock","src":"917:238:10","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:10","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:10"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:10"},"nodeType":"YulFunctionCall","src":"957:27:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:10"},"nodeType":"YulFunctionCall","src":"945:40:10"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:10"},"nodeType":"YulFunctionCall","src":"1098:18:10"},"nodeType":"YulExpressionStatement","src":"1098:18:10"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:10"},"nodeType":"YulFunctionCall","src":"1036:34:10"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:10"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:10"},"nodeType":"YulFunctionCall","src":"1072:22:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:10"},"nodeType":"YulFunctionCall","src":"1033:62:10"},"nodeType":"YulIf","src":"1030:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:10","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:10"},"nodeType":"YulFunctionCall","src":"1127:22:10"},"nodeType":"YulExpressionStatement","src":"1127:22:10"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:10","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:10","type":""}],"src":"874:281:10"},{"body":{"nodeType":"YulBlock","src":"1202:88:10","statements":[{"nodeType":"YulAssignment","src":"1212:30:10","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:10"},"nodeType":"YulFunctionCall","src":"1222:20:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:10"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:10"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:10"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:10"},"nodeType":"YulFunctionCall","src":"1251:33:10"},"nodeType":"YulExpressionStatement","src":"1251:33:10"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:10","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:10","type":""}],"src":"1161:129:10"},{"body":{"nodeType":"YulBlock","src":"1363:241:10","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:10"},"nodeType":"YulFunctionCall","src":"1470:18:10"},"nodeType":"YulExpressionStatement","src":"1470:18:10"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:10"},"nodeType":"YulFunctionCall","src":"1437:30:10"},"nodeType":"YulIf","src":"1434:56:10"},{"nodeType":"YulAssignment","src":"1500:37:10","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:10"},"nodeType":"YulFunctionCall","src":"1508:29:10"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:10"}]},{"nodeType":"YulAssignment","src":"1574:23:10","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:10"},"nodeType":"YulFunctionCall","src":"1582:15:10"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:10"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:10","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:10","type":""}],"src":"1296:308:10"},{"body":{"nodeType":"YulBlock","src":"1672:184:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:10"},"nodeType":"YulFunctionCall","src":"1772:11:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:10"},"nodeType":"YulFunctionCall","src":"1791:11:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:10"},"nodeType":"YulFunctionCall","src":"1785:18:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:10"},"nodeType":"YulFunctionCall","src":"1765:39:10"},"nodeType":"YulExpressionStatement","src":"1765:39:10"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:10"},"nodeType":"YulFunctionCall","src":"1709:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:10","statements":[{"nodeType":"YulAssignment","src":"1725:15:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:10"},"nodeType":"YulFunctionCall","src":"1730:10:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:10","statements":[]},"src":"1701:113:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:10"},"nodeType":"YulFunctionCall","src":"1830:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:10"},"nodeType":"YulFunctionCall","src":"1823:27:10"},"nodeType":"YulExpressionStatement","src":"1823:27:10"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:10","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:10","type":""}],"src":"1610:246:10"},{"body":{"nodeType":"YulBlock","src":"1957:339:10","statements":[{"nodeType":"YulAssignment","src":"1967:75:10","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:10"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:10"},"nodeType":"YulFunctionCall","src":"1992:49:10"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:10"},"nodeType":"YulFunctionCall","src":"1976:66:10"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:10"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:10"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:10"},"nodeType":"YulFunctionCall","src":"2051:21:10"},"nodeType":"YulExpressionStatement","src":"2051:21:10"},{"nodeType":"YulVariableDeclaration","src":"2081:27:10","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:10"},"nodeType":"YulFunctionCall","src":"2092:16:10"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:10"},"nodeType":"YulFunctionCall","src":"2148:79:10"},"nodeType":"YulExpressionStatement","src":"2148:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:10"},"nodeType":"YulFunctionCall","src":"2123:16:10"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:10"},"nodeType":"YulFunctionCall","src":"2120:25:10"},"nodeType":"YulIf","src":"2117:112:10"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:10"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:10"},"nodeType":"YulFunctionCall","src":"2238:52:10"},"nodeType":"YulExpressionStatement","src":"2238:52:10"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:10","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:10","type":""}],"src":"1862:434:10"},{"body":{"nodeType":"YulBlock","src":"2389:282:10","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:10"},"nodeType":"YulFunctionCall","src":"2440:79:10"},"nodeType":"YulExpressionStatement","src":"2440:79:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:10"},"nodeType":"YulFunctionCall","src":"2413:17:10"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:10"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:10"},"nodeType":"YulFunctionCall","src":"2409:27:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:10"},"nodeType":"YulFunctionCall","src":"2402:35:10"},"nodeType":"YulIf","src":"2399:122:10"},{"nodeType":"YulVariableDeclaration","src":"2530:27:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:10"},"nodeType":"YulFunctionCall","src":"2544:13:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:10","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:10","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:10"},"nodeType":"YulFunctionCall","src":"2634:17:10"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:10"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:10"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:10"},"nodeType":"YulFunctionCall","src":"2575:90:10"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:10"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:10","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:10","type":""}],"src":"2316:355:10"},{"body":{"nodeType":"YulBlock","src":"2764:437:10","statements":[{"body":{"nodeType":"YulBlock","src":"2810:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2812:77:10"},"nodeType":"YulFunctionCall","src":"2812:79:10"},"nodeType":"YulExpressionStatement","src":"2812:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2785:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"2794:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2781:3:10"},"nodeType":"YulFunctionCall","src":"2781:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"2806:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2777:3:10"},"nodeType":"YulFunctionCall","src":"2777:32:10"},"nodeType":"YulIf","src":"2774:119:10"},{"nodeType":"YulBlock","src":"2903:291:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2918:38:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2942:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2953:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2938:3:10"},"nodeType":"YulFunctionCall","src":"2938:17:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2932:5:10"},"nodeType":"YulFunctionCall","src":"2932:24:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2922:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"3003:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3005:77:10"},"nodeType":"YulFunctionCall","src":"3005:79:10"},"nodeType":"YulExpressionStatement","src":"3005:79:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2975:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2983:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2972:2:10"},"nodeType":"YulFunctionCall","src":"2972:30:10"},"nodeType":"YulIf","src":"2969:117:10"},{"nodeType":"YulAssignment","src":"3100:84:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3156:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"3167:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3152:3:10"},"nodeType":"YulFunctionCall","src":"3152:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3176:7:10"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3110:41:10"},"nodeType":"YulFunctionCall","src":"3110:74:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3100:6:10"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2734:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2745:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2757:6:10","type":""}],"src":"2677:524:10"},{"body":{"nodeType":"YulBlock","src":"3266:40:10","statements":[{"nodeType":"YulAssignment","src":"3277:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3293:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3287:5:10"},"nodeType":"YulFunctionCall","src":"3287:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3277:6:10"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3249:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3259:6:10","type":""}],"src":"3207:99:10"},{"body":{"nodeType":"YulBlock","src":"3340:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3357:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3360:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3350:6:10"},"nodeType":"YulFunctionCall","src":"3350:88:10"},"nodeType":"YulExpressionStatement","src":"3350:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3454:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3457:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3447:6:10"},"nodeType":"YulFunctionCall","src":"3447:15:10"},"nodeType":"YulExpressionStatement","src":"3447:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3478:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3481:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3471:6:10"},"nodeType":"YulFunctionCall","src":"3471:15:10"},"nodeType":"YulExpressionStatement","src":"3471:15:10"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3312:180:10"},{"body":{"nodeType":"YulBlock","src":"3549:269:10","statements":[{"nodeType":"YulAssignment","src":"3559:22:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3573:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"3579:1:10","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3569:3:10"},"nodeType":"YulFunctionCall","src":"3569:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3559:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"3590:38:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3620:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"3626:1:10","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3616:3:10"},"nodeType":"YulFunctionCall","src":"3616:12:10"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3594:18:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"3667:51:10","statements":[{"nodeType":"YulAssignment","src":"3681:27:10","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3695:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"3703:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3691:3:10"},"nodeType":"YulFunctionCall","src":"3691:17:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3681:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3647:18:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3640:6:10"},"nodeType":"YulFunctionCall","src":"3640:26:10"},"nodeType":"YulIf","src":"3637:81:10"},{"body":{"nodeType":"YulBlock","src":"3770:42:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"3784:16:10"},"nodeType":"YulFunctionCall","src":"3784:18:10"},"nodeType":"YulExpressionStatement","src":"3784:18:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3734:18:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3757:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"3765:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3754:2:10"},"nodeType":"YulFunctionCall","src":"3754:14:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3731:2:10"},"nodeType":"YulFunctionCall","src":"3731:38:10"},"nodeType":"YulIf","src":"3728:84:10"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3533:4:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3542:6:10","type":""}],"src":"3498:320:10"},{"body":{"nodeType":"YulBlock","src":"3878:87:10","statements":[{"nodeType":"YulAssignment","src":"3888:11:10","value":{"name":"ptr","nodeType":"YulIdentifier","src":"3896:3:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3888:4:10"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3916:1:10","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"3919:3:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3909:6:10"},"nodeType":"YulFunctionCall","src":"3909:14:10"},"nodeType":"YulExpressionStatement","src":"3909:14:10"},{"nodeType":"YulAssignment","src":"3932:26:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3950:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3953:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3940:9:10"},"nodeType":"YulFunctionCall","src":"3940:18:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3932:4:10"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3865:3:10","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3873:4:10","type":""}],"src":"3824:141:10"},{"body":{"nodeType":"YulBlock","src":"4015:49:10","statements":[{"nodeType":"YulAssignment","src":"4025:33:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4043:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"4050:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:10"},"nodeType":"YulFunctionCall","src":"4039:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"4055:2:10","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4035:3:10"},"nodeType":"YulFunctionCall","src":"4035:23:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4025:6:10"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3998:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4008:6:10","type":""}],"src":"3971:93:10"},{"body":{"nodeType":"YulBlock","src":"4123:54:10","statements":[{"nodeType":"YulAssignment","src":"4133:37:10","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4158:4:10"},{"name":"value","nodeType":"YulIdentifier","src":"4164:5:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4154:3:10"},"nodeType":"YulFunctionCall","src":"4154:16:10"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4133:8:10"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4098:4:10","type":""},{"name":"value","nodeType":"YulTypedName","src":"4104:5:10","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4114:8:10","type":""}],"src":"4070:107:10"},{"body":{"nodeType":"YulBlock","src":"4259:317:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4269:35:10","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4290:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"4302:1:10","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4286:3:10"},"nodeType":"YulFunctionCall","src":"4286:18:10"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4273:9:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4313:109:10","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4344:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4355:66:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4325:18:10"},"nodeType":"YulFunctionCall","src":"4325:97:10"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4317:4:10","type":""}]},{"nodeType":"YulAssignment","src":"4431:51:10","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4462:9:10"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4473:8:10"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4443:18:10"},"nodeType":"YulFunctionCall","src":"4443:39:10"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4431:8:10"}]},{"nodeType":"YulAssignment","src":"4491:30:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4504:5:10"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4515:4:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4511:3:10"},"nodeType":"YulFunctionCall","src":"4511:9:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4500:3:10"},"nodeType":"YulFunctionCall","src":"4500:21:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:10"}]},{"nodeType":"YulAssignment","src":"4530:40:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4543:5:10"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4554:8:10"},{"name":"mask","nodeType":"YulIdentifier","src":"4564:4:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4550:3:10"},"nodeType":"YulFunctionCall","src":"4550:19:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4540:2:10"},"nodeType":"YulFunctionCall","src":"4540:30:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4530:6:10"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4220:5:10","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4227:10:10","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4239:8:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4252:6:10","type":""}],"src":"4183:393:10"},{"body":{"nodeType":"YulBlock","src":"4627:32:10","statements":[{"nodeType":"YulAssignment","src":"4637:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"4648:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4637:7:10"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4609:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4619:7:10","type":""}],"src":"4582:77:10"},{"body":{"nodeType":"YulBlock","src":"4697:28:10","statements":[{"nodeType":"YulAssignment","src":"4707:12:10","value":{"name":"value","nodeType":"YulIdentifier","src":"4714:5:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4707:3:10"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4683:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4693:3:10","type":""}],"src":"4665:60:10"},{"body":{"nodeType":"YulBlock","src":"4791:82:10","statements":[{"nodeType":"YulAssignment","src":"4801:66:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4859:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4841:17:10"},"nodeType":"YulFunctionCall","src":"4841:24:10"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"4832:8:10"},"nodeType":"YulFunctionCall","src":"4832:34:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4814:17:10"},"nodeType":"YulFunctionCall","src":"4814:53:10"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4801:9:10"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4771:5:10","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4781:9:10","type":""}],"src":"4731:142:10"},{"body":{"nodeType":"YulBlock","src":"4926:28:10","statements":[{"nodeType":"YulAssignment","src":"4936:12:10","value":{"name":"value","nodeType":"YulIdentifier","src":"4943:5:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4936:3:10"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4912:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4922:3:10","type":""}],"src":"4879:75:10"},{"body":{"nodeType":"YulBlock","src":"5036:193:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5046:63:10","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5101:7:10"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5070:30:10"},"nodeType":"YulFunctionCall","src":"5070:39:10"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5050:16:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5125:4:10"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5165:4:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5159:5:10"},"nodeType":"YulFunctionCall","src":"5159:11:10"},{"name":"offset","nodeType":"YulIdentifier","src":"5172:6:10"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5204:16:10"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5180:23:10"},"nodeType":"YulFunctionCall","src":"5180:41:10"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5131:27:10"},"nodeType":"YulFunctionCall","src":"5131:91:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5118:6:10"},"nodeType":"YulFunctionCall","src":"5118:105:10"},"nodeType":"YulExpressionStatement","src":"5118:105:10"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5013:4:10","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5019:6:10","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5027:7:10","type":""}],"src":"4960:269:10"},{"body":{"nodeType":"YulBlock","src":"5284:24:10","statements":[{"nodeType":"YulAssignment","src":"5294:8:10","value":{"kind":"number","nodeType":"YulLiteral","src":"5301:1:10","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5294:3:10"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5280:3:10","type":""}],"src":"5235:73:10"},{"body":{"nodeType":"YulBlock","src":"5367:136:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5377:46:10","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5391:30:10"},"nodeType":"YulFunctionCall","src":"5391:32:10"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5381:6:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5476:4:10"},{"name":"offset","nodeType":"YulIdentifier","src":"5482:6:10"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5490:6:10"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5432:43:10"},"nodeType":"YulFunctionCall","src":"5432:65:10"},"nodeType":"YulExpressionStatement","src":"5432:65:10"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5353:4:10","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5359:6:10","type":""}],"src":"5314:189:10"},{"body":{"nodeType":"YulBlock","src":"5559:136:10","statements":[{"body":{"nodeType":"YulBlock","src":"5626:63:10","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5670:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"5677:1:10","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5640:29:10"},"nodeType":"YulFunctionCall","src":"5640:39:10"},"nodeType":"YulExpressionStatement","src":"5640:39:10"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5579:5:10"},{"name":"end","nodeType":"YulIdentifier","src":"5586:3:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5576:2:10"},"nodeType":"YulFunctionCall","src":"5576:14:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5591:26:10","statements":[{"nodeType":"YulAssignment","src":"5593:22:10","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5606:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"5613:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5602:3:10"},"nodeType":"YulFunctionCall","src":"5602:13:10"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5593:5:10"}]}]},"pre":{"nodeType":"YulBlock","src":"5573:2:10","statements":[]},"src":"5569:120:10"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5547:5:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"5554:3:10","type":""}],"src":"5509:186:10"},{"body":{"nodeType":"YulBlock","src":"5780:464:10","statements":[{"body":{"nodeType":"YulBlock","src":"5806:431:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5820:54:10","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5868:5:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5836:31:10"},"nodeType":"YulFunctionCall","src":"5836:38:10"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"5824:8:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5887:63:10","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"5910:8:10"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"5938:10:10"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"5920:17:10"},"nodeType":"YulFunctionCall","src":"5920:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5906:3:10"},"nodeType":"YulFunctionCall","src":"5906:44:10"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"5891:11:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"6107:27:10","statements":[{"nodeType":"YulAssignment","src":"6109:23:10","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6124:8:10"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6109:11:10"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6091:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"6103:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6088:2:10"},"nodeType":"YulFunctionCall","src":"6088:18:10"},"nodeType":"YulIf","src":"6085:49:10"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6176:11:10"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6193:8:10"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6221:3:10"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6203:17:10"},"nodeType":"YulFunctionCall","src":"6203:22:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6189:3:10"},"nodeType":"YulFunctionCall","src":"6189:37:10"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6147:28:10"},"nodeType":"YulFunctionCall","src":"6147:80:10"},"nodeType":"YulExpressionStatement","src":"6147:80:10"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"5797:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"5802:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5794:2:10"},"nodeType":"YulFunctionCall","src":"5794:11:10"},"nodeType":"YulIf","src":"5791:446:10"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"5756:5:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"5763:3:10","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"5768:10:10","type":""}],"src":"5701:543:10"},{"body":{"nodeType":"YulBlock","src":"6313:54:10","statements":[{"nodeType":"YulAssignment","src":"6323:37:10","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6348:4:10"},{"name":"value","nodeType":"YulIdentifier","src":"6354:5:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6344:3:10"},"nodeType":"YulFunctionCall","src":"6344:16:10"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6323:8:10"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6288:4:10","type":""},{"name":"value","nodeType":"YulTypedName","src":"6294:5:10","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6304:8:10","type":""}],"src":"6250:117:10"},{"body":{"nodeType":"YulBlock","src":"6424:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"6434:68:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6483:1:10","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6486:5:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6479:3:10"},"nodeType":"YulFunctionCall","src":"6479:13:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6498:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6494:3:10"},"nodeType":"YulFunctionCall","src":"6494:6:10"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6450:28:10"},"nodeType":"YulFunctionCall","src":"6450:51:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6446:3:10"},"nodeType":"YulFunctionCall","src":"6446:56:10"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6438:4:10","type":""}]},{"nodeType":"YulAssignment","src":"6511:25:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6525:4:10"},{"name":"mask","nodeType":"YulIdentifier","src":"6531:4:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6521:3:10"},"nodeType":"YulFunctionCall","src":"6521:15:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6511:6:10"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6401:4:10","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6407:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6417:6:10","type":""}],"src":"6373:169:10"},{"body":{"nodeType":"YulBlock","src":"6628:214:10","statements":[{"nodeType":"YulAssignment","src":"6761:37:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6788:4:10"},{"name":"len","nodeType":"YulIdentifier","src":"6794:3:10"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6769:18:10"},"nodeType":"YulFunctionCall","src":"6769:29:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6761:4:10"}]},{"nodeType":"YulAssignment","src":"6807:29:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6818:4:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6828:1:10","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"6831:3:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6824:3:10"},"nodeType":"YulFunctionCall","src":"6824:11:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6815:2:10"},"nodeType":"YulFunctionCall","src":"6815:21:10"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"6807:4:10"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6609:4:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"6615:3:10","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6623:4:10","type":""}],"src":"6547:295:10"},{"body":{"nodeType":"YulBlock","src":"6939:1303:10","statements":[{"nodeType":"YulVariableDeclaration","src":"6950:51:10","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6997:3:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6964:32:10"},"nodeType":"YulFunctionCall","src":"6964:37:10"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"6954:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"7086:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7088:16:10"},"nodeType":"YulFunctionCall","src":"7088:18:10"},"nodeType":"YulExpressionStatement","src":"7088:18:10"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7058:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"7066:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7055:2:10"},"nodeType":"YulFunctionCall","src":"7055:30:10"},"nodeType":"YulIf","src":"7052:56:10"},{"nodeType":"YulVariableDeclaration","src":"7118:52:10","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7164:4:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7158:5:10"},"nodeType":"YulFunctionCall","src":"7158:11:10"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7132:25:10"},"nodeType":"YulFunctionCall","src":"7132:38:10"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7122:6:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7263:4:10"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7269:6:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"7277:6:10"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7217:45:10"},"nodeType":"YulFunctionCall","src":"7217:67:10"},"nodeType":"YulExpressionStatement","src":"7217:67:10"},{"nodeType":"YulVariableDeclaration","src":"7294:18:10","value":{"kind":"number","nodeType":"YulLiteral","src":"7311:1:10","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7298:9:10","type":""}]},{"nodeType":"YulAssignment","src":"7322:17:10","value":{"kind":"number","nodeType":"YulLiteral","src":"7335:4:10","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7322:9:10"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7386:611:10","statements":[{"nodeType":"YulVariableDeclaration","src":"7400:37:10","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7419:6:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7431:4:10","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7427:3:10"},"nodeType":"YulFunctionCall","src":"7427:9:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7415:3:10"},"nodeType":"YulFunctionCall","src":"7415:22:10"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7404:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7451:51:10","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7497:4:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7465:31:10"},"nodeType":"YulFunctionCall","src":"7465:37:10"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7455:6:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7515:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"7524:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7519:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"7583:163:10","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7608:6:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7626:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7631:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7622:3:10"},"nodeType":"YulFunctionCall","src":"7622:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7616:5:10"},"nodeType":"YulFunctionCall","src":"7616:26:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7601:6:10"},"nodeType":"YulFunctionCall","src":"7601:42:10"},"nodeType":"YulExpressionStatement","src":"7601:42:10"},{"nodeType":"YulAssignment","src":"7660:24:10","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7674:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"7682:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7670:3:10"},"nodeType":"YulFunctionCall","src":"7670:14:10"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7660:6:10"}]},{"nodeType":"YulAssignment","src":"7701:31:10","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7718:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7729:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:10"},"nodeType":"YulFunctionCall","src":"7714:18:10"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7701:9:10"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7549:1:10"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7552:7:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7546:2:10"},"nodeType":"YulFunctionCall","src":"7546:14:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7561:21:10","statements":[{"nodeType":"YulAssignment","src":"7563:17:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7572:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"7575:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7568:3:10"},"nodeType":"YulFunctionCall","src":"7568:12:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7563:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"7542:3:10","statements":[]},"src":"7538:208:10"},{"body":{"nodeType":"YulBlock","src":"7782:156:10","statements":[{"nodeType":"YulVariableDeclaration","src":"7800:43:10","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7827:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7832:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7823:3:10"},"nodeType":"YulFunctionCall","src":"7823:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7817:5:10"},"nodeType":"YulFunctionCall","src":"7817:26:10"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"7804:9:10","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7867:6:10"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"7894:9:10"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7909:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"7917:4:10","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7905:3:10"},"nodeType":"YulFunctionCall","src":"7905:17:10"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7875:18:10"},"nodeType":"YulFunctionCall","src":"7875:48:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7860:6:10"},"nodeType":"YulFunctionCall","src":"7860:64:10"},"nodeType":"YulExpressionStatement","src":"7860:64:10"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"7765:7:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"7774:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7762:2:10"},"nodeType":"YulFunctionCall","src":"7762:19:10"},"nodeType":"YulIf","src":"7759:179:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7958:4:10"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7972:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"7980:1:10","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7968:3:10"},"nodeType":"YulFunctionCall","src":"7968:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"7984:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7964:3:10"},"nodeType":"YulFunctionCall","src":"7964:22:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7951:6:10"},"nodeType":"YulFunctionCall","src":"7951:36:10"},"nodeType":"YulExpressionStatement","src":"7951:36:10"}]},"nodeType":"YulCase","src":"7379:618:10","value":{"kind":"number","nodeType":"YulLiteral","src":"7384:1:10","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8014:222:10","statements":[{"nodeType":"YulVariableDeclaration","src":"8028:14:10","value":{"kind":"number","nodeType":"YulLiteral","src":"8041:1:10","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8032:5:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"8065:67:10","statements":[{"nodeType":"YulAssignment","src":"8083:35:10","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8102:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8107:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8098:3:10"},"nodeType":"YulFunctionCall","src":"8098:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8092:5:10"},"nodeType":"YulFunctionCall","src":"8092:26:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8083:5:10"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8058:6:10"},"nodeType":"YulIf","src":"8055:77:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8152:4:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8211:5:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"8218:6:10"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8158:52:10"},"nodeType":"YulFunctionCall","src":"8158:67:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8145:6:10"},"nodeType":"YulFunctionCall","src":"8145:81:10"},"nodeType":"YulExpressionStatement","src":"8145:81:10"}]},"nodeType":"YulCase","src":"8006:230:10","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7359:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"7367:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7356:2:10"},"nodeType":"YulFunctionCall","src":"7356:14:10"},"nodeType":"YulSwitch","src":"7349:887:10"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6928:4:10","type":""},{"name":"src","nodeType":"YulTypedName","src":"6934:3:10","type":""}],"src":"6847:1395:10"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xF PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1322 CODESIZE SUB DUP1 PUSH3 0x1322 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3C SWAP2 SWAP1 PUSH3 0x1E8 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x4D SWAP2 SWAP1 PUSH3 0x484 JUMP JUMPDEST POP POP PUSH3 0x56B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xBE DUP3 PUSH3 0x73 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xE0 JUMPI PUSH3 0xDF PUSH3 0x84 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF5 PUSH3 0x55 JUMP JUMPDEST SWAP1 POP PUSH3 0x103 DUP3 DUP3 PUSH3 0xB3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x126 JUMPI PUSH3 0x125 PUSH3 0x84 JUMP JUMPDEST JUMPDEST PUSH3 0x131 DUP3 PUSH3 0x73 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x15E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x141 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x181 PUSH3 0x17B DUP5 PUSH3 0x108 JUMP JUMPDEST PUSH3 0xE9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1A0 JUMPI PUSH3 0x19F PUSH3 0x6E JUMP JUMPDEST JUMPDEST PUSH3 0x1AD DUP5 DUP3 DUP6 PUSH3 0x13E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1CD JUMPI PUSH3 0x1CC PUSH3 0x69 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1DF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x16A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x201 JUMPI PUSH3 0x200 PUSH3 0x5F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x222 JUMPI PUSH3 0x221 PUSH3 0x64 JUMP JUMPDEST JUMPDEST PUSH3 0x230 DUP5 DUP3 DUP6 ADD PUSH3 0x1B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x28C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2A2 JUMPI PUSH3 0x2A1 PUSH3 0x244 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x30C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2CD JUMP JUMPDEST PUSH3 0x318 DUP7 DUP4 PUSH3 0x2CD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x365 PUSH3 0x35F PUSH3 0x359 DUP5 PUSH3 0x330 JUMP JUMPDEST PUSH3 0x33A JUMP JUMPDEST PUSH3 0x330 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x381 DUP4 PUSH3 0x344 JUMP JUMPDEST PUSH3 0x399 PUSH3 0x390 DUP3 PUSH3 0x36C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2DA JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3B0 PUSH3 0x3A1 JUMP JUMPDEST PUSH3 0x3BD DUP2 DUP5 DUP5 PUSH3 0x376 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3E5 JUMPI PUSH3 0x3D9 PUSH1 0x0 DUP3 PUSH3 0x3A6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3C3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x434 JUMPI PUSH3 0x3FE DUP2 PUSH3 0x2A8 JUMP JUMPDEST PUSH3 0x409 DUP5 PUSH3 0x2BD JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x419 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x431 PUSH3 0x428 DUP6 PUSH3 0x2BD JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3C2 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x459 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x439 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x474 DUP4 DUP4 PUSH3 0x446 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x48F DUP3 PUSH3 0x239 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4AB JUMPI PUSH3 0x4AA PUSH3 0x84 JUMP JUMPDEST JUMPDEST PUSH3 0x4B7 DUP3 SLOAD PUSH3 0x273 JUMP JUMPDEST PUSH3 0x4C4 DUP3 DUP3 DUP6 PUSH3 0x3E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4FC JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4E7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4F3 DUP6 DUP3 PUSH3 0x466 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x563 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x50C DUP7 PUSH3 0x2A8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x536 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x50F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x556 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x552 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x446 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDA7 DUP1 PUSH3 0x57B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB6AD16A8 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBEBC479C EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xCB2E6043 EQ PUSH2 0x95 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x749 JUMP JUMPDEST PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP3 SWAP2 SWAP1 PUSH2 0x883 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0x127 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9D PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x699 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 NUMBER PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x92E JUMP JUMPDEST DUP2 MSTORE POP SWAP2 POP DUP2 PUSH2 0x11C DUP4 PUSH2 0x1BB JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x134 SWAP1 PUSH2 0x991 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x160 SWAP1 PUSH2 0x991 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x182 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x190 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1CC DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x20F JUMP JUMPDEST PUSH2 0x1D9 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x20F JUMP JUMPDEST PUSH2 0x1E6 DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x235 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x30A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x24B DUP5 PUSH2 0x546 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26A JUMPI PUSH2 0x269 PUSH2 0xBD9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x2FF JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2F3 JUMPI PUSH2 0x2F2 PUSH2 0xC08 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x2AA JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x327 SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x340 JUMPI PUSH2 0x33F PUSH2 0xBD9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x372 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3AA JUMPI PUSH2 0x3A9 PUSH2 0xCAD JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x40E JUMPI PUSH2 0x40D PUSH2 0xCAD JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x44E SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x458 SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4F8 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x49A JUMPI PUSH2 0x499 PUSH2 0xCAD JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4B1 JUMPI PUSH2 0x4B0 PUSH2 0xCAD JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x4F1 SWAP1 PUSH2 0xCDC JUMP JUMPDEST SWAP1 POP PUSH2 0x45B JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x533 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x5A4 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x59A JUMPI PUSH2 0x599 PUSH2 0xC08 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x5E1 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x5D7 JUMPI PUSH2 0x5D6 PUSH2 0xC08 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x610 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x606 JUMPI PUSH2 0x605 PUSH2 0xC08 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x639 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x62F JUMPI PUSH2 0x62E PUSH2 0xC08 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x65E JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x654 JUMPI PUSH2 0x653 PUSH2 0xC08 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x681 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x677 JUMPI PUSH2 0x676 PUSH2 0xC08 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x690 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x716 DUP3 PUSH2 0x6EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x726 DUP2 PUSH2 0x70B JUMP JUMPDEST DUP2 EQ PUSH2 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x743 DUP2 PUSH2 0x71D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x760 JUMPI PUSH2 0x75F PUSH2 0x6E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x76E DUP6 DUP3 DUP7 ADD PUSH2 0x734 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x77F DUP6 DUP3 DUP7 ADD PUSH2 0x734 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x792 DUP2 PUSH2 0x70B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AB DUP2 PUSH2 0x798 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x7C7 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x789 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x7DA PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x789 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x7ED PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x7A2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x82D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x812 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x855 DUP3 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x85F DUP2 DUP6 PUSH2 0x7FE JUMP JUMPDEST SWAP4 POP PUSH2 0x86F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x80F JUMP JUMPDEST PUSH2 0x878 DUP2 PUSH2 0x839 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x898 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7B1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x8AA DUP2 DUP5 PUSH2 0x84A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8CD DUP2 DUP5 PUSH2 0x84A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8DE DUP2 PUSH2 0x798 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x939 DUP3 PUSH2 0x798 JUMP JUMPDEST SWAP2 POP PUSH2 0x944 DUP4 PUSH2 0x798 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x95C JUMPI PUSH2 0x95B PUSH2 0x8FF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x9A9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x9BC JUMPI PUSH2 0x9BB PUSH2 0x962 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x9EF DUP2 PUSH2 0x991 JUMP JUMPDEST PUSH2 0x9F9 DUP2 DUP7 PUSH2 0x9C2 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0xA14 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xA29 JUMPI PUSH2 0xA5C JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0xA5C JUMP JUMPDEST PUSH2 0xA32 DUP6 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA54 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA35 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA0A4D653A200000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9B PUSH1 0x6 DUP4 PUSH2 0x9C2 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA6 DUP3 PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xABC DUP3 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0xAC6 DUP2 DUP6 PUSH2 0x9C2 JUMP JUMPDEST SWAP4 POP PUSH2 0xAD6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x80F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA4465766963653A200000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB18 PUSH1 0x9 DUP4 PUSH2 0x9C2 JUMP JUMPDEST SWAP2 POP PUSH2 0xB23 DUP3 PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA4973737565642061743A200000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB64 PUSH1 0xC DUP4 PUSH2 0x9C2 JUMP JUMPDEST SWAP2 POP PUSH2 0xB6F DUP3 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0xC DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB86 DUP3 DUP8 PUSH2 0x9E2 JUMP JUMPDEST SWAP2 POP PUSH2 0xB91 DUP3 PUSH2 0xA8E JUMP JUMPDEST SWAP2 POP PUSH2 0xB9D DUP3 DUP7 PUSH2 0xAB1 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA8 DUP3 PUSH2 0xB0B JUMP JUMPDEST SWAP2 POP PUSH2 0xBB4 DUP3 DUP6 PUSH2 0xAB1 JUMP JUMPDEST SWAP2 POP PUSH2 0xBBF DUP3 PUSH2 0xB57 JUMP JUMPDEST SWAP2 POP PUSH2 0xBCB DUP3 DUP5 PUSH2 0xAB1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC42 DUP3 PUSH2 0x798 JUMP JUMPDEST SWAP2 POP PUSH2 0xC4D DUP4 PUSH2 0x798 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC5B DUP2 PUSH2 0x798 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC72 JUMPI PUSH2 0xC71 PUSH2 0x8FF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC84 DUP3 PUSH2 0x798 JUMP JUMPDEST SWAP2 POP PUSH2 0xC8F DUP4 PUSH2 0x798 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xCA7 JUMPI PUSH2 0xCA6 PUSH2 0x8FF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCE7 DUP3 PUSH2 0x798 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0xCFA JUMPI PUSH2 0xCF9 PUSH2 0x8FF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3B PUSH1 0x20 DUP4 PUSH2 0x7FE JUMP JUMPDEST SWAP2 POP PUSH2 0xD46 DUP3 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD6A DUP2 PUSH2 0xD2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0xDE DUP1 SGT PUSH22 0xE2768B8981495412ED4FD9B296A1C822289D1BADAAC6 DUP12 0xDC PUSH25 0x164264736F6C63430008130033000000000000000000000000 ","sourceMap":"312:2137:6:-:0;;;407:2;376:33;;529:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;589:10;577:9;:22;;;;;;:::i;:::-;;529:77;312:2137;;7:75:10;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:524::-;2757:6;2806:2;2794:9;2785:7;2781:23;2777:32;2774:119;;;2812:79;;:::i;:::-;2774:119;2953:1;2942:9;2938:17;2932:24;2983:18;2975:6;2972:30;2969:117;;;3005:79;;:::i;:::-;2969:117;3110:74;3176:7;3167:6;3156:9;3152:22;3110:74;:::i;:::-;3100:84;;2903:291;2677:524;;;;:::o;3207:99::-;3259:6;3293:5;3287:12;3277:22;;3207:99;;;:::o;3312:180::-;3360:77;3357:1;3350:88;3457:4;3454:1;3447:15;3481:4;3478:1;3471:15;3498:320;3542:6;3579:1;3573:4;3569:12;3559:22;;3626:1;3620:4;3616:12;3647:18;3637:81;;3703:4;3695:6;3691:17;3681:27;;3637:81;3765:2;3757:6;3754:14;3734:18;3731:38;3728:84;;3784:18;;:::i;:::-;3728:84;3549:269;3498:320;;;:::o;3824:141::-;3873:4;3896:3;3888:11;;3919:3;3916:1;3909:14;3953:4;3950:1;3940:18;3932:26;;3824:141;;;:::o;3971:93::-;4008:6;4055:2;4050;4043:5;4039:14;4035:23;4025:33;;3971:93;;;:::o;4070:107::-;4114:8;4164:5;4158:4;4154:16;4133:37;;4070:107;;;;:::o;4183:393::-;4252:6;4302:1;4290:10;4286:18;4325:97;4355:66;4344:9;4325:97;:::i;:::-;4443:39;4473:8;4462:9;4443:39;:::i;:::-;4431:51;;4515:4;4511:9;4504:5;4500:21;4491:30;;4564:4;4554:8;4550:19;4543:5;4540:30;4530:40;;4259:317;;4183:393;;;;;:::o;4582:77::-;4619:7;4648:5;4637:16;;4582:77;;;:::o;4665:60::-;4693:3;4714:5;4707:12;;4665:60;;;:::o;4731:142::-;4781:9;4814:53;4832:34;4841:24;4859:5;4841:24;:::i;:::-;4832:34;:::i;:::-;4814:53;:::i;:::-;4801:66;;4731:142;;;:::o;4879:75::-;4922:3;4943:5;4936:12;;4879:75;;;:::o;4960:269::-;5070:39;5101:7;5070:39;:::i;:::-;5131:91;5180:41;5204:16;5180:41;:::i;:::-;5172:6;5165:4;5159:11;5131:91;:::i;:::-;5125:4;5118:105;5036:193;4960:269;;;:::o;5235:73::-;5280:3;5235:73;:::o;5314:189::-;5391:32;;:::i;:::-;5432:65;5490:6;5482;5476:4;5432:65;:::i;:::-;5367:136;5314:189;;:::o;5509:186::-;5569:120;5586:3;5579:5;5576:14;5569:120;;;5640:39;5677:1;5670:5;5640:39;:::i;:::-;5613:1;5606:5;5602:13;5593:22;;5569:120;;;5509:186;;:::o;5701:543::-;5802:2;5797:3;5794:11;5791:446;;;5836:38;5868:5;5836:38;:::i;:::-;5920:29;5938:10;5920:29;:::i;:::-;5910:8;5906:44;6103:2;6091:10;6088:18;6085:49;;;6124:8;6109:23;;6085:49;6147:80;6203:22;6221:3;6203:22;:::i;:::-;6193:8;6189:37;6176:11;6147:80;:::i;:::-;5806:431;;5791:446;5701:543;;;:::o;6250:117::-;6304:8;6354:5;6348:4;6344:16;6323:37;;6250:117;;;;:::o;6373:169::-;6417:6;6450:51;6498:1;6494:6;6486:5;6483:1;6479:13;6450:51;:::i;:::-;6446:56;6531:4;6525;6521:15;6511:25;;6424:118;6373:169;;;;:::o;6547:295::-;6623:4;6769:29;6794:3;6788:4;6769:29;:::i;:::-;6761:37;;6831:3;6828:1;6824:11;6818:4;6815:21;6807:29;;6547:295;;;;:::o;6847:1395::-;6964:37;6997:3;6964:37;:::i;:::-;7066:18;7058:6;7055:30;7052:56;;;7088:18;;:::i;:::-;7052:56;7132:38;7164:4;7158:11;7132:38;:::i;:::-;7217:67;7277:6;7269;7263:4;7217:67;:::i;:::-;7311:1;7335:4;7322:17;;7367:2;7359:6;7356:14;7384:1;7379:618;;;;8041:1;8058:6;8055:77;;;8107:9;8102:3;8098:19;8092:26;8083:35;;8055:77;8158:67;8218:6;8211:5;8158:67;:::i;:::-;8152:4;8145:81;8014:222;7349:887;;7379:618;7431:4;7427:9;7419:6;7415:22;7465:37;7497:4;7465:37;:::i;:::-;7524:1;7538:208;7552:7;7549:1;7546:14;7538:208;;;7631:9;7626:3;7622:19;7616:26;7608:6;7601:42;7682:1;7674:6;7670:14;7660:24;;7729:2;7718:9;7714:18;7701:31;;7575:4;7572:1;7568:12;7563:17;;7538:208;;;7774:6;7765:7;7762:19;7759:179;;;7832:9;7827:3;7823:19;7817:26;7875:48;7917:4;7909:6;7905:17;7894:9;7875:48;:::i;:::-;7867:6;7860:64;7782:156;7759:179;7984:1;7980;7972:6;7968:14;7964:22;7958:4;7951:36;7386:611;;;7349:887;;6939:1303;;;6847:1395;;:::o;312:2137:6:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@STATEMENT_1628":{"entryPoint":295,"id":1628,"parameterSlots":0,"returnSlots":0},"@createTokenRequest_1744":{"entryPoint":179,"id":1744,"parameterSlots":2,"returnSlots":2},"@lengthOfToken_1631":{"entryPoint":437,"id":1631,"parameterSlots":0,"returnSlots":0},"@log10_1237":{"entryPoint":1350,"id":1237,"parameterSlots":1,"returnSlots":1},"@stringToSign_1780":{"entryPoint":443,"id":1780,"parameterSlots":1,"returnSlots":1},"@toHexString_153":{"entryPoint":778,"id":153,"parameterSlots":2,"returnSlots":1},"@toHexString_173":{"entryPoint":527,"id":173,"parameterSlots":1,"returnSlots":1},"@toString_57":{"entryPoint":572,"id":57,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address":{"entryPoint":1844,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1865,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address":{"entryPoint":1929,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2122,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2737,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2530,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack":{"entryPoint":3374,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2903,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2827,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2702,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack":{"entryPoint":1969,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":1954,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2261,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_storage_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_t_string_memory_ptr_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_t_string_memory_ptr_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2938,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2227,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3409,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__to_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2179,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2276,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":2509,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2035,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2046,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2498,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3193,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3127,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2350,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1803,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1771,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1944,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2063,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":3292,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2449,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2303,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":3080,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2402,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3245,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3033,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1766,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2105,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2":{"entryPoint":3333,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb":{"entryPoint":2862,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60":{"entryPoint":2786,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262":{"entryPoint":2661,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1821,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12930:10","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:10","statements":[{"nodeType":"YulAssignment","src":"57:19:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:10"},"nodeType":"YulFunctionCall","src":"67:9:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:10"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:10","type":""}],"src":"7:75:10"},{"body":{"nodeType":"YulBlock","src":"177:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:10"},"nodeType":"YulFunctionCall","src":"187:12:10"},"nodeType":"YulExpressionStatement","src":"187:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:10"},{"body":{"nodeType":"YulBlock","src":"300:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:10"},"nodeType":"YulFunctionCall","src":"310:12:10"},"nodeType":"YulExpressionStatement","src":"310:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:10"},{"body":{"nodeType":"YulBlock","src":"379:81:10","statements":[{"nodeType":"YulAssignment","src":"389:65:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:10"},"nodeType":"YulFunctionCall","src":"400:54:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:10"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:10","type":""}],"src":"334:126:10"},{"body":{"nodeType":"YulBlock","src":"511:51:10","statements":[{"nodeType":"YulAssignment","src":"521:35:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:10"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:10"},"nodeType":"YulFunctionCall","src":"532:24:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:10"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:10","type":""}],"src":"466:96:10"},{"body":{"nodeType":"YulBlock","src":"611:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:10"},"nodeType":"YulFunctionCall","src":"670:12:10"},"nodeType":"YulExpressionStatement","src":"670:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:10"},"nodeType":"YulFunctionCall","src":"641:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:10"},"nodeType":"YulFunctionCall","src":"631:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:10"},"nodeType":"YulFunctionCall","src":"624:43:10"},"nodeType":"YulIf","src":"621:63:10"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:10","type":""}],"src":"568:122:10"},{"body":{"nodeType":"YulBlock","src":"748:87:10","statements":[{"nodeType":"YulAssignment","src":"758:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:10"},"nodeType":"YulFunctionCall","src":"767:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:10"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:10"},"nodeType":"YulFunctionCall","src":"796:33:10"},"nodeType":"YulExpressionStatement","src":"796:33:10"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:10","type":""}],"src":"696:139:10"},{"body":{"nodeType":"YulBlock","src":"924:391:10","statements":[{"body":{"nodeType":"YulBlock","src":"970:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"972:77:10"},"nodeType":"YulFunctionCall","src":"972:79:10"},"nodeType":"YulExpressionStatement","src":"972:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"945:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"954:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"941:3:10"},"nodeType":"YulFunctionCall","src":"941:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"966:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"937:3:10"},"nodeType":"YulFunctionCall","src":"937:32:10"},"nodeType":"YulIf","src":"934:119:10"},{"nodeType":"YulBlock","src":"1063:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1078:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"1092:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:10","type":""}]},{"nodeType":"YulAssignment","src":"1107:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1142:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1153:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1138:3:10"},"nodeType":"YulFunctionCall","src":"1138:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1162:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1117:20:10"},"nodeType":"YulFunctionCall","src":"1117:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1107:6:10"}]}]},{"nodeType":"YulBlock","src":"1190:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1205:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"1219:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1209:6:10","type":""}]},{"nodeType":"YulAssignment","src":"1235:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1270:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1281:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1266:3:10"},"nodeType":"YulFunctionCall","src":"1266:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1290:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1245:20:10"},"nodeType":"YulFunctionCall","src":"1245:53:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1235:6:10"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"886:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"897:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"909:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"917:6:10","type":""}],"src":"841:474:10"},{"body":{"nodeType":"YulBlock","src":"1376:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1393:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1416:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1398:17:10"},"nodeType":"YulFunctionCall","src":"1398:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1386:6:10"},"nodeType":"YulFunctionCall","src":"1386:37:10"},"nodeType":"YulExpressionStatement","src":"1386:37:10"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1364:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1371:3:10","type":""}],"src":"1321:108:10"},{"body":{"nodeType":"YulBlock","src":"1480:32:10","statements":[{"nodeType":"YulAssignment","src":"1490:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"1501:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1490:7:10"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1462:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1472:7:10","type":""}],"src":"1435:77:10"},{"body":{"nodeType":"YulBlock","src":"1573:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1590:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1613:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1595:17:10"},"nodeType":"YulFunctionCall","src":"1595:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1583:6:10"},"nodeType":"YulFunctionCall","src":"1583:37:10"},"nodeType":"YulExpressionStatement","src":"1583:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1561:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1568:3:10","type":""}],"src":"1518:108:10"},{"body":{"nodeType":"YulBlock","src":"1846:572:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1856:26:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1872:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"1877:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1868:3:10"},"nodeType":"YulFunctionCall","src":"1868:14:10"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"1860:4:10","type":""}]},{"nodeType":"YulBlock","src":"1892:165:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1928:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1958:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"1965:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1954:3:10"},"nodeType":"YulFunctionCall","src":"1954:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1948:5:10"},"nodeType":"YulFunctionCall","src":"1948:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"1932:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"2018:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2036:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"2041:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2032:3:10"},"nodeType":"YulFunctionCall","src":"2032:14:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"1984:33:10"},"nodeType":"YulFunctionCall","src":"1984:63:10"},"nodeType":"YulExpressionStatement","src":"1984:63:10"}]},{"nodeType":"YulBlock","src":"2067:166:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2104:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2134:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"2141:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2130:3:10"},"nodeType":"YulFunctionCall","src":"2130:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2124:5:10"},"nodeType":"YulFunctionCall","src":"2124:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"2108:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"2194:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2212:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"2217:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2208:3:10"},"nodeType":"YulFunctionCall","src":"2208:14:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"2160:33:10"},"nodeType":"YulFunctionCall","src":"2160:63:10"},"nodeType":"YulExpressionStatement","src":"2160:63:10"}]},{"nodeType":"YulBlock","src":"2243:168:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2282:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2312:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"2319:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2308:3:10"},"nodeType":"YulFunctionCall","src":"2308:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2302:5:10"},"nodeType":"YulFunctionCall","src":"2302:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"2286:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"2372:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2390:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"2395:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2386:3:10"},"nodeType":"YulFunctionCall","src":"2386:14:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2338:33:10"},"nodeType":"YulFunctionCall","src":"2338:63:10"},"nodeType":"YulExpressionStatement","src":"2338:63:10"}]}]},"name":"abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1833:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1840:3:10","type":""}],"src":"1720:698:10"},{"body":{"nodeType":"YulBlock","src":"2483:40:10","statements":[{"nodeType":"YulAssignment","src":"2494:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2510:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2504:5:10"},"nodeType":"YulFunctionCall","src":"2504:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2494:6:10"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2466:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2476:6:10","type":""}],"src":"2424:99:10"},{"body":{"nodeType":"YulBlock","src":"2625:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2642:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"2647:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2635:6:10"},"nodeType":"YulFunctionCall","src":"2635:19:10"},"nodeType":"YulExpressionStatement","src":"2635:19:10"},{"nodeType":"YulAssignment","src":"2663:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2682:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"2687:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2678:3:10"},"nodeType":"YulFunctionCall","src":"2678:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2663:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2597:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"2602:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2613:11:10","type":""}],"src":"2529:169:10"},{"body":{"nodeType":"YulBlock","src":"2766:184:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2785:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2780:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"2845:63:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2870:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"2875:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2866:3:10"},"nodeType":"YulFunctionCall","src":"2866:11:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2889:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"2894:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2885:3:10"},"nodeType":"YulFunctionCall","src":"2885:11:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2879:5:10"},"nodeType":"YulFunctionCall","src":"2879:18:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2859:6:10"},"nodeType":"YulFunctionCall","src":"2859:39:10"},"nodeType":"YulExpressionStatement","src":"2859:39:10"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2806:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"2809:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2803:2:10"},"nodeType":"YulFunctionCall","src":"2803:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2817:19:10","statements":[{"nodeType":"YulAssignment","src":"2819:15:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2828:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"2831:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2824:3:10"},"nodeType":"YulFunctionCall","src":"2824:10:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2819:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"2799:3:10","statements":[]},"src":"2795:113:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2928:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"2933:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2924:3:10"},"nodeType":"YulFunctionCall","src":"2924:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"2942:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2917:6:10"},"nodeType":"YulFunctionCall","src":"2917:27:10"},"nodeType":"YulExpressionStatement","src":"2917:27:10"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2748:3:10","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2753:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"2758:6:10","type":""}],"src":"2704:246:10"},{"body":{"nodeType":"YulBlock","src":"3004:54:10","statements":[{"nodeType":"YulAssignment","src":"3014:38:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3032:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"3039:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3028:3:10"},"nodeType":"YulFunctionCall","src":"3028:14:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3048:2:10","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3044:3:10"},"nodeType":"YulFunctionCall","src":"3044:7:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3024:3:10"},"nodeType":"YulFunctionCall","src":"3024:28:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3014:6:10"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2987:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2997:6:10","type":""}],"src":"2956:102:10"},{"body":{"nodeType":"YulBlock","src":"3156:285:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3166:53:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3213:5:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3180:32:10"},"nodeType":"YulFunctionCall","src":"3180:39:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3170:6:10","type":""}]},{"nodeType":"YulAssignment","src":"3228:78:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3294:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"3299:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3235:58:10"},"nodeType":"YulFunctionCall","src":"3235:71:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3228:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3354:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"3361:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3350:3:10"},"nodeType":"YulFunctionCall","src":"3350:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"3368:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"3373:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"3315:34:10"},"nodeType":"YulFunctionCall","src":"3315:65:10"},"nodeType":"YulExpressionStatement","src":"3315:65:10"},{"nodeType":"YulAssignment","src":"3389:46:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3400:3:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3427:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3405:21:10"},"nodeType":"YulFunctionCall","src":"3405:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3396:3:10"},"nodeType":"YulFunctionCall","src":"3396:39:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3389:3:10"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3137:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3144:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3152:3:10","type":""}],"src":"3064:377:10"},{"body":{"nodeType":"YulBlock","src":"3653:338:10","statements":[{"nodeType":"YulAssignment","src":"3663:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3675:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3686:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3671:3:10"},"nodeType":"YulFunctionCall","src":"3671:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3663:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3804:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3817:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3828:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3813:3:10"},"nodeType":"YulFunctionCall","src":"3813:17:10"}],"functionName":{"name":"abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3700:103:10"},"nodeType":"YulFunctionCall","src":"3700:131:10"},"nodeType":"YulExpressionStatement","src":"3700:131:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3852:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3863:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3848:3:10"},"nodeType":"YulFunctionCall","src":"3848:18:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3872:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"3878:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3868:3:10"},"nodeType":"YulFunctionCall","src":"3868:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3841:6:10"},"nodeType":"YulFunctionCall","src":"3841:48:10"},"nodeType":"YulExpressionStatement","src":"3841:48:10"},{"nodeType":"YulAssignment","src":"3898:86:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3970:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"3979:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3906:63:10"},"nodeType":"YulFunctionCall","src":"3906:78:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3898:4:10"}]}]},"name":"abi_encode_tuple_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__to_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3617:9:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3629:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3637:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3648:4:10","type":""}],"src":"3447:544:10"},{"body":{"nodeType":"YulBlock","src":"4115:195:10","statements":[{"nodeType":"YulAssignment","src":"4125:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4137:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4148:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4133:3:10"},"nodeType":"YulFunctionCall","src":"4133:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4125:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4172:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4183:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4168:3:10"},"nodeType":"YulFunctionCall","src":"4168:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4191:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"4197:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4187:3:10"},"nodeType":"YulFunctionCall","src":"4187:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4161:6:10"},"nodeType":"YulFunctionCall","src":"4161:47:10"},"nodeType":"YulExpressionStatement","src":"4161:47:10"},{"nodeType":"YulAssignment","src":"4217:86:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4289:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"4298:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4225:63:10"},"nodeType":"YulFunctionCall","src":"4225:78:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4217:4:10"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4087:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4099:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4110:4:10","type":""}],"src":"3997:313:10"},{"body":{"nodeType":"YulBlock","src":"4381:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4398:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4421:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4403:17:10"},"nodeType":"YulFunctionCall","src":"4403:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4391:6:10"},"nodeType":"YulFunctionCall","src":"4391:37:10"},"nodeType":"YulExpressionStatement","src":"4391:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4369:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4376:3:10","type":""}],"src":"4316:118:10"},{"body":{"nodeType":"YulBlock","src":"4538:124:10","statements":[{"nodeType":"YulAssignment","src":"4548:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4560:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4571:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4556:3:10"},"nodeType":"YulFunctionCall","src":"4556:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4548:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4628:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4641:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4652:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4637:3:10"},"nodeType":"YulFunctionCall","src":"4637:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4584:43:10"},"nodeType":"YulFunctionCall","src":"4584:71:10"},"nodeType":"YulExpressionStatement","src":"4584:71:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4510:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4522:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4533:4:10","type":""}],"src":"4440:222:10"},{"body":{"nodeType":"YulBlock","src":"4696:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4713:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4716:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4706:6:10"},"nodeType":"YulFunctionCall","src":"4706:88:10"},"nodeType":"YulExpressionStatement","src":"4706:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4810:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4813:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4803:6:10"},"nodeType":"YulFunctionCall","src":"4803:15:10"},"nodeType":"YulExpressionStatement","src":"4803:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4834:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4837:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4827:6:10"},"nodeType":"YulFunctionCall","src":"4827:15:10"},"nodeType":"YulExpressionStatement","src":"4827:15:10"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4668:180:10"},{"body":{"nodeType":"YulBlock","src":"4899:149:10","statements":[{"nodeType":"YulAssignment","src":"4909:25:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4932:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4914:17:10"},"nodeType":"YulFunctionCall","src":"4914:20:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"4909:1:10"}]},{"nodeType":"YulAssignment","src":"4943:25:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4966:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4948:17:10"},"nodeType":"YulFunctionCall","src":"4948:20:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"4943:1:10"}]},{"nodeType":"YulAssignment","src":"4977:17:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4989:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"4992:1:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4985:3:10"},"nodeType":"YulFunctionCall","src":"4985:9:10"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"4977:4:10"}]},{"body":{"nodeType":"YulBlock","src":"5019:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5021:16:10"},"nodeType":"YulFunctionCall","src":"5021:18:10"},"nodeType":"YulExpressionStatement","src":"5021:18:10"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"5010:4:10"},{"name":"x","nodeType":"YulIdentifier","src":"5016:1:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5007:2:10"},"nodeType":"YulFunctionCall","src":"5007:11:10"},"nodeType":"YulIf","src":"5004:37:10"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4885:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"4888:1:10","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"4894:4:10","type":""}],"src":"4854:194:10"},{"body":{"nodeType":"YulBlock","src":"5082:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5099:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5102:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5092:6:10"},"nodeType":"YulFunctionCall","src":"5092:88:10"},"nodeType":"YulExpressionStatement","src":"5092:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5196:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5199:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5189:6:10"},"nodeType":"YulFunctionCall","src":"5189:15:10"},"nodeType":"YulExpressionStatement","src":"5189:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5220:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5223:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5213:6:10"},"nodeType":"YulFunctionCall","src":"5213:15:10"},"nodeType":"YulExpressionStatement","src":"5213:15:10"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5054:180:10"},{"body":{"nodeType":"YulBlock","src":"5291:269:10","statements":[{"nodeType":"YulAssignment","src":"5301:22:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5315:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"5321:1:10","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5311:3:10"},"nodeType":"YulFunctionCall","src":"5311:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5301:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"5332:38:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5362:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"5368:1:10","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5358:3:10"},"nodeType":"YulFunctionCall","src":"5358:12:10"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5336:18:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"5409:51:10","statements":[{"nodeType":"YulAssignment","src":"5423:27:10","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5437:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"5445:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5433:3:10"},"nodeType":"YulFunctionCall","src":"5433:17:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5423:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5389:18:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5382:6:10"},"nodeType":"YulFunctionCall","src":"5382:26:10"},"nodeType":"YulIf","src":"5379:81:10"},{"body":{"nodeType":"YulBlock","src":"5512:42:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"5526:16:10"},"nodeType":"YulFunctionCall","src":"5526:18:10"},"nodeType":"YulExpressionStatement","src":"5526:18:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5476:18:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5499:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"5507:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5496:2:10"},"nodeType":"YulFunctionCall","src":"5496:14:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5473:2:10"},"nodeType":"YulFunctionCall","src":"5473:38:10"},"nodeType":"YulIf","src":"5470:84:10"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5275:4:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5284:6:10","type":""}],"src":"5240:320:10"},{"body":{"nodeType":"YulBlock","src":"5680:34:10","statements":[{"nodeType":"YulAssignment","src":"5690:18:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"5705:3:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5690:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5652:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"5657:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5668:11:10","type":""}],"src":"5566:148:10"},{"body":{"nodeType":"YulBlock","src":"5774:87:10","statements":[{"nodeType":"YulAssignment","src":"5784:11:10","value":{"name":"ptr","nodeType":"YulIdentifier","src":"5792:3:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5784:4:10"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5812:1:10","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"5815:3:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5805:6:10"},"nodeType":"YulFunctionCall","src":"5805:14:10"},"nodeType":"YulExpressionStatement","src":"5805:14:10"},{"nodeType":"YulAssignment","src":"5828:26:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5846:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5849:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5836:9:10"},"nodeType":"YulFunctionCall","src":"5836:18:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5828:4:10"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"5761:3:10","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"5769:4:10","type":""}],"src":"5720:141:10"},{"body":{"nodeType":"YulBlock","src":"5998:767:10","statements":[{"nodeType":"YulVariableDeclaration","src":"6008:29:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6031:5:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6025:5:10"},"nodeType":"YulFunctionCall","src":"6025:12:10"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"6012:9:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6046:50:10","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"6086:9:10"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"6060:25:10"},"nodeType":"YulFunctionCall","src":"6060:36:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6050:6:10","type":""}]},{"nodeType":"YulAssignment","src":"6105:96:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6189:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"6194:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6112:76:10"},"nodeType":"YulFunctionCall","src":"6112:89:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6105:3:10"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"6250:159:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6303:3:10"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"6312:9:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6327:4:10","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6323:3:10"},"nodeType":"YulFunctionCall","src":"6323:9:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6308:3:10"},"nodeType":"YulFunctionCall","src":"6308:25:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6296:6:10"},"nodeType":"YulFunctionCall","src":"6296:38:10"},"nodeType":"YulExpressionStatement","src":"6296:38:10"},{"nodeType":"YulAssignment","src":"6347:52:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6358:3:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6367:6:10"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6389:6:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6382:6:10"},"nodeType":"YulFunctionCall","src":"6382:14:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6375:6:10"},"nodeType":"YulFunctionCall","src":"6375:22:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6363:3:10"},"nodeType":"YulFunctionCall","src":"6363:35:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6354:3:10"},"nodeType":"YulFunctionCall","src":"6354:45:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6347:3:10"}]}]},"nodeType":"YulCase","src":"6243:166:10","value":{"kind":"number","nodeType":"YulLiteral","src":"6248:1:10","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"6425:334:10","statements":[{"nodeType":"YulVariableDeclaration","src":"6470:53:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6517:5:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6485:31:10"},"nodeType":"YulFunctionCall","src":"6485:38:10"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"6474:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6536:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"6545:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6540:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"6603:110:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6632:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"6637:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6628:3:10"},"nodeType":"YulFunctionCall","src":"6628:11:10"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"6647:7:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6641:5:10"},"nodeType":"YulFunctionCall","src":"6641:14:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6621:6:10"},"nodeType":"YulFunctionCall","src":"6621:35:10"},"nodeType":"YulExpressionStatement","src":"6621:35:10"},{"nodeType":"YulAssignment","src":"6673:26:10","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"6688:7:10"},{"kind":"number","nodeType":"YulLiteral","src":"6697:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6684:3:10"},"nodeType":"YulFunctionCall","src":"6684:15:10"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"6673:7:10"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6570:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"6573:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6567:2:10"},"nodeType":"YulFunctionCall","src":"6567:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6581:21:10","statements":[{"nodeType":"YulAssignment","src":"6583:17:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6592:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"6595:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6588:3:10"},"nodeType":"YulFunctionCall","src":"6588:12:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6583:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"6563:3:10","statements":[]},"src":"6559:154:10"},{"nodeType":"YulAssignment","src":"6726:23:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6737:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"6742:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6733:3:10"},"nodeType":"YulFunctionCall","src":"6733:16:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6726:3:10"}]}]},"nodeType":"YulCase","src":"6418:341:10","value":{"kind":"number","nodeType":"YulLiteral","src":"6423:1:10","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"6221:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6232:1:10","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6217:3:10"},"nodeType":"YulFunctionCall","src":"6217:17:10"},"nodeType":"YulSwitch","src":"6210:549:10"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5979:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5986:3:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5994:3:10","type":""}],"src":"5891:874:10"},{"body":{"nodeType":"YulBlock","src":"6877:108:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6899:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"6907:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6895:3:10"},"nodeType":"YulFunctionCall","src":"6895:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"6911:66:10","type":"","value":"0x0a0a4d653a200000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6888:6:10"},"nodeType":"YulFunctionCall","src":"6888:90:10"},"nodeType":"YulExpressionStatement","src":"6888:90:10"}]},"name":"store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6869:6:10","type":""}],"src":"6771:214:10"},{"body":{"nodeType":"YulBlock","src":"7155:236:10","statements":[{"nodeType":"YulAssignment","src":"7165:91:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7249:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"7254:1:10","type":"","value":"6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7172:76:10"},"nodeType":"YulFunctionCall","src":"7172:84:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7165:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7354:3:10"}],"functionName":{"name":"store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262","nodeType":"YulIdentifier","src":"7265:88:10"},"nodeType":"YulFunctionCall","src":"7265:93:10"},"nodeType":"YulExpressionStatement","src":"7265:93:10"},{"nodeType":"YulAssignment","src":"7367:18:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7378:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"7383:1:10","type":"","value":"6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7374:3:10"},"nodeType":"YulFunctionCall","src":"7374:11:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7367:3:10"}]}]},"name":"abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7143:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7151:3:10","type":""}],"src":"6991:400:10"},{"body":{"nodeType":"YulBlock","src":"7507:280:10","statements":[{"nodeType":"YulVariableDeclaration","src":"7517:53:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7564:5:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7531:32:10"},"nodeType":"YulFunctionCall","src":"7531:39:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7521:6:10","type":""}]},{"nodeType":"YulAssignment","src":"7579:96:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7663:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"7668:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7586:76:10"},"nodeType":"YulFunctionCall","src":"7586:89:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7579:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7723:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"7730:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7719:3:10"},"nodeType":"YulFunctionCall","src":"7719:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"7737:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"7742:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7684:34:10"},"nodeType":"YulFunctionCall","src":"7684:65:10"},"nodeType":"YulExpressionStatement","src":"7684:65:10"},{"nodeType":"YulAssignment","src":"7758:23:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7769:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"7774:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7765:3:10"},"nodeType":"YulFunctionCall","src":"7765:16:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7758:3:10"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7488:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7495:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7503:3:10","type":""}],"src":"7397:390:10"},{"body":{"nodeType":"YulBlock","src":"7899:108:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7921:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"7929:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7917:3:10"},"nodeType":"YulFunctionCall","src":"7917:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"7933:66:10","type":"","value":"0x0a4465766963653a200000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7910:6:10"},"nodeType":"YulFunctionCall","src":"7910:90:10"},"nodeType":"YulExpressionStatement","src":"7910:90:10"}]},"name":"store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7891:6:10","type":""}],"src":"7793:214:10"},{"body":{"nodeType":"YulBlock","src":"8177:236:10","statements":[{"nodeType":"YulAssignment","src":"8187:91:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8271:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"8276:1:10","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8194:76:10"},"nodeType":"YulFunctionCall","src":"8194:84:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8187:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8376:3:10"}],"functionName":{"name":"store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60","nodeType":"YulIdentifier","src":"8287:88:10"},"nodeType":"YulFunctionCall","src":"8287:93:10"},"nodeType":"YulExpressionStatement","src":"8287:93:10"},{"nodeType":"YulAssignment","src":"8389:18:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8400:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"8405:1:10","type":"","value":"9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8396:3:10"},"nodeType":"YulFunctionCall","src":"8396:11:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8389:3:10"}]}]},"name":"abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8165:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8173:3:10","type":""}],"src":"8013:400:10"},{"body":{"nodeType":"YulBlock","src":"8525:108:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8547:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"8555:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8543:3:10"},"nodeType":"YulFunctionCall","src":"8543:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"8559:66:10","type":"","value":"0x0a4973737565642061743a200000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8536:6:10"},"nodeType":"YulFunctionCall","src":"8536:90:10"},"nodeType":"YulExpressionStatement","src":"8536:90:10"}]},"name":"store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8517:6:10","type":""}],"src":"8419:214:10"},{"body":{"nodeType":"YulBlock","src":"8803:238:10","statements":[{"nodeType":"YulAssignment","src":"8813:92:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8897:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"8902:2:10","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8820:76:10"},"nodeType":"YulFunctionCall","src":"8820:85:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8813:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9003:3:10"}],"functionName":{"name":"store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb","nodeType":"YulIdentifier","src":"8914:88:10"},"nodeType":"YulFunctionCall","src":"8914:93:10"},"nodeType":"YulExpressionStatement","src":"8914:93:10"},{"nodeType":"YulAssignment","src":"9016:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9027:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"9032:2:10","type":"","value":"12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9023:3:10"},"nodeType":"YulFunctionCall","src":"9023:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9016:3:10"}]}]},"name":"abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8791:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8799:3:10","type":""}],"src":"8639:402:10"},{"body":{"nodeType":"YulBlock","src":"9627:967:10","statements":[{"nodeType":"YulAssignment","src":"9638:99:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9724:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"9733:3:10"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"9645:78:10"},"nodeType":"YulFunctionCall","src":"9645:92:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9638:3:10"}]},{"nodeType":"YulAssignment","src":"9747:155:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9898:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"9754:142:10"},"nodeType":"YulFunctionCall","src":"9754:148:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9747:3:10"}]},{"nodeType":"YulAssignment","src":"9912:102:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10001:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"10010:3:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"9919:81:10"},"nodeType":"YulFunctionCall","src":"9919:95:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9912:3:10"}]},{"nodeType":"YulAssignment","src":"10024:155:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10175:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10031:142:10"},"nodeType":"YulFunctionCall","src":"10031:148:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10024:3:10"}]},{"nodeType":"YulAssignment","src":"10189:102:10","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10278:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"10287:3:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10196:81:10"},"nodeType":"YulFunctionCall","src":"10196:95:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10189:3:10"}]},{"nodeType":"YulAssignment","src":"10301:155:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10452:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10308:142:10"},"nodeType":"YulFunctionCall","src":"10308:148:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10301:3:10"}]},{"nodeType":"YulAssignment","src":"10466:102:10","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10555:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"10564:3:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10473:81:10"},"nodeType":"YulFunctionCall","src":"10473:95:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10466:3:10"}]},{"nodeType":"YulAssignment","src":"10578:10:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"10585:3:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10578:3:10"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_t_string_memory_ptr_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_t_string_memory_ptr_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9582:3:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9588:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9596:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9604:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9612:6:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9623:3:10","type":""}],"src":"9047:1547:10"},{"body":{"nodeType":"YulBlock","src":"10628:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10645:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10648:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10638:6:10"},"nodeType":"YulFunctionCall","src":"10638:88:10"},"nodeType":"YulExpressionStatement","src":"10638:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10742:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10745:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10735:6:10"},"nodeType":"YulFunctionCall","src":"10735:15:10"},"nodeType":"YulExpressionStatement","src":"10735:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10766:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10769:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10759:6:10"},"nodeType":"YulFunctionCall","src":"10759:15:10"},"nodeType":"YulExpressionStatement","src":"10759:15:10"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"10600:180:10"},{"body":{"nodeType":"YulBlock","src":"10814:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10831:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10834:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10824:6:10"},"nodeType":"YulFunctionCall","src":"10824:88:10"},"nodeType":"YulExpressionStatement","src":"10824:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10928:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10931:4:10","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10921:6:10"},"nodeType":"YulFunctionCall","src":"10921:15:10"},"nodeType":"YulExpressionStatement","src":"10921:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10952:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10955:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10945:6:10"},"nodeType":"YulFunctionCall","src":"10945:15:10"},"nodeType":"YulExpressionStatement","src":"10945:15:10"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"10786:180:10"},{"body":{"nodeType":"YulBlock","src":"11020:362:10","statements":[{"nodeType":"YulAssignment","src":"11030:25:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11053:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11035:17:10"},"nodeType":"YulFunctionCall","src":"11035:20:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11030:1:10"}]},{"nodeType":"YulAssignment","src":"11064:25:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11087:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11069:17:10"},"nodeType":"YulFunctionCall","src":"11069:20:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11064:1:10"}]},{"nodeType":"YulVariableDeclaration","src":"11098:28:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11121:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"11124:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11117:3:10"},"nodeType":"YulFunctionCall","src":"11117:9:10"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"11102:11:10","type":""}]},{"nodeType":"YulAssignment","src":"11135:41:10","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"11164:11:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11146:17:10"},"nodeType":"YulFunctionCall","src":"11146:30:10"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"11135:7:10"}]},{"body":{"nodeType":"YulBlock","src":"11353:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11355:16:10"},"nodeType":"YulFunctionCall","src":"11355:18:10"},"nodeType":"YulExpressionStatement","src":"11355:18:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11286:1:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11279:6:10"},"nodeType":"YulFunctionCall","src":"11279:9:10"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11309:1:10"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"11316:7:10"},{"name":"x","nodeType":"YulIdentifier","src":"11325:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11312:3:10"},"nodeType":"YulFunctionCall","src":"11312:15:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11306:2:10"},"nodeType":"YulFunctionCall","src":"11306:22:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11259:2:10"},"nodeType":"YulFunctionCall","src":"11259:83:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11239:6:10"},"nodeType":"YulFunctionCall","src":"11239:113:10"},"nodeType":"YulIf","src":"11236:139:10"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11003:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"11006:1:10","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"11012:7:10","type":""}],"src":"10972:410:10"},{"body":{"nodeType":"YulBlock","src":"11432:147:10","statements":[{"nodeType":"YulAssignment","src":"11442:25:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11465:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11447:17:10"},"nodeType":"YulFunctionCall","src":"11447:20:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11442:1:10"}]},{"nodeType":"YulAssignment","src":"11476:25:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11499:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11481:17:10"},"nodeType":"YulFunctionCall","src":"11481:20:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11476:1:10"}]},{"nodeType":"YulAssignment","src":"11510:16:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11521:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"11524:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11517:3:10"},"nodeType":"YulFunctionCall","src":"11517:9:10"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"11510:3:10"}]},{"body":{"nodeType":"YulBlock","src":"11550:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11552:16:10"},"nodeType":"YulFunctionCall","src":"11552:18:10"},"nodeType":"YulExpressionStatement","src":"11552:18:10"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11542:1:10"},{"name":"sum","nodeType":"YulIdentifier","src":"11545:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11539:2:10"},"nodeType":"YulFunctionCall","src":"11539:10:10"},"nodeType":"YulIf","src":"11536:36:10"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11419:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"11422:1:10","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11428:3:10","type":""}],"src":"11388:191:10"},{"body":{"nodeType":"YulBlock","src":"11613:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11630:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11633:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11623:6:10"},"nodeType":"YulFunctionCall","src":"11623:88:10"},"nodeType":"YulExpressionStatement","src":"11623:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11727:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11730:4:10","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11720:6:10"},"nodeType":"YulFunctionCall","src":"11720:15:10"},"nodeType":"YulExpressionStatement","src":"11720:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11751:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11754:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11744:6:10"},"nodeType":"YulFunctionCall","src":"11744:15:10"},"nodeType":"YulExpressionStatement","src":"11744:15:10"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"11585:180:10"},{"body":{"nodeType":"YulBlock","src":"11814:128:10","statements":[{"nodeType":"YulAssignment","src":"11824:33:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11851:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11833:17:10"},"nodeType":"YulFunctionCall","src":"11833:24:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11824:5:10"}]},{"body":{"nodeType":"YulBlock","src":"11885:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11887:16:10"},"nodeType":"YulFunctionCall","src":"11887:18:10"},"nodeType":"YulExpressionStatement","src":"11887:18:10"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11872:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"11879:4:10","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11869:2:10"},"nodeType":"YulFunctionCall","src":"11869:15:10"},"nodeType":"YulIf","src":"11866:41:10"},{"nodeType":"YulAssignment","src":"11916:20:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11927:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"11934:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11923:3:10"},"nodeType":"YulFunctionCall","src":"11923:13:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11916:3:10"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11800:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11810:3:10","type":""}],"src":"11771:171:10"},{"body":{"nodeType":"YulBlock","src":"12054:76:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12076:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"12084:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12072:3:10"},"nodeType":"YulFunctionCall","src":"12072:14:10"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"12088:34:10","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12065:6:10"},"nodeType":"YulFunctionCall","src":"12065:58:10"},"nodeType":"YulExpressionStatement","src":"12065:58:10"}]},"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12046:6:10","type":""}],"src":"11948:182:10"},{"body":{"nodeType":"YulBlock","src":"12282:220:10","statements":[{"nodeType":"YulAssignment","src":"12292:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12358:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"12363:2:10","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12299:58:10"},"nodeType":"YulFunctionCall","src":"12299:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12292:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12464:3:10"}],"functionName":{"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulIdentifier","src":"12375:88:10"},"nodeType":"YulFunctionCall","src":"12375:93:10"},"nodeType":"YulExpressionStatement","src":"12375:93:10"},{"nodeType":"YulAssignment","src":"12477:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12488:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"12493:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12484:3:10"},"nodeType":"YulFunctionCall","src":"12484:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12477:3:10"}]}]},"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12270:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12278:3:10","type":""}],"src":"12136:366:10"},{"body":{"nodeType":"YulBlock","src":"12679:248:10","statements":[{"nodeType":"YulAssignment","src":"12689:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12701:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12712:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12697:3:10"},"nodeType":"YulFunctionCall","src":"12697:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12689:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12736:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12747:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12732:3:10"},"nodeType":"YulFunctionCall","src":"12732:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12755:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"12761:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12751:3:10"},"nodeType":"YulFunctionCall","src":"12751:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12725:6:10"},"nodeType":"YulFunctionCall","src":"12725:47:10"},"nodeType":"YulExpressionStatement","src":"12725:47:10"},{"nodeType":"YulAssignment","src":"12781:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12915:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12789:124:10"},"nodeType":"YulFunctionCall","src":"12789:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12781:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12659:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12674:4:10","type":""}],"src":"12508:419:10"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct TokenAuthenticated.TokenRequest -> struct TokenAuthenticated.TokenRequest\n    function abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // device\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // issuedAt\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__to_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262(memPtr) {\n\n        mstore(add(memPtr, 0), 0x0a0a4d653a200000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 6)\n        store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262(pos)\n        end := add(pos, 6)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60(memPtr) {\n\n        mstore(add(memPtr, 0), 0x0a4465766963653a200000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n        store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60(pos)\n        end := add(pos, 9)\n    }\n\n    function store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb(memPtr) {\n\n        mstore(add(memPtr, 0), 0x0a4973737565642061743a200000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 12)\n        store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb(pos)\n        end := add(pos, 12)\n    }\n\n    function abi_encode_tuple_packed_t_string_storage_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_t_string_memory_ptr_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_t_string_memory_ptr_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value3, value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        pos := abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value3,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c8063b6ad16a814610046578063bebc479c14610077578063cb2e604314610095575b600080fd5b610060600480360381019061005b9190610749565b6100b3565b60405161006e929190610883565b60405180910390f35b61007f610127565b60405161008c91906108b3565b60405180910390f35b61009d6101b5565b6040516100aa91906108e4565b60405180910390f35b6100bb610699565b606060405180606001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200160014361010d919061092e565b81525091508161011c836101bb565b915091509250929050565b6000805461013490610991565b80601f016020809104026020016040519081016040528092919081815260200182805461016090610991565b80156101ad5780601f10610182576101008083540402835291602001916101ad565b820191906000526020600020905b81548152906001019060200180831161019057829003601f168201915b505050505081565b60015481565b606060006101cc836000015161020f565b6101d9846020015161020f565b6101e6856040015161023c565b6040516020016101f99493929190610b7a565b6040516020818303038152906040529050919050565b60606102358273ffffffffffffffffffffffffffffffffffffffff16601460ff1661030a565b9050919050565b60606000600161024b84610546565b01905060008167ffffffffffffffff81111561026a57610269610bd9565b5b6040519080825280601f01601f19166020018201604052801561029c5781602001600182028036833780820191505090505b509050600082602001820190505b6001156102ff578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816102f3576102f2610c08565b5b049450600085036102aa575b819350505050919050565b60606000600283600261031d9190610c37565b6103279190610c79565b67ffffffffffffffff8111156103405761033f610bd9565b5b6040519080825280601f01601f1916602001820160405280156103725781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106103aa576103a9610cad565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061040e5761040d610cad565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261044e9190610c37565b6104589190610c79565b90505b60018111156104f8577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061049a57610499610cad565b5b1a60f81b8282815181106104b1576104b0610cad565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806104f190610cdc565b905061045b565b506000841461053c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053390610d51565b60405180910390fd5b8091505092915050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106105a4577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161059a57610599610c08565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106105e1576d04ee2d6d415b85acef810000000083816105d7576105d6610c08565b5b0492506020810190505b662386f26fc10000831061061057662386f26fc10000838161060657610605610c08565b5b0492506010810190505b6305f5e1008310610639576305f5e100838161062f5761062e610c08565b5b0492506008810190505b612710831061065e57612710838161065457610653610c08565b5b0492506004810190505b60648310610681576064838161067757610676610c08565b5b0492506002810190505b600a8310610690576001810190505b80915050919050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610716826106eb565b9050919050565b6107268161070b565b811461073157600080fd5b50565b6000813590506107438161071d565b92915050565b600080604083850312156107605761075f6106e6565b5b600061076e85828601610734565b925050602061077f85828601610734565b9150509250929050565b6107928161070b565b82525050565b6000819050919050565b6107ab81610798565b82525050565b6060820160008201516107c76000850182610789565b5060208201516107da6020850182610789565b5060408201516107ed60408501826107a2565b50505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561082d578082015181840152602081019050610812565b60008484015250505050565b6000601f19601f8301169050919050565b6000610855826107f3565b61085f81856107fe565b935061086f81856020860161080f565b61087881610839565b840191505092915050565b600060808201905061089860008301856107b1565b81810360608301526108aa818461084a565b90509392505050565b600060208201905081810360008301526108cd818461084a565b905092915050565b6108de81610798565b82525050565b60006020820190506108f960008301846108d5565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061093982610798565b915061094483610798565b925082820390508181111561095c5761095b6108ff565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806109a957607f821691505b6020821081036109bc576109bb610962565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546109ef81610991565b6109f981866109c2565b94506001821660008114610a145760018114610a2957610a5c565b60ff1983168652811515820286019350610a5c565b610a32856109cd565b60005b83811015610a5457815481890152600182019150602081019050610a35565b838801955050505b50505092915050565b7f0a0a4d653a200000000000000000000000000000000000000000000000000000600082015250565b6000610a9b6006836109c2565b9150610aa682610a65565b600682019050919050565b6000610abc826107f3565b610ac681856109c2565b9350610ad681856020860161080f565b80840191505092915050565b7f0a4465766963653a200000000000000000000000000000000000000000000000600082015250565b6000610b186009836109c2565b9150610b2382610ae2565b600982019050919050565b7f0a4973737565642061743a200000000000000000000000000000000000000000600082015250565b6000610b64600c836109c2565b9150610b6f82610b2e565b600c82019050919050565b6000610b8682876109e2565b9150610b9182610a8e565b9150610b9d8286610ab1565b9150610ba882610b0b565b9150610bb48285610ab1565b9150610bbf82610b57565b9150610bcb8284610ab1565b915081905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c4282610798565b9150610c4d83610798565b9250828202610c5b81610798565b91508282048414831517610c7257610c716108ff565b5b5092915050565b6000610c8482610798565b9150610c8f83610798565b9250828201905080821115610ca757610ca66108ff565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ce782610798565b915060008203610cfa57610cf96108ff565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000610d3b6020836107fe565b9150610d4682610d05565b602082019050919050565b60006020820190508181036000830152610d6a81610d2e565b905091905056fea26469706673582212200ade801375e2768b8981495412ed4fd9b296a1c822289d1badaac68bdc78164264736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB6AD16A8 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBEBC479C EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xCB2E6043 EQ PUSH2 0x95 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x749 JUMP JUMPDEST PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP3 SWAP2 SWAP1 PUSH2 0x883 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0x127 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9D PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x699 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 NUMBER PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x92E JUMP JUMPDEST DUP2 MSTORE POP SWAP2 POP DUP2 PUSH2 0x11C DUP4 PUSH2 0x1BB JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x134 SWAP1 PUSH2 0x991 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x160 SWAP1 PUSH2 0x991 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x182 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x190 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1CC DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x20F JUMP JUMPDEST PUSH2 0x1D9 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x20F JUMP JUMPDEST PUSH2 0x1E6 DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x235 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x30A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x24B DUP5 PUSH2 0x546 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26A JUMPI PUSH2 0x269 PUSH2 0xBD9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x2FF JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2F3 JUMPI PUSH2 0x2F2 PUSH2 0xC08 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x2AA JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x327 SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x340 JUMPI PUSH2 0x33F PUSH2 0xBD9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x372 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3AA JUMPI PUSH2 0x3A9 PUSH2 0xCAD JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x40E JUMPI PUSH2 0x40D PUSH2 0xCAD JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x44E SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x458 SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4F8 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x49A JUMPI PUSH2 0x499 PUSH2 0xCAD JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4B1 JUMPI PUSH2 0x4B0 PUSH2 0xCAD JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x4F1 SWAP1 PUSH2 0xCDC JUMP JUMPDEST SWAP1 POP PUSH2 0x45B JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x533 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x5A4 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x59A JUMPI PUSH2 0x599 PUSH2 0xC08 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x5E1 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x5D7 JUMPI PUSH2 0x5D6 PUSH2 0xC08 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x610 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x606 JUMPI PUSH2 0x605 PUSH2 0xC08 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x639 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x62F JUMPI PUSH2 0x62E PUSH2 0xC08 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x65E JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x654 JUMPI PUSH2 0x653 PUSH2 0xC08 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x681 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x677 JUMPI PUSH2 0x676 PUSH2 0xC08 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x690 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x716 DUP3 PUSH2 0x6EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x726 DUP2 PUSH2 0x70B JUMP JUMPDEST DUP2 EQ PUSH2 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x743 DUP2 PUSH2 0x71D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x760 JUMPI PUSH2 0x75F PUSH2 0x6E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x76E DUP6 DUP3 DUP7 ADD PUSH2 0x734 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x77F DUP6 DUP3 DUP7 ADD PUSH2 0x734 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x792 DUP2 PUSH2 0x70B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AB DUP2 PUSH2 0x798 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x7C7 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x789 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x7DA PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x789 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x7ED PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x7A2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x82D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x812 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x855 DUP3 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x85F DUP2 DUP6 PUSH2 0x7FE JUMP JUMPDEST SWAP4 POP PUSH2 0x86F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x80F JUMP JUMPDEST PUSH2 0x878 DUP2 PUSH2 0x839 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x898 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7B1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x8AA DUP2 DUP5 PUSH2 0x84A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8CD DUP2 DUP5 PUSH2 0x84A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8DE DUP2 PUSH2 0x798 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x939 DUP3 PUSH2 0x798 JUMP JUMPDEST SWAP2 POP PUSH2 0x944 DUP4 PUSH2 0x798 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x95C JUMPI PUSH2 0x95B PUSH2 0x8FF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x9A9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x9BC JUMPI PUSH2 0x9BB PUSH2 0x962 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x9EF DUP2 PUSH2 0x991 JUMP JUMPDEST PUSH2 0x9F9 DUP2 DUP7 PUSH2 0x9C2 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0xA14 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xA29 JUMPI PUSH2 0xA5C JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0xA5C JUMP JUMPDEST PUSH2 0xA32 DUP6 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA54 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA35 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA0A4D653A200000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9B PUSH1 0x6 DUP4 PUSH2 0x9C2 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA6 DUP3 PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xABC DUP3 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0xAC6 DUP2 DUP6 PUSH2 0x9C2 JUMP JUMPDEST SWAP4 POP PUSH2 0xAD6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x80F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA4465766963653A200000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB18 PUSH1 0x9 DUP4 PUSH2 0x9C2 JUMP JUMPDEST SWAP2 POP PUSH2 0xB23 DUP3 PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA4973737565642061743A200000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB64 PUSH1 0xC DUP4 PUSH2 0x9C2 JUMP JUMPDEST SWAP2 POP PUSH2 0xB6F DUP3 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0xC DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB86 DUP3 DUP8 PUSH2 0x9E2 JUMP JUMPDEST SWAP2 POP PUSH2 0xB91 DUP3 PUSH2 0xA8E JUMP JUMPDEST SWAP2 POP PUSH2 0xB9D DUP3 DUP7 PUSH2 0xAB1 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA8 DUP3 PUSH2 0xB0B JUMP JUMPDEST SWAP2 POP PUSH2 0xBB4 DUP3 DUP6 PUSH2 0xAB1 JUMP JUMPDEST SWAP2 POP PUSH2 0xBBF DUP3 PUSH2 0xB57 JUMP JUMPDEST SWAP2 POP PUSH2 0xBCB DUP3 DUP5 PUSH2 0xAB1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC42 DUP3 PUSH2 0x798 JUMP JUMPDEST SWAP2 POP PUSH2 0xC4D DUP4 PUSH2 0x798 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC5B DUP2 PUSH2 0x798 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC72 JUMPI PUSH2 0xC71 PUSH2 0x8FF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC84 DUP3 PUSH2 0x798 JUMP JUMPDEST SWAP2 POP PUSH2 0xC8F DUP4 PUSH2 0x798 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xCA7 JUMPI PUSH2 0xCA6 PUSH2 0x8FF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCE7 DUP3 PUSH2 0x798 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0xCFA JUMPI PUSH2 0xCF9 PUSH2 0x8FF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3B PUSH1 0x20 DUP4 PUSH2 0x7FE JUMP JUMPDEST SWAP2 POP PUSH2 0xD46 DUP3 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD6A DUP2 PUSH2 0xD2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0xDE DUP1 SGT PUSH22 0xE2768B8981495412ED4FD9B296A1C822289D1BADAAC6 DUP12 0xDC PUSH25 0x164264736F6C63430008130033000000000000000000000000 ","sourceMap":"312:2137:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1287:340;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;346:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;376:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1287:340;1389:27;;:::i;:::-;1418:13;1453:118;;;;;;;;1487:5;1453:118;;;;;;1514:6;1453:118;;;;;;1559:1;1544:12;:16;;;;:::i;:::-;1453:118;;;1443:128;;1589:7;1598:21;1611:7;1598:12;:21::i;:::-;1581:39;;;;1287:340;;;;;:::o;346:23::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;376:33::-;;;;:::o;1852:408::-;1940:13;2009:9;2056:34;2076:7;:13;;;2056:19;:34::i;:::-;2130:35;2150:7;:14;;;2130:19;:35::i;:::-;2208:34;2225:7;:16;;;2208;:34::i;:::-;1979:273;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1965:288;;1852:408;;;:::o;2102:149:0:-;2160:13;2192:52;2220:4;2204:22;;311:2;2192:52;;:11;:52::i;:::-;2185:59;;2102:149;;;:::o;415:696::-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;788:280;1032:21;788:280;1088:6;1081:13;;;;;415:696;;;:::o;1513:437::-;1588:13;1613:19;1658:1;1649:6;1645:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:47;;1670:15;:6;1677:1;1670:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1695;:6;1702:1;1695:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1725:9;1750:1;1741:6;1737:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;1791:8;1808:3;1800:5;:11;1791:21;;;;;;;:::i;:::-;;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;1836:1;1826:11;;;;;1760:3;;;;:::i;:::-;;;1720:128;;;;1874:1;1865:5;:10;1857:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1936:6;1922:21;;;1513:437;;;;:::o;9889:890:2:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:474::-;909:6;917;966:2;954:9;945:7;941:23;937:32;934:119;;;972:79;;:::i;:::-;934:119;1092:1;1117:53;1162:7;1153:6;1142:9;1138:22;1117:53;:::i;:::-;1107:63;;1063:117;1219:2;1245:53;1290:7;1281:6;1270:9;1266:22;1245:53;:::i;:::-;1235:63;;1190:118;841:474;;;;;:::o;1321:108::-;1398:24;1416:5;1398:24;:::i;:::-;1393:3;1386:37;1321:108;;:::o;1435:77::-;1472:7;1501:5;1490:16;;1435:77;;;:::o;1518:108::-;1595:24;1613:5;1595:24;:::i;:::-;1590:3;1583:37;1518:108;;:::o;1720:698::-;1877:4;1872:3;1868:14;1965:4;1958:5;1954:16;1948:23;1984:63;2041:4;2036:3;2032:14;2018:12;1984:63;:::i;:::-;1892:165;2141:4;2134:5;2130:16;2124:23;2160:63;2217:4;2212:3;2208:14;2194:12;2160:63;:::i;:::-;2067:166;2319:4;2312:5;2308:16;2302:23;2338:63;2395:4;2390:3;2386:14;2372:12;2338:63;:::i;:::-;2243:168;1846:572;1720:698;;:::o;2424:99::-;2476:6;2510:5;2504:12;2494:22;;2424:99;;;:::o;2529:169::-;2613:11;2647:6;2642:3;2635:19;2687:4;2682:3;2678:14;2663:29;;2529:169;;;;:::o;2704:246::-;2785:1;2795:113;2809:6;2806:1;2803:13;2795:113;;;2894:1;2889:3;2885:11;2879:18;2875:1;2870:3;2866:11;2859:39;2831:2;2828:1;2824:10;2819:15;;2795:113;;;2942:1;2933:6;2928:3;2924:16;2917:27;2766:184;2704:246;;;:::o;2956:102::-;2997:6;3048:2;3044:7;3039:2;3032:5;3028:14;3024:28;3014:38;;2956:102;;;:::o;3064:377::-;3152:3;3180:39;3213:5;3180:39;:::i;:::-;3235:71;3299:6;3294:3;3235:71;:::i;:::-;3228:78;;3315:65;3373:6;3368:3;3361:4;3354:5;3350:16;3315:65;:::i;:::-;3405:29;3427:6;3405:29;:::i;:::-;3400:3;3396:39;3389:46;;3156:285;3064:377;;;;:::o;3447:544::-;3648:4;3686:3;3675:9;3671:19;3663:27;;3700:131;3828:1;3817:9;3813:17;3804:6;3700:131;:::i;:::-;3878:9;3872:4;3868:20;3863:2;3852:9;3848:18;3841:48;3906:78;3979:4;3970:6;3906:78;:::i;:::-;3898:86;;3447:544;;;;;:::o;3997:313::-;4110:4;4148:2;4137:9;4133:18;4125:26;;4197:9;4191:4;4187:20;4183:1;4172:9;4168:17;4161:47;4225:78;4298:4;4289:6;4225:78;:::i;:::-;4217:86;;3997:313;;;;:::o;4316:118::-;4403:24;4421:5;4403:24;:::i;:::-;4398:3;4391:37;4316:118;;:::o;4440:222::-;4533:4;4571:2;4560:9;4556:18;4548:26;;4584:71;4652:1;4641:9;4637:17;4628:6;4584:71;:::i;:::-;4440:222;;;;:::o;4668:180::-;4716:77;4713:1;4706:88;4813:4;4810:1;4803:15;4837:4;4834:1;4827:15;4854:194;4894:4;4914:20;4932:1;4914:20;:::i;:::-;4909:25;;4948:20;4966:1;4948:20;:::i;:::-;4943:25;;4992:1;4989;4985:9;4977:17;;5016:1;5010:4;5007:11;5004:37;;;5021:18;;:::i;:::-;5004:37;4854:194;;;;:::o;5054:180::-;5102:77;5099:1;5092:88;5199:4;5196:1;5189:15;5223:4;5220:1;5213:15;5240:320;5284:6;5321:1;5315:4;5311:12;5301:22;;5368:1;5362:4;5358:12;5389:18;5379:81;;5445:4;5437:6;5433:17;5423:27;;5379:81;5507:2;5499:6;5496:14;5476:18;5473:38;5470:84;;5526:18;;:::i;:::-;5470:84;5291:269;5240:320;;;:::o;5566:148::-;5668:11;5705:3;5690:18;;5566:148;;;;:::o;5720:141::-;5769:4;5792:3;5784:11;;5815:3;5812:1;5805:14;5849:4;5846:1;5836:18;5828:26;;5720:141;;;:::o;5891:874::-;5994:3;6031:5;6025:12;6060:36;6086:9;6060:36;:::i;:::-;6112:89;6194:6;6189:3;6112:89;:::i;:::-;6105:96;;6232:1;6221:9;6217:17;6248:1;6243:166;;;;6423:1;6418:341;;;;6210:549;;6243:166;6327:4;6323:9;6312;6308:25;6303:3;6296:38;6389:6;6382:14;6375:22;6367:6;6363:35;6358:3;6354:45;6347:52;;6243:166;;6418:341;6485:38;6517:5;6485:38;:::i;:::-;6545:1;6559:154;6573:6;6570:1;6567:13;6559:154;;;6647:7;6641:14;6637:1;6632:3;6628:11;6621:35;6697:1;6688:7;6684:15;6673:26;;6595:4;6592:1;6588:12;6583:17;;6559:154;;;6742:6;6737:3;6733:16;6726:23;;6425:334;;6210:549;;5998:767;;5891:874;;;;:::o;6771:214::-;6911:66;6907:1;6899:6;6895:14;6888:90;6771:214;:::o;6991:400::-;7151:3;7172:84;7254:1;7249:3;7172:84;:::i;:::-;7165:91;;7265:93;7354:3;7265:93;:::i;:::-;7383:1;7378:3;7374:11;7367:18;;6991:400;;;:::o;7397:390::-;7503:3;7531:39;7564:5;7531:39;:::i;:::-;7586:89;7668:6;7663:3;7586:89;:::i;:::-;7579:96;;7684:65;7742:6;7737:3;7730:4;7723:5;7719:16;7684:65;:::i;:::-;7774:6;7769:3;7765:16;7758:23;;7507:280;7397:390;;;;:::o;7793:214::-;7933:66;7929:1;7921:6;7917:14;7910:90;7793:214;:::o;8013:400::-;8173:3;8194:84;8276:1;8271:3;8194:84;:::i;:::-;8187:91;;8287:93;8376:3;8287:93;:::i;:::-;8405:1;8400:3;8396:11;8389:18;;8013:400;;;:::o;8419:214::-;8559:66;8555:1;8547:6;8543:14;8536:90;8419:214;:::o;8639:402::-;8799:3;8820:85;8902:2;8897:3;8820:85;:::i;:::-;8813:92;;8914:93;9003:3;8914:93;:::i;:::-;9032:2;9027:3;9023:12;9016:19;;8639:402;;;:::o;9047:1547::-;9623:3;9645:92;9733:3;9724:6;9645:92;:::i;:::-;9638:99;;9754:148;9898:3;9754:148;:::i;:::-;9747:155;;9919:95;10010:3;10001:6;9919:95;:::i;:::-;9912:102;;10031:148;10175:3;10031:148;:::i;:::-;10024:155;;10196:95;10287:3;10278:6;10196:95;:::i;:::-;10189:102;;10308:148;10452:3;10308:148;:::i;:::-;10301:155;;10473:95;10564:3;10555:6;10473:95;:::i;:::-;10466:102;;10585:3;10578:10;;9047:1547;;;;;;;:::o;10600:180::-;10648:77;10645:1;10638:88;10745:4;10742:1;10735:15;10769:4;10766:1;10759:15;10786:180;10834:77;10831:1;10824:88;10931:4;10928:1;10921:15;10955:4;10952:1;10945:15;10972:410;11012:7;11035:20;11053:1;11035:20;:::i;:::-;11030:25;;11069:20;11087:1;11069:20;:::i;:::-;11064:25;;11124:1;11121;11117:9;11146:30;11164:11;11146:30;:::i;:::-;11135:41;;11325:1;11316:7;11312:15;11309:1;11306:22;11286:1;11279:9;11259:83;11236:139;;11355:18;;:::i;:::-;11236:139;11020:362;10972:410;;;;:::o;11388:191::-;11428:3;11447:20;11465:1;11447:20;:::i;:::-;11442:25;;11481:20;11499:1;11481:20;:::i;:::-;11476:25;;11524:1;11521;11517:9;11510:16;;11545:3;11542:1;11539:10;11536:36;;;11552:18;;:::i;:::-;11536:36;11388:191;;;;:::o;11585:180::-;11633:77;11630:1;11623:88;11730:4;11727:1;11720:15;11754:4;11751:1;11744:15;11771:171;11810:3;11833:24;11851:5;11833:24;:::i;:::-;11824:33;;11879:4;11872:5;11869:15;11866:41;;11887:18;;:::i;:::-;11866:41;11934:1;11927:5;11923:13;11916:20;;11771:171;;;:::o;11948:182::-;12088:34;12084:1;12076:6;12072:14;12065:58;11948:182;:::o;12136:366::-;12278:3;12299:67;12363:2;12358:3;12299:67;:::i;:::-;12292:74;;12375:93;12464:3;12375:93;:::i;:::-;12493:2;12488:3;12484:12;12477:19;;12136:366;;;:::o;12508:419::-;12674:4;12712:2;12701:9;12697:18;12689:26;;12761:9;12755:4;12751:20;12747:1;12736:9;12732:17;12725:47;12789:131;12915:4;12789:131;:::i;:::-;12781:139;;12508:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"699000","executionCost":"infinite","totalCost":"infinite"},"external":{"STATEMENT()":"infinite","createTokenRequest(address,address)":"infinite","lengthOfToken()":"2451"},"internal":{"_updateLengthOfToken(uint256)":"infinite","_updateStatement(string memory)":"infinite","authenticate(struct TokenAuthenticated.TokenRequest calldata,bytes calldata)":"infinite","hashForToken(struct TokenAuthenticated.TokenRequest calldata)":"infinite","stringToSign(struct TokenAuthenticated.TokenRequest memory)":"infinite"}},"methodIdentifiers":{"STATEMENT()":"bebc479c","createTokenRequest(address,address)":"b6ad16a8","lengthOfToken()":"cb2e6043"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_statement\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"STATEMENT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"device\",\"type\":\"address\"}],\"name\":\"createTokenRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"device\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"issuedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenAuthenticated.TokenRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lengthOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"allow a user to authenticate with a signed english token.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"TokenAuthenticated\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenAuthenticated.sol\":\"TokenAuthenticated\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Strings.sol\\\";\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS,\\n        InvalidSignatureV // Deprecated in v4.8\\n    }\\n\\n    function _throwError(RecoverError error) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert(\\\"ECDSA: invalid signature\\\");\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature` or error string. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address, RecoverError) {\\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\\n        return tryRecover(hash, v, r, s);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     *\\n     * _Available since v4.2._\\n     */\\n    function recover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address, RecoverError) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature);\\n        }\\n\\n        return (signer, RecoverError.NoError);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\", Strings.toString(s.length), s));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Typed Data, created from a\\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\\n     * to the one signed with the\\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\\n     * JSON-RPC method as part of EIP-712.\\n     *\\n     * See {recover}.\\n     */\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n    }\\n}\\n\",\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/TokenAuthenticated.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\n// import \\\"hardhat/console.sol\\\";\\n\\n/**\\n * @title TokenAuthenticated\\n * @dev allow a user to authenticate with a signed english token.\\n */\\ncontract TokenAuthenticated {\\n    string public STATEMENT;\\n\\n    uint256 public lengthOfToken = 15;\\n       \\n    struct TokenRequest {\\n        address owner;\\n        address device;\\n        uint256 issuedAt;\\n    }\\n\\n    constructor(string memory _statement) {\\n        STATEMENT = _statement;\\n    }\\n\\n    function _updateStatement(string memory newStatement) internal {\\n        STATEMENT = newStatement;\\n    }\\n\\n    function _updateLengthOfToken(uint256 newLength) internal {\\n        lengthOfToken = newLength;\\n    }\\n\\n    function authenticate(\\n        TokenRequest calldata request,\\n        bytes calldata signature\\n    ) internal view returns (bool) {\\n        bytes32 msgHash = hashForToken(request);\\n        address signer = ECDSA.recover(msgHash, signature);\\n        require(signer == request.owner, \\\"invalid signature\\\");\\n        require(\\n            request.issuedAt >= block.number - lengthOfToken,\\n            \\\"Request is too old\\\"\\n        );\\n        return true;\\n    }\\n\\n    function createTokenRequest(\\n        address owner,\\n        address device\\n    ) public view returns (TokenRequest memory request, string memory) {\\n        request = TokenRequest({\\n            owner: owner,\\n            device: device,\\n            issuedAt: block.number - 1\\n        });\\n        return (request, stringToSign(request));\\n    }\\n\\n\\n    /**\\n     * @dev Returns the string to sign of the provided WalletCreateRequest.\\n     * @param request The WalletCreateRequest struct containing the owner address, device address, and issuedAt block number.\\n     */\\n    function stringToSign(\\n        TokenRequest memory request\\n    ) internal view returns (string memory) {\\n        return string(abi.encodePacked(\\n            STATEMENT,\\n            \\\"\\\\n\\\\nMe: \\\",\\n            Strings.toHexString(request.owner),\\n            \\\"\\\\nDevice: \\\",\\n            Strings.toHexString(request.device),\\n            \\\"\\\\nIssued at: \\\",\\n            Strings.toString(request.issuedAt)\\n        ));\\n    }\\n\\n    function hashForToken(\\n        TokenRequest calldata request\\n    ) internal view returns (bytes32) {\\n        return ECDSA.toEthSignedMessageHash(bytes(stringToSign(request)));\\n    }\\n}\",\"keccak256\":\"0x46bcf484ada1e1d321fd73afe7060e7e0b3930ba844bc32599fe88b7860715ce\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1628,"contract":"contracts/TokenAuthenticated.sol:TokenAuthenticated","label":"STATEMENT","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1631,"contract":"contracts/TokenAuthenticated.sol:TokenAuthenticated","label":"lengthOfToken","offset":0,"slot":"1","type":"t_uint256"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/WalletDeployer.sol":{"IProxyFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_mastercopy","type":"address"},{"internalType":"bytes","name":"initializer","type":"bytes"},{"internalType":"uint256","name":"saltNonce","type":"uint256"}],"name":"createProxyWithNonce","outputs":[{"internalType":"address","name":"proxy","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createProxyWithNonce(address,bytes,uint256)":"1688f0b9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mastercopy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializer\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"saltNonce\",\"type\":\"uint256\"}],\"name\":\"createProxyWithNonce\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WalletDeployer.sol\":\"IProxyFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Strings.sol\\\";\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS,\\n        InvalidSignatureV // Deprecated in v4.8\\n    }\\n\\n    function _throwError(RecoverError error) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert(\\\"ECDSA: invalid signature\\\");\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature` or error string. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address, RecoverError) {\\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\\n        return tryRecover(hash, v, r, s);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     *\\n     * _Available since v4.2._\\n     */\\n    function recover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address, RecoverError) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature);\\n        }\\n\\n        return (signer, RecoverError.NoError);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\", Strings.toString(s.length), s));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Typed Data, created from a\\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\\n     * to the one signed with the\\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\\n     * JSON-RPC method as part of EIP-712.\\n     *\\n     * See {recover}.\\n     */\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n    }\\n}\\n\",\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/TokenAuthenticated.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\n// import \\\"hardhat/console.sol\\\";\\n\\n/**\\n * @title TokenAuthenticated\\n * @dev allow a user to authenticate with a signed english token.\\n */\\ncontract TokenAuthenticated {\\n    string public STATEMENT;\\n\\n    uint256 public lengthOfToken = 15;\\n       \\n    struct TokenRequest {\\n        address owner;\\n        address device;\\n        uint256 issuedAt;\\n    }\\n\\n    constructor(string memory _statement) {\\n        STATEMENT = _statement;\\n    }\\n\\n    function _updateStatement(string memory newStatement) internal {\\n        STATEMENT = newStatement;\\n    }\\n\\n    function _updateLengthOfToken(uint256 newLength) internal {\\n        lengthOfToken = newLength;\\n    }\\n\\n    function authenticate(\\n        TokenRequest calldata request,\\n        bytes calldata signature\\n    ) internal view returns (bool) {\\n        bytes32 msgHash = hashForToken(request);\\n        address signer = ECDSA.recover(msgHash, signature);\\n        require(signer == request.owner, \\\"invalid signature\\\");\\n        require(\\n            request.issuedAt >= block.number - lengthOfToken,\\n            \\\"Request is too old\\\"\\n        );\\n        return true;\\n    }\\n\\n    function createTokenRequest(\\n        address owner,\\n        address device\\n    ) public view returns (TokenRequest memory request, string memory) {\\n        request = TokenRequest({\\n            owner: owner,\\n            device: device,\\n            issuedAt: block.number - 1\\n        });\\n        return (request, stringToSign(request));\\n    }\\n\\n\\n    /**\\n     * @dev Returns the string to sign of the provided WalletCreateRequest.\\n     * @param request The WalletCreateRequest struct containing the owner address, device address, and issuedAt block number.\\n     */\\n    function stringToSign(\\n        TokenRequest memory request\\n    ) internal view returns (string memory) {\\n        return string(abi.encodePacked(\\n            STATEMENT,\\n            \\\"\\\\n\\\\nMe: \\\",\\n            Strings.toHexString(request.owner),\\n            \\\"\\\\nDevice: \\\",\\n            Strings.toHexString(request.device),\\n            \\\"\\\\nIssued at: \\\",\\n            Strings.toString(request.issuedAt)\\n        ));\\n    }\\n\\n    function hashForToken(\\n        TokenRequest calldata request\\n    ) internal view returns (bytes32) {\\n        return ECDSA.toEthSignedMessageHash(bytes(stringToSign(request)));\\n    }\\n}\",\"keccak256\":\"0x46bcf484ada1e1d321fd73afe7060e7e0b3930ba844bc32599fe88b7860715ce\",\"license\":\"MIT\"},\"contracts/WalletDeployer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.19;\\n\\nimport \\\"./TokenAuthenticated.sol\\\";\\n\\n// import \\\"hardhat/console.sol\\\";\\n\\ninterface IProxyFactory {\\n    function createProxyWithNonce(\\n        address _mastercopy,\\n        bytes memory initializer,\\n        uint256 saltNonce\\n    ) external returns (address proxy);\\n}\\n\\n/**\\n * @title WalletDeployer\\n * @dev A contract that allows a user to create a Gnosis Safe wallet by signing an English message.\\n *      It sets up a a safe by calling the SafeStetup.sol contract which adds the correct modules and the TokenRequest\\n *      device and owner as owners to the safe. \\n */\\ncontract WalletDeployer is TokenAuthenticated {\\n    string public CHAIN_ID;\\n\\n    address private immutable _gnosisSafeContract;\\n    address private immutable _gnosisSafeProxyFactory;\\n    address private immutable _defaultFallackhandler;\\n\\n    address private immutable _setupHandler;\\n\\n    bytes4 private constant SETUP_DATA = bytes4(keccak256(\\\"setup()\\\"));\\n\\n    // a mapping of owner to safe address\\n    mapping(address => address) public ownerToSafe;\\n    mapping(address => address) public safeToOwner;\\n\\n    constructor(\\n        address gnosisSafeContract,\\n        address gnosisSafeProxyFactory,\\n        address defaultFallbackHandler,\\n        address setupHandler\\n    )\\n        TokenAuthenticated(\\n            \\\"I authorize this device to send transactions on my behalf.\\\"\\n        )\\n    {\\n        CHAIN_ID = Strings.toString(block.chainid);\\n        _gnosisSafeContract = gnosisSafeContract;\\n        _gnosisSafeProxyFactory = gnosisSafeProxyFactory;\\n        _defaultFallackhandler = defaultFallbackHandler;\\n        _setupHandler = setupHandler;\\n    }\\n\\n    /**\\n     * @dev Creates a Gnosis Safe wallet using the provided WalletCreateRequest and signature.\\n     * @param request The WalletCreateRequest struct containing the owner address, first device address, and issuedAt block number.\\n     * @param signature The signature signed by the owner to verify ownership.\\n     */\\n    function createSafe(\\n        TokenRequest calldata request,\\n        bytes calldata signature\\n    ) public {\\n        require(\\n            ownerToSafe[request.owner] == address(0),\\n            \\\"Safe already exists for owner\\\"\\n        );\\n        require(authenticate(request, signature));\\n\\n        // not sure exactly why, but it's important that this array is a memory address[] so that the initializer is encoded properly\\n        address[] memory owners;\\n        if (request.device == address(0)) {\\n            owners = new address[](1);\\n            owners[0] = request.owner;\\n        } else {\\n            owners = new address[](2);\\n            owners[0] = request.owner;\\n            owners[1] = request.device;\\n        }\\n\\n        bytes memory initializer = abi.encodeWithSignature(\\n            \\\"setup(address[],uint256,address,bytes,address,address,uint256,address)\\\",\\n            owners, // set the owner and first device addresses\\n            uint256(1), // set the number of required confirmations (threshhold) to 1\\n            _setupHandler, // setupModules address\\n            abi.encodeWithSignature(\\\"setup()\\\"), // setupModules data\\n            _defaultFallackhandler, // set the default fallback handler\\n            address(0), // set the payment token address\\n            address(0), // set the payment token address\\n            uint256(0), // set the payment amount to 0\\n            address(0) // set the payment fee receiver address\\n        );\\n\\n        address proxyAddr = IProxyFactory(_gnosisSafeProxyFactory)\\n            .createProxyWithNonce(_gnosisSafeContract, initializer, block.chainid);\\n\\n        ownerToSafe[request.owner] = proxyAddr;\\n        safeToOwner[proxyAddr] = request.owner;\\n    }\\n}\\n\",\"keccak256\":\"0x4064737e19684118ed91ade2911e1c11a102e100f671f89c9124b71600511f6f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"WalletDeployer":{"abi":[{"inputs":[{"internalType":"address","name":"gnosisSafeContract","type":"address"},{"internalType":"address","name":"gnosisSafeProxyFactory","type":"address"},{"internalType":"address","name":"defaultFallbackHandler","type":"address"},{"internalType":"address","name":"setupHandler","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"CHAIN_ID","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STATEMENT","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"device","type":"address"},{"internalType":"uint256","name":"issuedAt","type":"uint256"}],"internalType":"struct TokenAuthenticated.TokenRequest","name":"request","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"createSafe","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"device","type":"address"}],"name":"createTokenRequest","outputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"device","type":"address"},{"internalType":"uint256","name":"issuedAt","type":"uint256"}],"internalType":"struct TokenAuthenticated.TokenRequest","name":"request","type":"tuple"},{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lengthOfToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"ownerToSafe","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"safeToOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"A contract that allows a user to create a Gnosis Safe wallet by signing an English message.      It sets up a a safe by calling the SafeStetup.sol contract which adds the correct modules and the TokenRequest      device and owner as owners to the safe. ","kind":"dev","methods":{"createSafe((address,address,uint256),bytes)":{"details":"Creates a Gnosis Safe wallet using the provided WalletCreateRequest and signature.","params":{"request":"The WalletCreateRequest struct containing the owner address, first device address, and issuedAt block number.","signature":"The signature signed by the owner to verify ownership."}}},"title":"WalletDeployer","version":1},"evm":{"bytecode":{"functionDebugData":{"@_1648":{"entryPoint":null,"id":1648,"parameterSlots":1,"returnSlots":0},"@_1883":{"entryPoint":null,"id":1883,"parameterSlots":4,"returnSlots":0},"@log10_1237":{"entryPoint":581,"id":1237,"parameterSlots":1,"returnSlots":1},"@toString_57":{"entryPoint":358,"id":57,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory":{"entryPoint":1051,"id":null,"parameterSlots":2,"returnSlots":4},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1323,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1165,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1644,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":982,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":950,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1459,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1605,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1479,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1799,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1344,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1270,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1769,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1469,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1737,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x12":{"entryPoint":2030,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1223,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1176,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1519,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":945,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":1360,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1724,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1577,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1373,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1529,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1002,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1572,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7081:10","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:10","statements":[{"nodeType":"YulAssignment","src":"57:19:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:10"},"nodeType":"YulFunctionCall","src":"67:9:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:10"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:10","type":""}],"src":"7:75:10"},{"body":{"nodeType":"YulBlock","src":"177:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:10"},"nodeType":"YulFunctionCall","src":"187:12:10"},"nodeType":"YulExpressionStatement","src":"187:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:10"},{"body":{"nodeType":"YulBlock","src":"300:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:10"},"nodeType":"YulFunctionCall","src":"310:12:10"},"nodeType":"YulExpressionStatement","src":"310:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:10"},{"body":{"nodeType":"YulBlock","src":"379:81:10","statements":[{"nodeType":"YulAssignment","src":"389:65:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:10"},"nodeType":"YulFunctionCall","src":"400:54:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:10"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:10","type":""}],"src":"334:126:10"},{"body":{"nodeType":"YulBlock","src":"511:51:10","statements":[{"nodeType":"YulAssignment","src":"521:35:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:10"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:10"},"nodeType":"YulFunctionCall","src":"532:24:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:10"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:10","type":""}],"src":"466:96:10"},{"body":{"nodeType":"YulBlock","src":"611:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:10"},"nodeType":"YulFunctionCall","src":"670:12:10"},"nodeType":"YulExpressionStatement","src":"670:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:10"},"nodeType":"YulFunctionCall","src":"641:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:10"},"nodeType":"YulFunctionCall","src":"631:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:10"},"nodeType":"YulFunctionCall","src":"624:43:10"},"nodeType":"YulIf","src":"621:63:10"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:10","type":""}],"src":"568:122:10"},{"body":{"nodeType":"YulBlock","src":"759:80:10","statements":[{"nodeType":"YulAssignment","src":"769:22:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:10"},"nodeType":"YulFunctionCall","src":"778:13:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:10"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:10"},"nodeType":"YulFunctionCall","src":"800:33:10"},"nodeType":"YulExpressionStatement","src":"800:33:10"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:10","type":""}],"src":"696:143:10"},{"body":{"nodeType":"YulBlock","src":"973:692:10","statements":[{"body":{"nodeType":"YulBlock","src":"1020:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1022:77:10"},"nodeType":"YulFunctionCall","src":"1022:79:10"},"nodeType":"YulExpressionStatement","src":"1022:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"994:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"1003:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"990:3:10"},"nodeType":"YulFunctionCall","src":"990:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"1015:3:10","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"986:3:10"},"nodeType":"YulFunctionCall","src":"986:33:10"},"nodeType":"YulIf","src":"983:120:10"},{"nodeType":"YulBlock","src":"1113:128:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1128:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"1142:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1132:6:10","type":""}]},{"nodeType":"YulAssignment","src":"1157:74:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1203:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1214:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1199:3:10"},"nodeType":"YulFunctionCall","src":"1199:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1223:7:10"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1167:31:10"},"nodeType":"YulFunctionCall","src":"1167:64:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1157:6:10"}]}]},{"nodeType":"YulBlock","src":"1251:129:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1266:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"1280:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1270:6:10","type":""}]},{"nodeType":"YulAssignment","src":"1296:74:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:10"},"nodeType":"YulFunctionCall","src":"1338:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:10"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1306:31:10"},"nodeType":"YulFunctionCall","src":"1306:64:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1296:6:10"}]}]},{"nodeType":"YulBlock","src":"1390:129:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1405:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"1419:2:10","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1409:6:10","type":""}]},{"nodeType":"YulAssignment","src":"1435:74:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1481:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1492:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1477:3:10"},"nodeType":"YulFunctionCall","src":"1477:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1501:7:10"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1445:31:10"},"nodeType":"YulFunctionCall","src":"1445:64:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1435:6:10"}]}]},{"nodeType":"YulBlock","src":"1529:129:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1544:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"1558:2:10","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1548:6:10","type":""}]},{"nodeType":"YulAssignment","src":"1574:74:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1620:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1631:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1616:3:10"},"nodeType":"YulFunctionCall","src":"1616:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1640:7:10"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1584:31:10"},"nodeType":"YulFunctionCall","src":"1584:64:10"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1574:6:10"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"919:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"930:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"942:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"950:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"958:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"966:6:10","type":""}],"src":"845:820:10"},{"body":{"nodeType":"YulBlock","src":"1730:40:10","statements":[{"nodeType":"YulAssignment","src":"1741:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1757:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1751:5:10"},"nodeType":"YulFunctionCall","src":"1751:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1741:6:10"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1713:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1723:6:10","type":""}],"src":"1671:99:10"},{"body":{"nodeType":"YulBlock","src":"1804:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1821:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1824:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1814:6:10"},"nodeType":"YulFunctionCall","src":"1814:88:10"},"nodeType":"YulExpressionStatement","src":"1814:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1918:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1921:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1911:6:10"},"nodeType":"YulFunctionCall","src":"1911:15:10"},"nodeType":"YulExpressionStatement","src":"1911:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1942:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1945:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1935:6:10"},"nodeType":"YulFunctionCall","src":"1935:15:10"},"nodeType":"YulExpressionStatement","src":"1935:15:10"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1776:180:10"},{"body":{"nodeType":"YulBlock","src":"1990:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2007:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2010:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2000:6:10"},"nodeType":"YulFunctionCall","src":"2000:88:10"},"nodeType":"YulExpressionStatement","src":"2000:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2104:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2107:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2097:6:10"},"nodeType":"YulFunctionCall","src":"2097:15:10"},"nodeType":"YulExpressionStatement","src":"2097:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2128:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2131:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2121:6:10"},"nodeType":"YulFunctionCall","src":"2121:15:10"},"nodeType":"YulExpressionStatement","src":"2121:15:10"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1962:180:10"},{"body":{"nodeType":"YulBlock","src":"2199:269:10","statements":[{"nodeType":"YulAssignment","src":"2209:22:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2223:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"2229:1:10","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2219:3:10"},"nodeType":"YulFunctionCall","src":"2219:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2209:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"2240:38:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2270:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"2276:1:10","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2266:3:10"},"nodeType":"YulFunctionCall","src":"2266:12:10"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2244:18:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"2317:51:10","statements":[{"nodeType":"YulAssignment","src":"2331:27:10","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2345:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2353:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:10"},"nodeType":"YulFunctionCall","src":"2341:17:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2331:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2297:18:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2290:6:10"},"nodeType":"YulFunctionCall","src":"2290:26:10"},"nodeType":"YulIf","src":"2287:81:10"},{"body":{"nodeType":"YulBlock","src":"2420:42:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2434:16:10"},"nodeType":"YulFunctionCall","src":"2434:18:10"},"nodeType":"YulExpressionStatement","src":"2434:18:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2384:18:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2407:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2415:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2404:2:10"},"nodeType":"YulFunctionCall","src":"2404:14:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2381:2:10"},"nodeType":"YulFunctionCall","src":"2381:38:10"},"nodeType":"YulIf","src":"2378:84:10"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2183:4:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2192:6:10","type":""}],"src":"2148:320:10"},{"body":{"nodeType":"YulBlock","src":"2528:87:10","statements":[{"nodeType":"YulAssignment","src":"2538:11:10","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2546:3:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2538:4:10"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2566:1:10","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2569:3:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2559:6:10"},"nodeType":"YulFunctionCall","src":"2559:14:10"},"nodeType":"YulExpressionStatement","src":"2559:14:10"},{"nodeType":"YulAssignment","src":"2582:26:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2600:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2603:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2590:9:10"},"nodeType":"YulFunctionCall","src":"2590:18:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2582:4:10"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2515:3:10","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2523:4:10","type":""}],"src":"2474:141:10"},{"body":{"nodeType":"YulBlock","src":"2665:49:10","statements":[{"nodeType":"YulAssignment","src":"2675:33:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2693:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"2700:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2689:3:10"},"nodeType":"YulFunctionCall","src":"2689:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"2705:2:10","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2685:3:10"},"nodeType":"YulFunctionCall","src":"2685:23:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2675:6:10"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2648:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2658:6:10","type":""}],"src":"2621:93:10"},{"body":{"nodeType":"YulBlock","src":"2773:54:10","statements":[{"nodeType":"YulAssignment","src":"2783:37:10","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2808:4:10"},{"name":"value","nodeType":"YulIdentifier","src":"2814:5:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2804:3:10"},"nodeType":"YulFunctionCall","src":"2804:16:10"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2783:8:10"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2748:4:10","type":""},{"name":"value","nodeType":"YulTypedName","src":"2754:5:10","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2764:8:10","type":""}],"src":"2720:107:10"},{"body":{"nodeType":"YulBlock","src":"2909:317:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2919:35:10","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2940:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"2952:1:10","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2936:3:10"},"nodeType":"YulFunctionCall","src":"2936:18:10"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2923:9:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2963:109:10","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2994:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3005:66:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2975:18:10"},"nodeType":"YulFunctionCall","src":"2975:97:10"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2967:4:10","type":""}]},{"nodeType":"YulAssignment","src":"3081:51:10","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"3112:9:10"},{"name":"toInsert","nodeType":"YulIdentifier","src":"3123:8:10"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"3093:18:10"},"nodeType":"YulFunctionCall","src":"3093:39:10"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"3081:8:10"}]},{"nodeType":"YulAssignment","src":"3141:30:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3154:5:10"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"3165:4:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3161:3:10"},"nodeType":"YulFunctionCall","src":"3161:9:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3150:3:10"},"nodeType":"YulFunctionCall","src":"3150:21:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3141:5:10"}]},{"nodeType":"YulAssignment","src":"3180:40:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3193:5:10"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"3204:8:10"},{"name":"mask","nodeType":"YulIdentifier","src":"3214:4:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3200:3:10"},"nodeType":"YulFunctionCall","src":"3200:19:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3190:2:10"},"nodeType":"YulFunctionCall","src":"3190:30:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3180:6:10"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2870:5:10","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2877:10:10","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2889:8:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2902:6:10","type":""}],"src":"2833:393:10"},{"body":{"nodeType":"YulBlock","src":"3277:32:10","statements":[{"nodeType":"YulAssignment","src":"3287:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"3298:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3287:7:10"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3259:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3269:7:10","type":""}],"src":"3232:77:10"},{"body":{"nodeType":"YulBlock","src":"3347:28:10","statements":[{"nodeType":"YulAssignment","src":"3357:12:10","value":{"name":"value","nodeType":"YulIdentifier","src":"3364:5:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3357:3:10"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3333:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3343:3:10","type":""}],"src":"3315:60:10"},{"body":{"nodeType":"YulBlock","src":"3441:82:10","statements":[{"nodeType":"YulAssignment","src":"3451:66:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3509:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3491:17:10"},"nodeType":"YulFunctionCall","src":"3491:24:10"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3482:8:10"},"nodeType":"YulFunctionCall","src":"3482:34:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3464:17:10"},"nodeType":"YulFunctionCall","src":"3464:53:10"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3451:9:10"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3421:5:10","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3431:9:10","type":""}],"src":"3381:142:10"},{"body":{"nodeType":"YulBlock","src":"3576:28:10","statements":[{"nodeType":"YulAssignment","src":"3586:12:10","value":{"name":"value","nodeType":"YulIdentifier","src":"3593:5:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3586:3:10"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3562:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3572:3:10","type":""}],"src":"3529:75:10"},{"body":{"nodeType":"YulBlock","src":"3686:193:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3696:63:10","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3751:7:10"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3720:30:10"},"nodeType":"YulFunctionCall","src":"3720:39:10"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3700:16:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3775:4:10"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3815:4:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3809:5:10"},"nodeType":"YulFunctionCall","src":"3809:11:10"},{"name":"offset","nodeType":"YulIdentifier","src":"3822:6:10"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3854:16:10"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3830:23:10"},"nodeType":"YulFunctionCall","src":"3830:41:10"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3781:27:10"},"nodeType":"YulFunctionCall","src":"3781:91:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3768:6:10"},"nodeType":"YulFunctionCall","src":"3768:105:10"},"nodeType":"YulExpressionStatement","src":"3768:105:10"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3663:4:10","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3669:6:10","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3677:7:10","type":""}],"src":"3610:269:10"},{"body":{"nodeType":"YulBlock","src":"3934:24:10","statements":[{"nodeType":"YulAssignment","src":"3944:8:10","value":{"kind":"number","nodeType":"YulLiteral","src":"3951:1:10","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3944:3:10"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3930:3:10","type":""}],"src":"3885:73:10"},{"body":{"nodeType":"YulBlock","src":"4017:136:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4027:46:10","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"4041:30:10"},"nodeType":"YulFunctionCall","src":"4041:32:10"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"4031:6:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4126:4:10"},{"name":"offset","nodeType":"YulIdentifier","src":"4132:6:10"},{"name":"zero_0","nodeType":"YulIdentifier","src":"4140:6:10"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"4082:43:10"},"nodeType":"YulFunctionCall","src":"4082:65:10"},"nodeType":"YulExpressionStatement","src":"4082:65:10"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"4003:4:10","type":""},{"name":"offset","nodeType":"YulTypedName","src":"4009:6:10","type":""}],"src":"3964:189:10"},{"body":{"nodeType":"YulBlock","src":"4209:136:10","statements":[{"body":{"nodeType":"YulBlock","src":"4276:63:10","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4320:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"4327:1:10","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"4290:29:10"},"nodeType":"YulFunctionCall","src":"4290:39:10"},"nodeType":"YulExpressionStatement","src":"4290:39:10"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4229:5:10"},{"name":"end","nodeType":"YulIdentifier","src":"4236:3:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4226:2:10"},"nodeType":"YulFunctionCall","src":"4226:14:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4241:26:10","statements":[{"nodeType":"YulAssignment","src":"4243:22:10","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4256:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"4263:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4252:3:10"},"nodeType":"YulFunctionCall","src":"4252:13:10"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"4243:5:10"}]}]},"pre":{"nodeType":"YulBlock","src":"4223:2:10","statements":[]},"src":"4219:120:10"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"4197:5:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"4204:3:10","type":""}],"src":"4159:186:10"},{"body":{"nodeType":"YulBlock","src":"4430:464:10","statements":[{"body":{"nodeType":"YulBlock","src":"4456:431:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4470:54:10","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4518:5:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4486:31:10"},"nodeType":"YulFunctionCall","src":"4486:38:10"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"4474:8:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4537:63:10","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4560:8:10"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4588:10:10"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4570:17:10"},"nodeType":"YulFunctionCall","src":"4570:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4556:3:10"},"nodeType":"YulFunctionCall","src":"4556:44:10"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4541:11:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"4757:27:10","statements":[{"nodeType":"YulAssignment","src":"4759:23:10","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4774:8:10"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4759:11:10"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4741:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"4753:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4738:2:10"},"nodeType":"YulFunctionCall","src":"4738:18:10"},"nodeType":"YulIf","src":"4735:49:10"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4826:11:10"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4843:8:10"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4871:3:10"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4853:17:10"},"nodeType":"YulFunctionCall","src":"4853:22:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4839:3:10"},"nodeType":"YulFunctionCall","src":"4839:37:10"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4797:28:10"},"nodeType":"YulFunctionCall","src":"4797:80:10"},"nodeType":"YulExpressionStatement","src":"4797:80:10"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4447:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4452:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4444:2:10"},"nodeType":"YulFunctionCall","src":"4444:11:10"},"nodeType":"YulIf","src":"4441:446:10"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"4406:5:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"4413:3:10","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"4418:10:10","type":""}],"src":"4351:543:10"},{"body":{"nodeType":"YulBlock","src":"4963:54:10","statements":[{"nodeType":"YulAssignment","src":"4973:37:10","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4998:4:10"},{"name":"value","nodeType":"YulIdentifier","src":"5004:5:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4994:3:10"},"nodeType":"YulFunctionCall","src":"4994:16:10"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4973:8:10"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4938:4:10","type":""},{"name":"value","nodeType":"YulTypedName","src":"4944:5:10","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4954:8:10","type":""}],"src":"4900:117:10"},{"body":{"nodeType":"YulBlock","src":"5074:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5084:68:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5133:1:10","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"5136:5:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5129:3:10"},"nodeType":"YulFunctionCall","src":"5129:13:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5148:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5144:3:10"},"nodeType":"YulFunctionCall","src":"5144:6:10"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"5100:28:10"},"nodeType":"YulFunctionCall","src":"5100:51:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5096:3:10"},"nodeType":"YulFunctionCall","src":"5096:56:10"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"5088:4:10","type":""}]},{"nodeType":"YulAssignment","src":"5161:25:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5175:4:10"},{"name":"mask","nodeType":"YulIdentifier","src":"5181:4:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5171:3:10"},"nodeType":"YulFunctionCall","src":"5171:15:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5161:6:10"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5051:4:10","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"5057:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5067:6:10","type":""}],"src":"5023:169:10"},{"body":{"nodeType":"YulBlock","src":"5278:214:10","statements":[{"nodeType":"YulAssignment","src":"5411:37:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5438:4:10"},{"name":"len","nodeType":"YulIdentifier","src":"5444:3:10"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5419:18:10"},"nodeType":"YulFunctionCall","src":"5419:29:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5411:4:10"}]},{"nodeType":"YulAssignment","src":"5457:29:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5468:4:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5478:1:10","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"5481:3:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5474:3:10"},"nodeType":"YulFunctionCall","src":"5474:11:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5465:2:10"},"nodeType":"YulFunctionCall","src":"5465:21:10"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"5457:4:10"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5259:4:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"5265:3:10","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"5273:4:10","type":""}],"src":"5197:295:10"},{"body":{"nodeType":"YulBlock","src":"5589:1303:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5600:51:10","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5647:3:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5614:32:10"},"nodeType":"YulFunctionCall","src":"5614:37:10"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5604:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"5736:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5738:16:10"},"nodeType":"YulFunctionCall","src":"5738:18:10"},"nodeType":"YulExpressionStatement","src":"5738:18:10"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5708:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"5716:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5705:2:10"},"nodeType":"YulFunctionCall","src":"5705:30:10"},"nodeType":"YulIf","src":"5702:56:10"},{"nodeType":"YulVariableDeclaration","src":"5768:52:10","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5814:4:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5808:5:10"},"nodeType":"YulFunctionCall","src":"5808:11:10"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5782:25:10"},"nodeType":"YulFunctionCall","src":"5782:38:10"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5772:6:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5913:4:10"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5919:6:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"5927:6:10"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"5867:45:10"},"nodeType":"YulFunctionCall","src":"5867:67:10"},"nodeType":"YulExpressionStatement","src":"5867:67:10"},{"nodeType":"YulVariableDeclaration","src":"5944:18:10","value":{"kind":"number","nodeType":"YulLiteral","src":"5961:1:10","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5948:9:10","type":""}]},{"nodeType":"YulAssignment","src":"5972:17:10","value":{"kind":"number","nodeType":"YulLiteral","src":"5985:4:10","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5972:9:10"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"6036:611:10","statements":[{"nodeType":"YulVariableDeclaration","src":"6050:37:10","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6069:6:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6081:4:10","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6077:3:10"},"nodeType":"YulFunctionCall","src":"6077:9:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6065:3:10"},"nodeType":"YulFunctionCall","src":"6065:22:10"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"6054:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6101:51:10","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6147:4:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6115:31:10"},"nodeType":"YulFunctionCall","src":"6115:37:10"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"6105:6:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6165:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"6174:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6169:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"6233:163:10","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6258:6:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6276:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6281:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6272:3:10"},"nodeType":"YulFunctionCall","src":"6272:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6266:5:10"},"nodeType":"YulFunctionCall","src":"6266:26:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6251:6:10"},"nodeType":"YulFunctionCall","src":"6251:42:10"},"nodeType":"YulExpressionStatement","src":"6251:42:10"},{"nodeType":"YulAssignment","src":"6310:24:10","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6324:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"6332:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6320:3:10"},"nodeType":"YulFunctionCall","src":"6320:14:10"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6310:6:10"}]},{"nodeType":"YulAssignment","src":"6351:31:10","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6368:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6379:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6364:3:10"},"nodeType":"YulFunctionCall","src":"6364:18:10"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6351:9:10"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6199:1:10"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"6202:7:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6196:2:10"},"nodeType":"YulFunctionCall","src":"6196:14:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6211:21:10","statements":[{"nodeType":"YulAssignment","src":"6213:17:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6222:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"6225:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6218:3:10"},"nodeType":"YulFunctionCall","src":"6218:12:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6213:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"6192:3:10","statements":[]},"src":"6188:208:10"},{"body":{"nodeType":"YulBlock","src":"6432:156:10","statements":[{"nodeType":"YulVariableDeclaration","src":"6450:43:10","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6477:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6482:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6473:3:10"},"nodeType":"YulFunctionCall","src":"6473:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6467:5:10"},"nodeType":"YulFunctionCall","src":"6467:26:10"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"6454:9:10","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6517:6:10"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"6544:9:10"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6559:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"6567:4:10","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6555:3:10"},"nodeType":"YulFunctionCall","src":"6555:17:10"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6525:18:10"},"nodeType":"YulFunctionCall","src":"6525:48:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6510:6:10"},"nodeType":"YulFunctionCall","src":"6510:64:10"},"nodeType":"YulExpressionStatement","src":"6510:64:10"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"6415:7:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"6424:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6412:2:10"},"nodeType":"YulFunctionCall","src":"6412:19:10"},"nodeType":"YulIf","src":"6409:179:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6608:4:10"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6622:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"6630:1:10","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6618:3:10"},"nodeType":"YulFunctionCall","src":"6618:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"6634:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6614:3:10"},"nodeType":"YulFunctionCall","src":"6614:22:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6601:6:10"},"nodeType":"YulFunctionCall","src":"6601:36:10"},"nodeType":"YulExpressionStatement","src":"6601:36:10"}]},"nodeType":"YulCase","src":"6029:618:10","value":{"kind":"number","nodeType":"YulLiteral","src":"6034:1:10","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6664:222:10","statements":[{"nodeType":"YulVariableDeclaration","src":"6678:14:10","value":{"kind":"number","nodeType":"YulLiteral","src":"6691:1:10","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6682:5:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"6715:67:10","statements":[{"nodeType":"YulAssignment","src":"6733:35:10","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6752:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6757:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6748:3:10"},"nodeType":"YulFunctionCall","src":"6748:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6742:5:10"},"nodeType":"YulFunctionCall","src":"6742:26:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6733:5:10"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6708:6:10"},"nodeType":"YulIf","src":"6705:77:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6802:4:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6861:5:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"6868:6:10"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6808:52:10"},"nodeType":"YulFunctionCall","src":"6808:67:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6795:6:10"},"nodeType":"YulFunctionCall","src":"6795:81:10"},"nodeType":"YulExpressionStatement","src":"6795:81:10"}]},"nodeType":"YulCase","src":"6656:230:10","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6009:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"6017:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6006:2:10"},"nodeType":"YulFunctionCall","src":"6006:14:10"},"nodeType":"YulSwitch","src":"5999:887:10"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5578:4:10","type":""},{"name":"src","nodeType":"YulTypedName","src":"5584:3:10","type":""}],"src":"5497:1395:10"},{"body":{"nodeType":"YulBlock","src":"6926:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6943:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6946:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6936:6:10"},"nodeType":"YulFunctionCall","src":"6936:88:10"},"nodeType":"YulExpressionStatement","src":"6936:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7040:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7043:4:10","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7033:6:10"},"nodeType":"YulFunctionCall","src":"7033:15:10"},"nodeType":"YulExpressionStatement","src":"7033:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7064:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7067:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7057:6:10"},"nodeType":"YulFunctionCall","src":"7057:15:10"},"nodeType":"YulExpressionStatement","src":"7057:15:10"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"6898:180:10"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"610100604052600f6001553480156200001757600080fd5b5060405162002b4238038062002b4283398181016040528101906200003d91906200041b565b6040518060600160405280603a815260200162002b08603a9139806000908162000068919062000707565b50506200007b466200016660201b60201c565b600290816200008b919062000707565b508373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff1681525050505050506200081d565b6060600060016200017d846200024560201b60201c565b01905060008167ffffffffffffffff8111156200019f576200019e62000498565b5b6040519080825280601f01601f191660200182016040528015620001d25781602001600182028036833780820191505090505b509050600082602001820190505b6001156200023a578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816200022d576200022c620007ee565b5b04945060008503620001e0575b819350505050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310620002a7577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816200029d576200029c620007ee565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310620002e8576d04ee2d6d415b85acef81000000008381620002de57620002dd620007ee565b5b0492506020810190505b662386f26fc1000083106200031b57662386f26fc100008381620003115762000310620007ee565b5b0492506010810190505b6305f5e100831062000348576305f5e10083816200033e576200033d620007ee565b5b0492506008810190505b612710831062000371576127108381620003675762000366620007ee565b5b0492506004810190505b606483106200039857606483816200038e576200038d620007ee565b5b0492506002810190505b600a8310620003a8576001810190505b80915050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003e382620003b6565b9050919050565b620003f581620003d6565b81146200040157600080fd5b50565b6000815190506200041581620003ea565b92915050565b60008060008060808587031215620004385762000437620003b1565b5b6000620004488782880162000404565b94505060206200045b8782880162000404565b93505060406200046e8782880162000404565b9250506060620004818782880162000404565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200050f57607f821691505b602082108103620005255762000524620004c7565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200058f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000550565b6200059b868362000550565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620005e8620005e2620005dc84620005b3565b620005bd565b620005b3565b9050919050565b6000819050919050565b6200060483620005c7565b6200061c6200061382620005ef565b8484546200055d565b825550505050565b600090565b6200063362000624565b62000640818484620005f9565b505050565b5b8181101562000668576200065c60008262000629565b60018101905062000646565b5050565b601f821115620006b75762000681816200052b565b6200068c8462000540565b810160208510156200069c578190505b620006b4620006ab8562000540565b83018262000645565b50505b505050565b600082821c905092915050565b6000620006dc60001984600802620006bc565b1980831691505092915050565b6000620006f78383620006c9565b9150826002028217905092915050565b62000712826200048d565b67ffffffffffffffff8111156200072e576200072d62000498565b5b6200073a8254620004f6565b620007478282856200066c565b600060209050601f8311600181146200077f57600084156200076a578287015190505b620007768582620006e9565b865550620007e6565b601f1984166200078f866200052b565b60005b82811015620007b95784890151825560018201915060208501945060208101905062000792565b86831015620007d95784890151620007d5601f891682620006c9565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60805160a05160c05160e0516122b16200085760003960006104c001526000610564015260006106240152600061066001526122b16000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806385e1f4d01161005b57806385e1f4d0146100fe578063b6ad16a81461011c578063bebc479c1461014d578063cb2e60431461016b5761007d565b806306634e881461008257806324f669b4146100b25780635e619a4a146100ce575b600080fd5b61009c600480360381019061009791906113d8565b610189565b6040516100a99190611414565b60405180910390f35b6100cc60048036038101906100c791906114b8565b6101bc565b005b6100e860048036038101906100e391906113d8565b61080c565b6040516100f59190611414565b60405180910390f35b61010661083f565b60405161011391906115a8565b60405180910390f35b610136600480360381019061013191906115ca565b6108cd565b604051610144929190611674565b60405180910390f35b610155610941565b60405161016291906115a8565b60405180910390f35b6101736109cf565b60405161018091906116b3565b60405180910390f35b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff16600360008560000160208101906101eb91906113d8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461029c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102939061171a565b60405180910390fd5b6102a78383836109d5565b6102b057600080fd5b6060600073ffffffffffffffffffffffffffffffffffffffff168460200160208101906102dd91906113d8565b73ffffffffffffffffffffffffffffffffffffffff16036103aa57600167ffffffffffffffff8111156103135761031261173a565b5b6040519080825280602002602001820160405280156103415781602001602082028036833780820191505090505b50905083600001602081019061035791906113d8565b8160008151811061036b5761036a611769565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506104b9565b600267ffffffffffffffff8111156103c5576103c461173a565b5b6040519080825280602002602001820160405280156103f35781602001602082028036833780820191505090505b50905083600001602081019061040991906113d8565b8160008151811061041d5761041c611769565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083602001602081019061046a91906113d8565b8160018151811061047e5761047d611769565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b60008160017f00000000000000000000000000000000000000000000000000000000000000006040516024016040516020818303038152906040527fba0bba40000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050507f00000000000000000000000000000000000000000000000000000000000000006000806000806040516024016105a19998979695949392919061189c565b6040516020818303038152906040527fb63e800d000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631688f0b97f000000000000000000000000000000000000000000000000000000000000000084466040518463ffffffff1660e01b815260040161069f93929190611937565b6020604051808303816000875af11580156106be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e2919061198a565b905080600360008860000160208101906106fc91906113d8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600001602081019061078791906113d8565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002805461084c906119e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610878906119e6565b80156108c55780601f1061089a576101008083540402835291602001916108c5565b820191906000526020600020905b8154815290600101906020018083116108a857829003601f168201915b505050505081565b6108d5611319565b606060405180606001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020016001436109279190611a46565b81525091508161093683610b16565b915091509250929050565b6000805461094e906119e6565b80601f016020809104026020016040519081016040528092919081815260200182805461097a906119e6565b80156109c75780601f1061099c576101008083540402835291602001916109c7565b820191906000526020600020905b8154815290600101906020018083116109aa57829003601f168201915b505050505081565b60015481565b6000806109e185610b6a565b90506000610a338286868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610b94565b9050856000016020810190610a4891906113d8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ab5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aac90611ac6565b60405180910390fd5b60015443610ac39190611a46565b86604001351015610b09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0090611b32565b60405180910390fd5b6001925050509392505050565b60606000610b278360000151610bbb565b610b348460200151610bbb565b610b418560400151610be8565b604051602001610b549493929190611d0a565b6040516020818303038152906040529050919050565b6000610b8d610b8883803603810190610b839190611e4a565b610b16565b610cb6565b9050919050565b6000806000610ba38585610cf1565b91509150610bb081610d42565b819250505092915050565b6060610be18273ffffffffffffffffffffffffffffffffffffffff16601460ff16610ea8565b9050919050565b606060006001610bf7846110e4565b01905060008167ffffffffffffffff811115610c1657610c1561173a565b5b6040519080825280601f01601f191660200182016040528015610c485781602001600182028036833780820191505090505b509050600082602001820190505b600115610cab578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610c9f57610c9e611e77565b5b04945060008503610c56575b819350505050919050565b6000610cc28251610be8565b82604051602001610cd4929190611f2e565b604051602081830303815290604052805190602001209050919050565b6000806041835103610d325760008060006020860151925060408601519150606086015160001a9050610d2687828585611237565b94509450505050610d3b565b60006002915091505b9250929050565b60006004811115610d5657610d55611f5d565b5b816004811115610d6957610d68611f5d565b5b0315610ea55760016004811115610d8357610d82611f5d565b5b816004811115610d9657610d95611f5d565b5b03610dd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcd90611fd8565b60405180910390fd5b60026004811115610dea57610de9611f5d565b5b816004811115610dfd57610dfc611f5d565b5b03610e3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3490612044565b60405180910390fd5b60036004811115610e5157610e50611f5d565b5b816004811115610e6457610e63611f5d565b5b03610ea4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9b906120d6565b60405180910390fd5b5b50565b606060006002836002610ebb91906120f6565b610ec59190612138565b67ffffffffffffffff811115610ede57610edd61173a565b5b6040519080825280601f01601f191660200182016040528015610f105781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610f4857610f47611769565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610fac57610fab611769565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610fec91906120f6565b610ff69190612138565b90505b6001811115611096577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061103857611037611769565b5b1a60f81b82828151811061104f5761104e611769565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061108f9061216c565b9050610ff9565b50600084146110da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d1906121e1565b60405180910390fd5b8091505092915050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611142577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161113857611137611e77565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061117f576d04ee2d6d415b85acef8100000000838161117557611174611e77565b5b0492506020810190505b662386f26fc1000083106111ae57662386f26fc1000083816111a4576111a3611e77565b5b0492506010810190505b6305f5e10083106111d7576305f5e10083816111cd576111cc611e77565b5b0492506008810190505b61271083106111fc5761271083816111f2576111f1611e77565b5b0492506004810190505b6064831061121f576064838161121557611214611e77565b5b0492506002810190505b600a831061122e576001810190505b80915050919050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115611272576000600391509150611310565b6000600187878787604051600081526020016040526040516112979493929190612236565b6020604051602081039080840390855afa1580156112b9573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361130757600060019250925050611310565b80600092509250505b94509492505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113a58261137a565b9050919050565b6113b58161139a565b81146113c057600080fd5b50565b6000813590506113d2816113ac565b92915050565b6000602082840312156113ee576113ed611370565b5b60006113fc848285016113c3565b91505092915050565b61140e8161139a565b82525050565b60006020820190506114296000830184611405565b92915050565b600080fd5b60006060828403121561144a5761144961142f565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261147857611477611453565b5b8235905067ffffffffffffffff81111561149557611494611458565b5b6020830191508360018202830111156114b1576114b061145d565b5b9250929050565b6000806000608084860312156114d1576114d0611370565b5b60006114df86828701611434565b935050606084013567ffffffffffffffff811115611500576114ff611375565b5b61150c86828701611462565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015611552578082015181840152602081019050611537565b60008484015250505050565b6000601f19601f8301169050919050565b600061157a82611518565b6115848185611523565b9350611594818560208601611534565b61159d8161155e565b840191505092915050565b600060208201905081810360008301526115c2818461156f565b905092915050565b600080604083850312156115e1576115e0611370565b5b60006115ef858286016113c3565b9250506020611600858286016113c3565b9150509250929050565b6116138161139a565b82525050565b6000819050919050565b61162c81611619565b82525050565b606082016000820151611648600085018261160a565b50602082015161165b602085018261160a565b50604082015161166e6040850182611623565b50505050565b60006080820190506116896000830185611632565b818103606083015261169b818461156f565b90509392505050565b6116ad81611619565b82525050565b60006020820190506116c860008301846116a4565b92915050565b7f5361666520616c72656164792065786973747320666f72206f776e6572000000600082015250565b6000611704601d83611523565b915061170f826116ce565b602082019050919050565b60006020820190508181036000830152611733816116f7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006117d0838361160a565b60208301905092915050565b6000602082019050919050565b60006117f482611798565b6117fe81856117a3565b9350611809836117b4565b8060005b8381101561183a57815161182188826117c4565b975061182c836117dc565b92505060018101905061180d565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b600061186e82611847565b6118788185611852565b9350611888818560208601611534565b6118918161155e565b840191505092915050565b60006101208201905081810360008301526118b7818c6117e9565b90506118c6602083018b6116a4565b6118d3604083018a611405565b81810360608301526118e58189611863565b90506118f46080830188611405565b61190160a0830187611405565b61190e60c0830186611405565b61191b60e08301856116a4565b611929610100830184611405565b9a9950505050505050505050565b600060608201905061194c6000830186611405565b818103602083015261195e8185611863565b905061196d60408301846116a4565b949350505050565b600081519050611984816113ac565b92915050565b6000602082840312156119a05761199f611370565b5b60006119ae84828501611975565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806119fe57607f821691505b602082108103611a1157611a106119b7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a5182611619565b9150611a5c83611619565b9250828203905081811115611a7457611a73611a17565b5b92915050565b7f696e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b6000611ab0601183611523565b9150611abb82611a7a565b602082019050919050565b60006020820190508181036000830152611adf81611aa3565b9050919050565b7f5265717565737420697320746f6f206f6c640000000000000000000000000000600082015250565b6000611b1c601283611523565b9150611b2782611ae6565b602082019050919050565b60006020820190508181036000830152611b4b81611b0f565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154611b7f816119e6565b611b898186611b52565b94506001821660008114611ba45760018114611bb957611bec565b60ff1983168652811515820286019350611bec565b611bc285611b5d565b60005b83811015611be457815481890152600182019150602081019050611bc5565b838801955050505b50505092915050565b7f0a0a4d653a200000000000000000000000000000000000000000000000000000600082015250565b6000611c2b600683611b52565b9150611c3682611bf5565b600682019050919050565b6000611c4c82611518565b611c568185611b52565b9350611c66818560208601611534565b80840191505092915050565b7f0a4465766963653a200000000000000000000000000000000000000000000000600082015250565b6000611ca8600983611b52565b9150611cb382611c72565b600982019050919050565b7f0a4973737565642061743a200000000000000000000000000000000000000000600082015250565b6000611cf4600c83611b52565b9150611cff82611cbe565b600c82019050919050565b6000611d168287611b72565b9150611d2182611c1e565b9150611d2d8286611c41565b9150611d3882611c9b565b9150611d448285611c41565b9150611d4f82611ce7565b9150611d5b8284611c41565b915081905095945050505050565b600080fd5b611d778261155e565b810181811067ffffffffffffffff82111715611d9657611d9561173a565b5b80604052505050565b6000611da9611366565b9050611db58282611d6e565b919050565b611dc381611619565b8114611dce57600080fd5b50565b600081359050611de081611dba565b92915050565b600060608284031215611dfc57611dfb611d69565b5b611e066060611d9f565b90506000611e16848285016113c3565b6000830152506020611e2a848285016113c3565b6020830152506040611e3e84828501611dd1565b60408301525092915050565b600060608284031215611e6057611e5f611370565b5b6000611e6e84828501611de6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f19457468657265756d205369676e6564204d6573736167653a0a000000000000600082015250565b6000611edc601a83611b52565b9150611ee782611ea6565b601a82019050919050565b600081905092915050565b6000611f0882611847565b611f128185611ef2565b9350611f22818560208601611534565b80840191505092915050565b6000611f3982611ecf565b9150611f458285611c41565b9150611f518284611efd565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000611fc2601883611523565b9150611fcd82611f8c565b602082019050919050565b60006020820190508181036000830152611ff181611fb5565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b600061202e601f83611523565b915061203982611ff8565b602082019050919050565b6000602082019050818103600083015261205d81612021565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b60006120c0602283611523565b91506120cb82612064565b604082019050919050565b600060208201905081810360008301526120ef816120b3565b9050919050565b600061210182611619565b915061210c83611619565b925082820261211a81611619565b9150828204841483151761213157612130611a17565b5b5092915050565b600061214382611619565b915061214e83611619565b925082820190508082111561216657612165611a17565b5b92915050565b600061217782611619565b91506000820361218a57612189611a17565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b60006121cb602083611523565b91506121d682612195565b602082019050919050565b600060208201905081810360008301526121fa816121be565b9050919050565b6000819050919050565b61221481612201565b82525050565b600060ff82169050919050565b6122308161221a565b82525050565b600060808201905061224b600083018761220b565b6122586020830186612227565b612265604083018561220b565b612272606083018461220b565b9594505050505056fea26469706673582212209ffa297742161d59069dbe814745d870cfd5434814ebfb411454e35e7fba9a9064736f6c634300081300334920617574686f72697a6520746869732064657669636520746f2073656e64207472616e73616374696f6e73206f6e206d7920626568616c662e","opcodes":"PUSH2 0x100 PUSH1 0x40 MSTORE PUSH1 0xF PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2B42 CODESIZE SUB DUP1 PUSH3 0x2B42 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3D SWAP2 SWAP1 PUSH3 0x41B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2B08 PUSH1 0x3A SWAP2 CODECOPY DUP1 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x68 SWAP2 SWAP1 PUSH3 0x707 JUMP JUMPDEST POP POP PUSH3 0x7B CHAINID PUSH3 0x166 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP2 PUSH3 0x8B SWAP2 SWAP1 PUSH3 0x707 JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP POP PUSH3 0x81D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH3 0x17D DUP5 PUSH3 0x245 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x19F JUMPI PUSH3 0x19E PUSH3 0x498 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x1D2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH3 0x23A JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH3 0x22D JUMPI PUSH3 0x22C PUSH3 0x7EE JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH3 0x1E0 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH3 0x2A7 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH3 0x29D JUMPI PUSH3 0x29C PUSH3 0x7EE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH3 0x2E8 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH3 0x2DE JUMPI PUSH3 0x2DD PUSH3 0x7EE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH3 0x31B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH3 0x311 JUMPI PUSH3 0x310 PUSH3 0x7EE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH3 0x348 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH3 0x33E JUMPI PUSH3 0x33D PUSH3 0x7EE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH3 0x371 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH3 0x367 JUMPI PUSH3 0x366 PUSH3 0x7EE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH3 0x398 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH3 0x38E JUMPI PUSH3 0x38D PUSH3 0x7EE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH3 0x3A8 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3E3 DUP3 PUSH3 0x3B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3F5 DUP2 PUSH3 0x3D6 JUMP JUMPDEST DUP2 EQ PUSH3 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x415 DUP2 PUSH3 0x3EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x438 JUMPI PUSH3 0x437 PUSH3 0x3B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x448 DUP8 DUP3 DUP9 ADD PUSH3 0x404 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x45B DUP8 DUP3 DUP9 ADD PUSH3 0x404 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x46E DUP8 DUP3 DUP9 ADD PUSH3 0x404 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x481 DUP8 DUP3 DUP9 ADD PUSH3 0x404 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x50F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x525 JUMPI PUSH3 0x524 PUSH3 0x4C7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x58F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x550 JUMP JUMPDEST PUSH3 0x59B DUP7 DUP4 PUSH3 0x550 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5E8 PUSH3 0x5E2 PUSH3 0x5DC DUP5 PUSH3 0x5B3 JUMP JUMPDEST PUSH3 0x5BD JUMP JUMPDEST PUSH3 0x5B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x604 DUP4 PUSH3 0x5C7 JUMP JUMPDEST PUSH3 0x61C PUSH3 0x613 DUP3 PUSH3 0x5EF JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x55D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x633 PUSH3 0x624 JUMP JUMPDEST PUSH3 0x640 DUP2 DUP5 DUP5 PUSH3 0x5F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x668 JUMPI PUSH3 0x65C PUSH1 0x0 DUP3 PUSH3 0x629 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x646 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x6B7 JUMPI PUSH3 0x681 DUP2 PUSH3 0x52B JUMP JUMPDEST PUSH3 0x68C DUP5 PUSH3 0x540 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x69C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x6B4 PUSH3 0x6AB DUP6 PUSH3 0x540 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x645 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6DC PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x6BC JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6F7 DUP4 DUP4 PUSH3 0x6C9 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x712 DUP3 PUSH3 0x48D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x72E JUMPI PUSH3 0x72D PUSH3 0x498 JUMP JUMPDEST JUMPDEST PUSH3 0x73A DUP3 SLOAD PUSH3 0x4F6 JUMP JUMPDEST PUSH3 0x747 DUP3 DUP3 DUP6 PUSH3 0x66C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x77F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x76A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x776 DUP6 DUP3 PUSH3 0x6E9 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x7E6 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x78F DUP7 PUSH3 0x52B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x7B9 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x792 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x7D9 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x7D5 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x6C9 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x22B1 PUSH3 0x857 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x4C0 ADD MSTORE PUSH1 0x0 PUSH2 0x564 ADD MSTORE PUSH1 0x0 PUSH2 0x624 ADD MSTORE PUSH1 0x0 PUSH2 0x660 ADD MSTORE PUSH2 0x22B1 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85E1F4D0 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x85E1F4D0 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xB6AD16A8 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xBEBC479C EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0xCB2E6043 EQ PUSH2 0x16B JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x6634E88 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x24F669B4 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x5E619A4A EQ PUSH2 0xCE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH2 0x1BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x80C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP3 SWAP2 SWAP1 PUSH2 0x1674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x171A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A7 DUP4 DUP4 DUP4 PUSH2 0x9D5 JUMP JUMPDEST PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3AA JUMPI PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x313 JUMPI PUSH2 0x312 PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x341 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x36B JUMPI PUSH2 0x36A PUSH2 0x1769 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x4B9 JUMP JUMPDEST PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C5 JUMPI PUSH2 0x3C4 PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3F3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x41D JUMPI PUSH2 0x41C PUSH2 0x1769 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x47E JUMPI PUSH2 0x47D PUSH2 0x1769 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xBA0BBA4000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH32 0x0 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5A1 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xB63E800D00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1688F0B9 PUSH32 0x0 DUP5 CHAINID PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0x198A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x787 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x84C SWAP1 PUSH2 0x19E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x878 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8C5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x89A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8C5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8A8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x8D5 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 NUMBER PUSH2 0x927 SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST DUP2 MSTORE POP SWAP2 POP DUP2 PUSH2 0x936 DUP4 PUSH2 0xB16 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x94E SWAP1 PUSH2 0x19E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x97A SWAP1 PUSH2 0x19E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x99C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9E1 DUP6 PUSH2 0xB6A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA33 DUP3 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xB94 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA48 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAC SWAP1 PUSH2 0x1AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD NUMBER PUSH2 0xAC3 SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST DUP7 PUSH1 0x40 ADD CALLDATALOAD LT ISZERO PUSH2 0xB09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB00 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xB27 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0xBBB JUMP JUMPDEST PUSH2 0xB34 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0xBBB JUMP JUMPDEST PUSH2 0xB41 DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB54 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB8D PUSH2 0xB88 DUP4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB83 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST PUSH2 0xCB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xBA3 DUP6 DUP6 PUSH2 0xCF1 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xBB0 DUP2 PUSH2 0xD42 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBE1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xEA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0xBF7 DUP5 PUSH2 0x10E4 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC16 JUMPI PUSH2 0xC15 PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC48 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xCAB JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0xC9F JUMPI PUSH2 0xC9E PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0xC56 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC2 DUP3 MLOAD PUSH2 0xBE8 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCD4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x41 DUP4 MLOAD SUB PUSH2 0xD32 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0xD26 DUP8 DUP3 DUP6 DUP6 PUSH2 0x1237 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD56 JUMPI PUSH2 0xD55 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD69 JUMPI PUSH2 0xD68 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0xEA5 JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD83 JUMPI PUSH2 0xD82 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD96 JUMPI PUSH2 0xD95 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST SUB PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCD SWAP1 PUSH2 0x1FD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDEA JUMPI PUSH2 0xDE9 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDFD JUMPI PUSH2 0xDFC PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST SUB PUSH2 0xE3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE34 SWAP1 PUSH2 0x2044 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE51 JUMPI PUSH2 0xE50 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE64 JUMPI PUSH2 0xE63 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST SUB PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9B SWAP1 PUSH2 0x20D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xEBB SWAP2 SWAP1 PUSH2 0x20F6 JUMP JUMPDEST PUSH2 0xEC5 SWAP2 SWAP1 PUSH2 0x2138 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEDE JUMPI PUSH2 0xEDD PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF10 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF48 JUMPI PUSH2 0xF47 PUSH2 0x1769 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xFAC JUMPI PUSH2 0xFAB PUSH2 0x1769 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xFEC SWAP2 SWAP1 PUSH2 0x20F6 JUMP JUMPDEST PUSH2 0xFF6 SWAP2 SWAP1 PUSH2 0x2138 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1096 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1038 JUMPI PUSH2 0x1037 PUSH2 0x1769 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x104F JUMPI PUSH2 0x104E PUSH2 0x1769 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x108F SWAP1 PUSH2 0x216C JUMP JUMPDEST SWAP1 POP PUSH2 0xFF9 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x10DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D1 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1142 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1138 JUMPI PUSH2 0x1137 PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x117F JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1175 JUMPI PUSH2 0x1174 PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x11AE JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x11A4 JUMPI PUSH2 0x11A3 PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x11D7 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x11CD JUMPI PUSH2 0x11CC PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x11FC JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x11F2 JUMPI PUSH2 0x11F1 PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x121F JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1215 JUMPI PUSH2 0x1214 PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x122E JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1272 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x1310 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1297 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1307 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1310 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A5 DUP3 PUSH2 0x137A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B5 DUP2 PUSH2 0x139A JUMP JUMPDEST DUP2 EQ PUSH2 0x13C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13D2 DUP2 PUSH2 0x13AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13EE JUMPI PUSH2 0x13ED PUSH2 0x1370 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13FC DUP5 DUP3 DUP6 ADD PUSH2 0x13C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x140E DUP2 PUSH2 0x139A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1429 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x144A JUMPI PUSH2 0x1449 PUSH2 0x142F JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1478 JUMPI PUSH2 0x1477 PUSH2 0x1453 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1495 JUMPI PUSH2 0x1494 PUSH2 0x1458 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x14B1 JUMPI PUSH2 0x14B0 PUSH2 0x145D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14D1 JUMPI PUSH2 0x14D0 PUSH2 0x1370 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14DF DUP7 DUP3 DUP8 ADD PUSH2 0x1434 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1500 JUMPI PUSH2 0x14FF PUSH2 0x1375 JUMP JUMPDEST JUMPDEST PUSH2 0x150C DUP7 DUP3 DUP8 ADD PUSH2 0x1462 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1552 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1537 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157A DUP3 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x1584 DUP2 DUP6 PUSH2 0x1523 JUMP JUMPDEST SWAP4 POP PUSH2 0x1594 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x159D DUP2 PUSH2 0x155E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15C2 DUP2 DUP5 PUSH2 0x156F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15E1 JUMPI PUSH2 0x15E0 PUSH2 0x1370 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15EF DUP6 DUP3 DUP7 ADD PUSH2 0x13C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1600 DUP6 DUP3 DUP7 ADD PUSH2 0x13C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1613 DUP2 PUSH2 0x139A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x162C DUP2 PUSH2 0x1619 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1648 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x160A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x165B PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x160A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x166E PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1623 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1689 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1632 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x169B DUP2 DUP5 PUSH2 0x156F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x16AD DUP2 PUSH2 0x1619 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666520616C72656164792065786973747320666F72206F776E6572000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1704 PUSH1 0x1D DUP4 PUSH2 0x1523 JUMP JUMPDEST SWAP2 POP PUSH2 0x170F DUP3 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1733 DUP2 PUSH2 0x16F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D0 DUP4 DUP4 PUSH2 0x160A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F4 DUP3 PUSH2 0x1798 JUMP JUMPDEST PUSH2 0x17FE DUP2 DUP6 PUSH2 0x17A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1809 DUP4 PUSH2 0x17B4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x183A JUMPI DUP2 MLOAD PUSH2 0x1821 DUP9 DUP3 PUSH2 0x17C4 JUMP JUMPDEST SWAP8 POP PUSH2 0x182C DUP4 PUSH2 0x17DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x180D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x186E DUP3 PUSH2 0x1847 JUMP JUMPDEST PUSH2 0x1878 DUP2 DUP6 PUSH2 0x1852 JUMP JUMPDEST SWAP4 POP PUSH2 0x1888 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x1891 DUP2 PUSH2 0x155E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18B7 DUP2 DUP13 PUSH2 0x17E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x18C6 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x16A4 JUMP JUMPDEST PUSH2 0x18D3 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x1405 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x18E5 DUP2 DUP10 PUSH2 0x1863 JUMP JUMPDEST SWAP1 POP PUSH2 0x18F4 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x190E PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x191B PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x16A4 JUMP JUMPDEST PUSH2 0x1929 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x1405 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x194C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1405 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x195E DUP2 DUP6 PUSH2 0x1863 JUMP JUMPDEST SWAP1 POP PUSH2 0x196D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16A4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1984 DUP2 PUSH2 0x13AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A0 JUMPI PUSH2 0x199F PUSH2 0x1370 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19AE DUP5 DUP3 DUP6 ADD PUSH2 0x1975 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19FE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A11 JUMPI PUSH2 0x1A10 PUSH2 0x19B7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A51 DUP3 PUSH2 0x1619 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A5C DUP4 PUSH2 0x1619 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A74 JUMPI PUSH2 0x1A73 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB0 PUSH1 0x11 DUP4 PUSH2 0x1523 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABB DUP3 PUSH2 0x1A7A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ADF DUP2 PUSH2 0x1AA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265717565737420697320746F6F206F6C640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1C PUSH1 0x12 DUP4 PUSH2 0x1523 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B27 DUP3 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B4B DUP2 PUSH2 0x1B0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x1B7F DUP2 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x1B89 DUP2 DUP7 PUSH2 0x1B52 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x1BA4 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1BB9 JUMPI PUSH2 0x1BEC JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x1BEC JUMP JUMPDEST PUSH2 0x1BC2 DUP6 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BE4 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BC5 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA0A4D653A200000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2B PUSH1 0x6 DUP4 PUSH2 0x1B52 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C36 DUP3 PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4C DUP3 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x1C56 DUP2 DUP6 PUSH2 0x1B52 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C66 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1534 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA4465766963653A200000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA8 PUSH1 0x9 DUP4 PUSH2 0x1B52 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB3 DUP3 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA4973737565642061743A200000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF4 PUSH1 0xC DUP4 PUSH2 0x1B52 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CFF DUP3 PUSH2 0x1CBE JUMP JUMPDEST PUSH1 0xC DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D16 DUP3 DUP8 PUSH2 0x1B72 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D21 DUP3 PUSH2 0x1C1E JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2D DUP3 DUP7 PUSH2 0x1C41 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D38 DUP3 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D44 DUP3 DUP6 PUSH2 0x1C41 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D4F DUP3 PUSH2 0x1CE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D5B DUP3 DUP5 PUSH2 0x1C41 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D77 DUP3 PUSH2 0x155E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D96 JUMPI PUSH2 0x1D95 PUSH2 0x173A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA9 PUSH2 0x1366 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DB5 DUP3 DUP3 PUSH2 0x1D6E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC3 DUP2 PUSH2 0x1619 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DE0 DUP2 PUSH2 0x1DBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DFC JUMPI PUSH2 0x1DFB PUSH2 0x1D69 JUMP JUMPDEST JUMPDEST PUSH2 0x1E06 PUSH1 0x60 PUSH2 0x1D9F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E16 DUP5 DUP3 DUP6 ADD PUSH2 0x13C3 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1E2A DUP5 DUP3 DUP6 ADD PUSH2 0x13C3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1E3E DUP5 DUP3 DUP6 ADD PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E60 JUMPI PUSH2 0x1E5F PUSH2 0x1370 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E6E DUP5 DUP3 DUP6 ADD PUSH2 0x1DE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EDC PUSH1 0x1A DUP4 PUSH2 0x1B52 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE7 DUP3 PUSH2 0x1EA6 JUMP JUMPDEST PUSH1 0x1A DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F08 DUP3 PUSH2 0x1847 JUMP JUMPDEST PUSH2 0x1F12 DUP2 DUP6 PUSH2 0x1EF2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F22 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1534 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F39 DUP3 PUSH2 0x1ECF JUMP JUMPDEST SWAP2 POP PUSH2 0x1F45 DUP3 DUP6 PUSH2 0x1C41 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F51 DUP3 DUP5 PUSH2 0x1EFD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC2 PUSH1 0x18 DUP4 PUSH2 0x1523 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FCD DUP3 PUSH2 0x1F8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FF1 DUP2 PUSH2 0x1FB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202E PUSH1 0x1F DUP4 PUSH2 0x1523 JUMP JUMPDEST SWAP2 POP PUSH2 0x2039 DUP3 PUSH2 0x1FF8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x205D DUP2 PUSH2 0x2021 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20C0 PUSH1 0x22 DUP4 PUSH2 0x1523 JUMP JUMPDEST SWAP2 POP PUSH2 0x20CB DUP3 PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20EF DUP2 PUSH2 0x20B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2101 DUP3 PUSH2 0x1619 JUMP JUMPDEST SWAP2 POP PUSH2 0x210C DUP4 PUSH2 0x1619 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x211A DUP2 PUSH2 0x1619 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2131 JUMPI PUSH2 0x2130 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2143 DUP3 PUSH2 0x1619 JUMP JUMPDEST SWAP2 POP PUSH2 0x214E DUP4 PUSH2 0x1619 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2166 JUMPI PUSH2 0x2165 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2177 DUP3 PUSH2 0x1619 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x218A JUMPI PUSH2 0x2189 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CB PUSH1 0x20 DUP4 PUSH2 0x1523 JUMP JUMPDEST SWAP2 POP PUSH2 0x21D6 DUP3 PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21FA DUP2 PUSH2 0x21BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2214 DUP2 PUSH2 0x2201 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2230 DUP2 PUSH2 0x221A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x224B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x2258 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2227 JUMP JUMPDEST PUSH2 0x2265 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x2272 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x220B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 STATICCALL 0x29 PUSH24 0x42161D59069DBE814745D870CFD5434814EBFB411454E35E PUSH32 0xBA9A9064736F6C634300081300334920617574686F72697A6520746869732064 PUSH6 0x766963652074 PUSH16 0x2073656E64207472616E73616374696F PUSH15 0x73206F6E206D7920626568616C662E ","sourceMap":"623:3084:7:-:0;;;407:2:6;376:33;;1130:541:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;529:77:6;;;;;;;;;;;;;;;;;589:10;577:9;:22;;;;;;:::i;:::-;;529:77;1430:31:7::1;1447:13;1430:16;;;:31;;:::i;:::-;1419:8;:42;;;;;;:::i;:::-;;1493:18;1471:40;;;;;;;;::::0;::::1;1547:22;1521:48;;;;;;;;::::0;::::1;1604:22;1579:47;;;;;;;;::::0;::::1;1652:12;1636:28;;;;;;;;::::0;::::1;1130:541:::0;;;;623:3084;;415:696:0;471:13;520:14;557:1;537:17;548:5;537:10;;;:17;;:::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;788:280;1032:21;788:280;1088:6;1081:13;;;;;415:696;;;:::o;9889:890:2:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:820::-;942:6;950;958;966;1015:3;1003:9;994:7;990:23;986:33;983:120;;;1022:79;;:::i;:::-;983:120;1142:1;1167:64;1223:7;1214:6;1203:9;1199:22;1167:64;:::i;:::-;1157:74;;1113:128;1280:2;1306:64;1362:7;1353:6;1342:9;1338:22;1306:64;:::i;:::-;1296:74;;1251:129;1419:2;1445:64;1501:7;1492:6;1481:9;1477:22;1445:64;:::i;:::-;1435:74;;1390:129;1558:2;1584:64;1640:7;1631:6;1620:9;1616:22;1584:64;:::i;:::-;1574:74;;1529:129;845:820;;;;;;;:::o;1671:99::-;1723:6;1757:5;1751:12;1741:22;;1671:99;;;:::o;1776:180::-;1824:77;1821:1;1814:88;1921:4;1918:1;1911:15;1945:4;1942:1;1935:15;1962:180;2010:77;2007:1;2000:88;2107:4;2104:1;2097:15;2131:4;2128:1;2121:15;2148:320;2192:6;2229:1;2223:4;2219:12;2209:22;;2276:1;2270:4;2266:12;2297:18;2287:81;;2353:4;2345:6;2341:17;2331:27;;2287:81;2415:2;2407:6;2404:14;2384:18;2381:38;2378:84;;2434:18;;:::i;:::-;2378:84;2199:269;2148:320;;;:::o;2474:141::-;2523:4;2546:3;2538:11;;2569:3;2566:1;2559:14;2603:4;2600:1;2590:18;2582:26;;2474:141;;;:::o;2621:93::-;2658:6;2705:2;2700;2693:5;2689:14;2685:23;2675:33;;2621:93;;;:::o;2720:107::-;2764:8;2814:5;2808:4;2804:16;2783:37;;2720:107;;;;:::o;2833:393::-;2902:6;2952:1;2940:10;2936:18;2975:97;3005:66;2994:9;2975:97;:::i;:::-;3093:39;3123:8;3112:9;3093:39;:::i;:::-;3081:51;;3165:4;3161:9;3154:5;3150:21;3141:30;;3214:4;3204:8;3200:19;3193:5;3190:30;3180:40;;2909:317;;2833:393;;;;;:::o;3232:77::-;3269:7;3298:5;3287:16;;3232:77;;;:::o;3315:60::-;3343:3;3364:5;3357:12;;3315:60;;;:::o;3381:142::-;3431:9;3464:53;3482:34;3491:24;3509:5;3491:24;:::i;:::-;3482:34;:::i;:::-;3464:53;:::i;:::-;3451:66;;3381:142;;;:::o;3529:75::-;3572:3;3593:5;3586:12;;3529:75;;;:::o;3610:269::-;3720:39;3751:7;3720:39;:::i;:::-;3781:91;3830:41;3854:16;3830:41;:::i;:::-;3822:6;3815:4;3809:11;3781:91;:::i;:::-;3775:4;3768:105;3686:193;3610:269;;;:::o;3885:73::-;3930:3;3885:73;:::o;3964:189::-;4041:32;;:::i;:::-;4082:65;4140:6;4132;4126:4;4082:65;:::i;:::-;4017:136;3964:189;;:::o;4159:186::-;4219:120;4236:3;4229:5;4226:14;4219:120;;;4290:39;4327:1;4320:5;4290:39;:::i;:::-;4263:1;4256:5;4252:13;4243:22;;4219:120;;;4159:186;;:::o;4351:543::-;4452:2;4447:3;4444:11;4441:446;;;4486:38;4518:5;4486:38;:::i;:::-;4570:29;4588:10;4570:29;:::i;:::-;4560:8;4556:44;4753:2;4741:10;4738:18;4735:49;;;4774:8;4759:23;;4735:49;4797:80;4853:22;4871:3;4853:22;:::i;:::-;4843:8;4839:37;4826:11;4797:80;:::i;:::-;4456:431;;4441:446;4351:543;;;:::o;4900:117::-;4954:8;5004:5;4998:4;4994:16;4973:37;;4900:117;;;;:::o;5023:169::-;5067:6;5100:51;5148:1;5144:6;5136:5;5133:1;5129:13;5100:51;:::i;:::-;5096:56;5181:4;5175;5171:15;5161:25;;5074:118;5023:169;;;;:::o;5197:295::-;5273:4;5419:29;5444:3;5438:4;5419:29;:::i;:::-;5411:37;;5481:3;5478:1;5474:11;5468:4;5465:21;5457:29;;5197:295;;;;:::o;5497:1395::-;5614:37;5647:3;5614:37;:::i;:::-;5716:18;5708:6;5705:30;5702:56;;;5738:18;;:::i;:::-;5702:56;5782:38;5814:4;5808:11;5782:38;:::i;:::-;5867:67;5927:6;5919;5913:4;5867:67;:::i;:::-;5961:1;5985:4;5972:17;;6017:2;6009:6;6006:14;6034:1;6029:618;;;;6691:1;6708:6;6705:77;;;6757:9;6752:3;6748:19;6742:26;6733:35;;6705:77;6808:67;6868:6;6861:5;6808:67;:::i;:::-;6802:4;6795:81;6664:222;5999:887;;6029:618;6081:4;6077:9;6069:6;6065:22;6115:37;6147:4;6115:37;:::i;:::-;6174:1;6188:208;6202:7;6199:1;6196:14;6188:208;;;6281:9;6276:3;6272:19;6266:26;6258:6;6251:42;6332:1;6324:6;6320:14;6310:24;;6379:2;6368:9;6364:18;6351:31;;6225:4;6222:1;6218:12;6213:17;;6188:208;;;6424:6;6415:7;6412:19;6409:179;;;6482:9;6477:3;6473:19;6467:26;6525:48;6567:4;6559:6;6555:17;6544:9;6525:48;:::i;:::-;6517:6;6510:64;6432:156;6409:179;6634:1;6630;6622:6;6618:14;6614:22;6608:4;6601:36;6036:611;;;5999:887;;5589:1303;;;5497:1395;;:::o;6898:180::-;6946:77;6943:1;6936:88;7043:4;7040:1;7033:15;7067:4;7064:1;7057:15;623:3084:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CHAIN_ID_1820":{"entryPoint":2111,"id":1820,"parameterSlots":0,"returnSlots":0},"@STATEMENT_1628":{"entryPoint":2369,"id":1628,"parameterSlots":0,"returnSlots":0},"@_throwError_228":{"entryPoint":3394,"id":228,"parameterSlots":1,"returnSlots":0},"@authenticate_1714":{"entryPoint":2517,"id":1714,"parameterSlots":3,"returnSlots":1},"@createSafe_2026":{"entryPoint":444,"id":2026,"parameterSlots":3,"returnSlots":0},"@createTokenRequest_1744":{"entryPoint":2253,"id":1744,"parameterSlots":2,"returnSlots":2},"@hashForToken_1799":{"entryPoint":2922,"id":1799,"parameterSlots":1,"returnSlots":1},"@lengthOfToken_1631":{"entryPoint":2511,"id":1631,"parameterSlots":0,"returnSlots":0},"@log10_1237":{"entryPoint":4324,"id":1237,"parameterSlots":1,"returnSlots":1},"@ownerToSafe_1840":{"entryPoint":2060,"id":1840,"parameterSlots":0,"returnSlots":0},"@recover_301":{"entryPoint":2964,"id":301,"parameterSlots":2,"returnSlots":1},"@safeToOwner_1844":{"entryPoint":393,"id":1844,"parameterSlots":0,"returnSlots":0},"@stringToSign_1780":{"entryPoint":2838,"id":1780,"parameterSlots":1,"returnSlots":1},"@toEthSignedMessageHash_514":{"entryPoint":3254,"id":514,"parameterSlots":1,"returnSlots":1},"@toHexString_153":{"entryPoint":3752,"id":153,"parameterSlots":2,"returnSlots":1},"@toHexString_173":{"entryPoint":3003,"id":173,"parameterSlots":1,"returnSlots":1},"@toString_57":{"entryPoint":3048,"id":57,"parameterSlots":1,"returnSlots":1},"@tryRecover_274":{"entryPoint":3313,"id":274,"parameterSlots":2,"returnSlots":2},"@tryRecover_442":{"entryPoint":4663,"id":442,"parameterSlots":4,"returnSlots":2},"abi_decode_t_address":{"entryPoint":5059,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":6517,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":5218,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_struct$_TokenRequest_$1638_calldata_ptr":{"entryPoint":5172,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_TokenRequest_$1638_memory_ptr":{"entryPoint":7654,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7633,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5080,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":6538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5578,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_struct$_TokenRequest_$1638_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":5304,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_struct$_TokenRequest_$1638_memory_ptr":{"entryPoint":7754,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":6084,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":5642,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5125,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":6121,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":8715,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6243,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7933,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5487,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7233,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7026,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack":{"entryPoint":8117,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack":{"entryPoint":8638,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack":{"entryPoint":6819,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack":{"entryPoint":8225,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2b169aa240367a5e3346a41789403357443f05db737a1f62bf4f351d642c4775_to_t_string_memory_ptr_fromStack":{"entryPoint":5879,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack":{"entryPoint":8371,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7399,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7887,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7323,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7198,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5_to_t_string_memory_ptr_fromStack":{"entryPoint":6927,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack":{"entryPoint":5682,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":5667,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5796,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":8743,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_storage_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_t_string_memory_ptr_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_t_string_memory_ptr_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7434,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_t_string_memory_ptr_t_bytes_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7982,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5140,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint256__to_t_address_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":6455,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_uint256_t_address_t_bytes_memory_ptr_t_address_t_address_t_address_t_uint256_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_uint256_t_address_t_bytes_memory_ptr_t_address_t_address_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":6300,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":8758,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5544,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8152,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8673,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6854,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8260,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2b169aa240367a5e3346a41789403357443f05db737a1f62bf4f351d642c4775__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5914,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8406,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6962,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__to_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5748,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5811,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7583,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":4966,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6068,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":7005,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6040,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6215,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5400,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6108,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":6051,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":6226,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7922,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5411,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6994,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8504,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":8438,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6726,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5018,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":8705,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4986,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5657,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":8730,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":5428,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":8556,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":6630,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7534,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":6679,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":7799,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":8029,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6583,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5993,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5946,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":5208,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5203,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":5167,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":7529,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5213,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4981,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4976,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5470,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be":{"entryPoint":8076,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2":{"entryPoint":8597,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a":{"entryPoint":6778,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77":{"entryPoint":8184,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2b169aa240367a5e3346a41789403357443f05db737a1f62bf4f351d642c4775":{"entryPoint":5838,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd":{"entryPoint":8292,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb":{"entryPoint":7358,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4":{"entryPoint":7846,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60":{"entryPoint":7282,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262":{"entryPoint":7157,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5":{"entryPoint":6886,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5036,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7610,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:31354:10","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:10","statements":[{"nodeType":"YulAssignment","src":"57:19:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:10"},"nodeType":"YulFunctionCall","src":"67:9:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:10"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:10","type":""}],"src":"7:75:10"},{"body":{"nodeType":"YulBlock","src":"177:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:10"},"nodeType":"YulFunctionCall","src":"187:12:10"},"nodeType":"YulExpressionStatement","src":"187:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:10"},{"body":{"nodeType":"YulBlock","src":"300:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:10"},"nodeType":"YulFunctionCall","src":"310:12:10"},"nodeType":"YulExpressionStatement","src":"310:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:10"},{"body":{"nodeType":"YulBlock","src":"379:81:10","statements":[{"nodeType":"YulAssignment","src":"389:65:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:10"},"nodeType":"YulFunctionCall","src":"400:54:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:10"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:10","type":""}],"src":"334:126:10"},{"body":{"nodeType":"YulBlock","src":"511:51:10","statements":[{"nodeType":"YulAssignment","src":"521:35:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:10"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:10"},"nodeType":"YulFunctionCall","src":"532:24:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:10"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:10","type":""}],"src":"466:96:10"},{"body":{"nodeType":"YulBlock","src":"611:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:10"},"nodeType":"YulFunctionCall","src":"670:12:10"},"nodeType":"YulExpressionStatement","src":"670:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:10"},"nodeType":"YulFunctionCall","src":"641:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:10"},"nodeType":"YulFunctionCall","src":"631:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:10"},"nodeType":"YulFunctionCall","src":"624:43:10"},"nodeType":"YulIf","src":"621:63:10"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:10","type":""}],"src":"568:122:10"},{"body":{"nodeType":"YulBlock","src":"748:87:10","statements":[{"nodeType":"YulAssignment","src":"758:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:10"},"nodeType":"YulFunctionCall","src":"767:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:10"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:10"},"nodeType":"YulFunctionCall","src":"796:33:10"},"nodeType":"YulExpressionStatement","src":"796:33:10"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:10","type":""}],"src":"696:139:10"},{"body":{"nodeType":"YulBlock","src":"907:263:10","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:10"},"nodeType":"YulFunctionCall","src":"955:79:10"},"nodeType":"YulExpressionStatement","src":"955:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:10"},"nodeType":"YulFunctionCall","src":"924:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:10"},"nodeType":"YulFunctionCall","src":"920:32:10"},"nodeType":"YulIf","src":"917:119:10"},{"nodeType":"YulBlock","src":"1046:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:10","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:10"},"nodeType":"YulFunctionCall","src":"1121:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:10"},"nodeType":"YulFunctionCall","src":"1100:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:10"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:10","type":""}],"src":"841:329:10"},{"body":{"nodeType":"YulBlock","src":"1241:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1258:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1281:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1263:17:10"},"nodeType":"YulFunctionCall","src":"1263:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1251:6:10"},"nodeType":"YulFunctionCall","src":"1251:37:10"},"nodeType":"YulExpressionStatement","src":"1251:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1229:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1236:3:10","type":""}],"src":"1176:118:10"},{"body":{"nodeType":"YulBlock","src":"1398:124:10","statements":[{"nodeType":"YulAssignment","src":"1408:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1420:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1431:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1416:3:10"},"nodeType":"YulFunctionCall","src":"1416:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1408:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1488:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1501:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1512:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1497:3:10"},"nodeType":"YulFunctionCall","src":"1497:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1444:43:10"},"nodeType":"YulFunctionCall","src":"1444:71:10"},"nodeType":"YulExpressionStatement","src":"1444:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1370:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1382:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1393:4:10","type":""}],"src":"1300:222:10"},{"body":{"nodeType":"YulBlock","src":"1617:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1634:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1637:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1627:6:10"},"nodeType":"YulFunctionCall","src":"1627:12:10"},"nodeType":"YulExpressionStatement","src":"1627:12:10"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulFunctionDefinition","src":"1528:117:10"},{"body":{"nodeType":"YulBlock","src":"1781:152:10","statements":[{"body":{"nodeType":"YulBlock","src":"1820:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulIdentifier","src":"1822:77:10"},"nodeType":"YulFunctionCall","src":"1822:79:10"},"nodeType":"YulExpressionStatement","src":"1822:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"1802:3:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1807:6:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1798:3:10"},"nodeType":"YulFunctionCall","src":"1798:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"1816:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1794:3:10"},"nodeType":"YulFunctionCall","src":"1794:25:10"},"nodeType":"YulIf","src":"1791:112:10"},{"nodeType":"YulAssignment","src":"1912:15:10","value":{"name":"offset","nodeType":"YulIdentifier","src":"1921:6:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1912:5:10"}]}]},"name":"abi_decode_t_struct$_TokenRequest_$1638_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1759:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"1767:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1775:5:10","type":""}],"src":"1697:236:10"},{"body":{"nodeType":"YulBlock","src":"2028:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2045:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2048:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2038:6:10"},"nodeType":"YulFunctionCall","src":"2038:12:10"},"nodeType":"YulExpressionStatement","src":"2038:12:10"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1939:117:10"},{"body":{"nodeType":"YulBlock","src":"2151:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2168:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2171:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2161:6:10"},"nodeType":"YulFunctionCall","src":"2161:12:10"},"nodeType":"YulExpressionStatement","src":"2161:12:10"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"2062:117:10"},{"body":{"nodeType":"YulBlock","src":"2274:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2291:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2294:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2284:6:10"},"nodeType":"YulFunctionCall","src":"2284:12:10"},"nodeType":"YulExpressionStatement","src":"2284:12:10"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"2185:117:10"},{"body":{"nodeType":"YulBlock","src":"2395:478:10","statements":[{"body":{"nodeType":"YulBlock","src":"2444:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2446:77:10"},"nodeType":"YulFunctionCall","src":"2446:79:10"},"nodeType":"YulExpressionStatement","src":"2446:79:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2423:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2431:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2419:3:10"},"nodeType":"YulFunctionCall","src":"2419:17:10"},{"name":"end","nodeType":"YulIdentifier","src":"2438:3:10"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2415:3:10"},"nodeType":"YulFunctionCall","src":"2415:27:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2408:6:10"},"nodeType":"YulFunctionCall","src":"2408:35:10"},"nodeType":"YulIf","src":"2405:122:10"},{"nodeType":"YulAssignment","src":"2536:30:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2559:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2546:12:10"},"nodeType":"YulFunctionCall","src":"2546:20:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2536:6:10"}]},{"body":{"nodeType":"YulBlock","src":"2609:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2611:77:10"},"nodeType":"YulFunctionCall","src":"2611:79:10"},"nodeType":"YulExpressionStatement","src":"2611:79:10"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2581:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2589:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2578:2:10"},"nodeType":"YulFunctionCall","src":"2578:30:10"},"nodeType":"YulIf","src":"2575:117:10"},{"nodeType":"YulAssignment","src":"2701:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2717:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2725:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2713:3:10"},"nodeType":"YulFunctionCall","src":"2713:17:10"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2701:8:10"}]},{"body":{"nodeType":"YulBlock","src":"2784:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2786:77:10"},"nodeType":"YulFunctionCall","src":"2786:79:10"},"nodeType":"YulExpressionStatement","src":"2786:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2749:8:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2763:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2771:4:10","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2759:3:10"},"nodeType":"YulFunctionCall","src":"2759:17:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2745:3:10"},"nodeType":"YulFunctionCall","src":"2745:32:10"},{"name":"end","nodeType":"YulIdentifier","src":"2779:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2742:2:10"},"nodeType":"YulFunctionCall","src":"2742:41:10"},"nodeType":"YulIf","src":"2739:128:10"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2362:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"2370:3:10","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2378:8:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"2388:6:10","type":""}],"src":"2321:552:10"},{"body":{"nodeType":"YulBlock","src":"3013:603:10","statements":[{"body":{"nodeType":"YulBlock","src":"3060:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3062:77:10"},"nodeType":"YulFunctionCall","src":"3062:79:10"},"nodeType":"YulExpressionStatement","src":"3062:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3034:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"3043:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3030:3:10"},"nodeType":"YulFunctionCall","src":"3030:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"3055:3:10","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3026:3:10"},"nodeType":"YulFunctionCall","src":"3026:33:10"},"nodeType":"YulIf","src":"3023:120:10"},{"nodeType":"YulBlock","src":"3153:149:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3168:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"3182:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3172:6:10","type":""}]},{"nodeType":"YulAssignment","src":"3197:95:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3264:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"3275:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3260:3:10"},"nodeType":"YulFunctionCall","src":"3260:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3284:7:10"}],"functionName":{"name":"abi_decode_t_struct$_TokenRequest_$1638_calldata_ptr","nodeType":"YulIdentifier","src":"3207:52:10"},"nodeType":"YulFunctionCall","src":"3207:85:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3197:6:10"}]}]},{"nodeType":"YulBlock","src":"3312:297:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3327:46:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3358:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3369:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3354:3:10"},"nodeType":"YulFunctionCall","src":"3354:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3341:12:10"},"nodeType":"YulFunctionCall","src":"3341:32:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3331:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"3420:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3422:77:10"},"nodeType":"YulFunctionCall","src":"3422:79:10"},"nodeType":"YulExpressionStatement","src":"3422:79:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3392:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"3400:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3389:2:10"},"nodeType":"YulFunctionCall","src":"3389:30:10"},"nodeType":"YulIf","src":"3386:117:10"},{"nodeType":"YulAssignment","src":"3517:82:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3571:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"3582:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3567:3:10"},"nodeType":"YulFunctionCall","src":"3567:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3591:7:10"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"3535:31:10"},"nodeType":"YulFunctionCall","src":"3535:64:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3517:6:10"},{"name":"value2","nodeType":"YulIdentifier","src":"3525:6:10"}]}]}]},"name":"abi_decode_tuple_t_struct$_TokenRequest_$1638_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2967:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2978:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2990:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2998:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3006:6:10","type":""}],"src":"2879:737:10"},{"body":{"nodeType":"YulBlock","src":"3681:40:10","statements":[{"nodeType":"YulAssignment","src":"3692:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3708:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3702:5:10"},"nodeType":"YulFunctionCall","src":"3702:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3692:6:10"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3664:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3674:6:10","type":""}],"src":"3622:99:10"},{"body":{"nodeType":"YulBlock","src":"3823:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3840:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"3845:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3833:6:10"},"nodeType":"YulFunctionCall","src":"3833:19:10"},"nodeType":"YulExpressionStatement","src":"3833:19:10"},{"nodeType":"YulAssignment","src":"3861:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3880:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"3885:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3876:3:10"},"nodeType":"YulFunctionCall","src":"3876:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3861:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3795:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"3800:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3811:11:10","type":""}],"src":"3727:169:10"},{"body":{"nodeType":"YulBlock","src":"3964:184:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3974:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"3983:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3978:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"4043:63:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4068:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"4073:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4064:3:10"},"nodeType":"YulFunctionCall","src":"4064:11:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4087:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"4092:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4083:3:10"},"nodeType":"YulFunctionCall","src":"4083:11:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4077:5:10"},"nodeType":"YulFunctionCall","src":"4077:18:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4057:6:10"},"nodeType":"YulFunctionCall","src":"4057:39:10"},"nodeType":"YulExpressionStatement","src":"4057:39:10"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4004:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"4007:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4001:2:10"},"nodeType":"YulFunctionCall","src":"4001:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4015:19:10","statements":[{"nodeType":"YulAssignment","src":"4017:15:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4026:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"4029:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4022:3:10"},"nodeType":"YulFunctionCall","src":"4022:10:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4017:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"3997:3:10","statements":[]},"src":"3993:113:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4126:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"4131:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4122:3:10"},"nodeType":"YulFunctionCall","src":"4122:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"4140:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4115:6:10"},"nodeType":"YulFunctionCall","src":"4115:27:10"},"nodeType":"YulExpressionStatement","src":"4115:27:10"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3946:3:10","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3951:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"3956:6:10","type":""}],"src":"3902:246:10"},{"body":{"nodeType":"YulBlock","src":"4202:54:10","statements":[{"nodeType":"YulAssignment","src":"4212:38:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4230:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"4237:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4226:3:10"},"nodeType":"YulFunctionCall","src":"4226:14:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:2:10","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4242:3:10"},"nodeType":"YulFunctionCall","src":"4242:7:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4222:3:10"},"nodeType":"YulFunctionCall","src":"4222:28:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4212:6:10"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4185:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4195:6:10","type":""}],"src":"4154:102:10"},{"body":{"nodeType":"YulBlock","src":"4354:285:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4364:53:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4411:5:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4378:32:10"},"nodeType":"YulFunctionCall","src":"4378:39:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4368:6:10","type":""}]},{"nodeType":"YulAssignment","src":"4426:78:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4492:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"4497:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4433:58:10"},"nodeType":"YulFunctionCall","src":"4433:71:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4426:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4552:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"4559:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4548:3:10"},"nodeType":"YulFunctionCall","src":"4548:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"4566:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"4571:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4513:34:10"},"nodeType":"YulFunctionCall","src":"4513:65:10"},"nodeType":"YulExpressionStatement","src":"4513:65:10"},{"nodeType":"YulAssignment","src":"4587:46:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4598:3:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4625:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4603:21:10"},"nodeType":"YulFunctionCall","src":"4603:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4594:3:10"},"nodeType":"YulFunctionCall","src":"4594:39:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4587:3:10"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4335:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4342:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4350:3:10","type":""}],"src":"4262:377:10"},{"body":{"nodeType":"YulBlock","src":"4763:195:10","statements":[{"nodeType":"YulAssignment","src":"4773:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4785:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4796:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4781:3:10"},"nodeType":"YulFunctionCall","src":"4781:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4773:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4820:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4831:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4816:3:10"},"nodeType":"YulFunctionCall","src":"4816:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4839:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"4845:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4835:3:10"},"nodeType":"YulFunctionCall","src":"4835:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4809:6:10"},"nodeType":"YulFunctionCall","src":"4809:47:10"},"nodeType":"YulExpressionStatement","src":"4809:47:10"},{"nodeType":"YulAssignment","src":"4865:86:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4937:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"4946:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4873:63:10"},"nodeType":"YulFunctionCall","src":"4873:78:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4865:4:10"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4735:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4747:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4758:4:10","type":""}],"src":"4645:313:10"},{"body":{"nodeType":"YulBlock","src":"5047:391:10","statements":[{"body":{"nodeType":"YulBlock","src":"5093:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5095:77:10"},"nodeType":"YulFunctionCall","src":"5095:79:10"},"nodeType":"YulExpressionStatement","src":"5095:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5068:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"5077:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5064:3:10"},"nodeType":"YulFunctionCall","src":"5064:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"5089:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5060:3:10"},"nodeType":"YulFunctionCall","src":"5060:32:10"},"nodeType":"YulIf","src":"5057:119:10"},{"nodeType":"YulBlock","src":"5186:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5201:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"5215:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5205:6:10","type":""}]},{"nodeType":"YulAssignment","src":"5230:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5265:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"5276:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5261:3:10"},"nodeType":"YulFunctionCall","src":"5261:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5285:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5240:20:10"},"nodeType":"YulFunctionCall","src":"5240:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5230:6:10"}]}]},{"nodeType":"YulBlock","src":"5313:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5328:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"5342:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5332:6:10","type":""}]},{"nodeType":"YulAssignment","src":"5358:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5393:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"5404:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5389:3:10"},"nodeType":"YulFunctionCall","src":"5389:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5413:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5368:20:10"},"nodeType":"YulFunctionCall","src":"5368:53:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5358:6:10"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5009:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5020:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5032:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5040:6:10","type":""}],"src":"4964:474:10"},{"body":{"nodeType":"YulBlock","src":"5499:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5516:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5539:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5521:17:10"},"nodeType":"YulFunctionCall","src":"5521:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5509:6:10"},"nodeType":"YulFunctionCall","src":"5509:37:10"},"nodeType":"YulExpressionStatement","src":"5509:37:10"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5487:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5494:3:10","type":""}],"src":"5444:108:10"},{"body":{"nodeType":"YulBlock","src":"5603:32:10","statements":[{"nodeType":"YulAssignment","src":"5613:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"5624:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5613:7:10"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5585:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5595:7:10","type":""}],"src":"5558:77:10"},{"body":{"nodeType":"YulBlock","src":"5696:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5713:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5736:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5718:17:10"},"nodeType":"YulFunctionCall","src":"5718:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:10"},"nodeType":"YulFunctionCall","src":"5706:37:10"},"nodeType":"YulExpressionStatement","src":"5706:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5684:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5691:3:10","type":""}],"src":"5641:108:10"},{"body":{"nodeType":"YulBlock","src":"5969:572:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5979:26:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5995:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"6000:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5991:3:10"},"nodeType":"YulFunctionCall","src":"5991:14:10"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"5983:4:10","type":""}]},{"nodeType":"YulBlock","src":"6015:165:10","statements":[{"nodeType":"YulVariableDeclaration","src":"6051:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6081:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"6088:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6077:3:10"},"nodeType":"YulFunctionCall","src":"6077:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6071:5:10"},"nodeType":"YulFunctionCall","src":"6071:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6055:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6141:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6159:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"6164:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6155:3:10"},"nodeType":"YulFunctionCall","src":"6155:14:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"6107:33:10"},"nodeType":"YulFunctionCall","src":"6107:63:10"},"nodeType":"YulExpressionStatement","src":"6107:63:10"}]},{"nodeType":"YulBlock","src":"6190:166:10","statements":[{"nodeType":"YulVariableDeclaration","src":"6227:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6257:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"6264:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6253:3:10"},"nodeType":"YulFunctionCall","src":"6253:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6247:5:10"},"nodeType":"YulFunctionCall","src":"6247:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6231:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6317:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6335:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"6340:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6331:3:10"},"nodeType":"YulFunctionCall","src":"6331:14:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"6283:33:10"},"nodeType":"YulFunctionCall","src":"6283:63:10"},"nodeType":"YulExpressionStatement","src":"6283:63:10"}]},{"nodeType":"YulBlock","src":"6366:168:10","statements":[{"nodeType":"YulVariableDeclaration","src":"6405:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6435:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"6442:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6431:3:10"},"nodeType":"YulFunctionCall","src":"6431:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6425:5:10"},"nodeType":"YulFunctionCall","src":"6425:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6409:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6495:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6513:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"6518:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6509:3:10"},"nodeType":"YulFunctionCall","src":"6509:14:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6461:33:10"},"nodeType":"YulFunctionCall","src":"6461:63:10"},"nodeType":"YulExpressionStatement","src":"6461:63:10"}]}]},"name":"abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5956:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5963:3:10","type":""}],"src":"5843:698:10"},{"body":{"nodeType":"YulBlock","src":"6753:338:10","statements":[{"nodeType":"YulAssignment","src":"6763:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6775:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6786:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6771:3:10"},"nodeType":"YulFunctionCall","src":"6771:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6763:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6904:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6917:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6928:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6913:3:10"},"nodeType":"YulFunctionCall","src":"6913:17:10"}],"functionName":{"name":"abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6800:103:10"},"nodeType":"YulFunctionCall","src":"6800:131:10"},"nodeType":"YulExpressionStatement","src":"6800:131:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6952:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6963:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6948:3:10"},"nodeType":"YulFunctionCall","src":"6948:18:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6972:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"6978:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6968:3:10"},"nodeType":"YulFunctionCall","src":"6968:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6941:6:10"},"nodeType":"YulFunctionCall","src":"6941:48:10"},"nodeType":"YulExpressionStatement","src":"6941:48:10"},{"nodeType":"YulAssignment","src":"6998:86:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7070:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"7079:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7006:63:10"},"nodeType":"YulFunctionCall","src":"7006:78:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6998:4:10"}]}]},"name":"abi_encode_tuple_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__to_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6717:9:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6729:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6737:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6748:4:10","type":""}],"src":"6547:544:10"},{"body":{"nodeType":"YulBlock","src":"7162:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7179:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7202:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7184:17:10"},"nodeType":"YulFunctionCall","src":"7184:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7172:6:10"},"nodeType":"YulFunctionCall","src":"7172:37:10"},"nodeType":"YulExpressionStatement","src":"7172:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7150:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7157:3:10","type":""}],"src":"7097:118:10"},{"body":{"nodeType":"YulBlock","src":"7319:124:10","statements":[{"nodeType":"YulAssignment","src":"7329:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7341:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7352:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7337:3:10"},"nodeType":"YulFunctionCall","src":"7337:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7329:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7409:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7422:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7433:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7418:3:10"},"nodeType":"YulFunctionCall","src":"7418:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7365:43:10"},"nodeType":"YulFunctionCall","src":"7365:71:10"},"nodeType":"YulExpressionStatement","src":"7365:71:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7291:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7303:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7314:4:10","type":""}],"src":"7221:222:10"},{"body":{"nodeType":"YulBlock","src":"7555:73:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7577:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"7585:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7573:3:10"},"nodeType":"YulFunctionCall","src":"7573:14:10"},{"hexValue":"5361666520616c72656164792065786973747320666f72206f776e6572","kind":"string","nodeType":"YulLiteral","src":"7589:31:10","type":"","value":"Safe already exists for owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7566:6:10"},"nodeType":"YulFunctionCall","src":"7566:55:10"},"nodeType":"YulExpressionStatement","src":"7566:55:10"}]},"name":"store_literal_in_memory_2b169aa240367a5e3346a41789403357443f05db737a1f62bf4f351d642c4775","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7547:6:10","type":""}],"src":"7449:179:10"},{"body":{"nodeType":"YulBlock","src":"7780:220:10","statements":[{"nodeType":"YulAssignment","src":"7790:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7856:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"7861:2:10","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7797:58:10"},"nodeType":"YulFunctionCall","src":"7797:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7790:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7962:3:10"}],"functionName":{"name":"store_literal_in_memory_2b169aa240367a5e3346a41789403357443f05db737a1f62bf4f351d642c4775","nodeType":"YulIdentifier","src":"7873:88:10"},"nodeType":"YulFunctionCall","src":"7873:93:10"},"nodeType":"YulExpressionStatement","src":"7873:93:10"},{"nodeType":"YulAssignment","src":"7975:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7986:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"7991:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7982:3:10"},"nodeType":"YulFunctionCall","src":"7982:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7975:3:10"}]}]},"name":"abi_encode_t_stringliteral_2b169aa240367a5e3346a41789403357443f05db737a1f62bf4f351d642c4775_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7768:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7776:3:10","type":""}],"src":"7634:366:10"},{"body":{"nodeType":"YulBlock","src":"8177:248:10","statements":[{"nodeType":"YulAssignment","src":"8187:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8199:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8210:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8195:3:10"},"nodeType":"YulFunctionCall","src":"8195:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8187:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8234:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8245:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8230:3:10"},"nodeType":"YulFunctionCall","src":"8230:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8253:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"8259:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8249:3:10"},"nodeType":"YulFunctionCall","src":"8249:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8223:6:10"},"nodeType":"YulFunctionCall","src":"8223:47:10"},"nodeType":"YulExpressionStatement","src":"8223:47:10"},{"nodeType":"YulAssignment","src":"8279:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8413:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_2b169aa240367a5e3346a41789403357443f05db737a1f62bf4f351d642c4775_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8287:124:10"},"nodeType":"YulFunctionCall","src":"8287:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8279:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_2b169aa240367a5e3346a41789403357443f05db737a1f62bf4f351d642c4775__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8157:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8172:4:10","type":""}],"src":"8006:419:10"},{"body":{"nodeType":"YulBlock","src":"8459:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8476:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8479:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8469:6:10"},"nodeType":"YulFunctionCall","src":"8469:88:10"},"nodeType":"YulExpressionStatement","src":"8469:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8573:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8576:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8566:6:10"},"nodeType":"YulFunctionCall","src":"8566:15:10"},"nodeType":"YulExpressionStatement","src":"8566:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8597:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8600:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8590:6:10"},"nodeType":"YulFunctionCall","src":"8590:15:10"},"nodeType":"YulExpressionStatement","src":"8590:15:10"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"8431:180:10"},{"body":{"nodeType":"YulBlock","src":"8645:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8662:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8665:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8655:6:10"},"nodeType":"YulFunctionCall","src":"8655:88:10"},"nodeType":"YulExpressionStatement","src":"8655:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8759:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8762:4:10","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8752:6:10"},"nodeType":"YulFunctionCall","src":"8752:15:10"},"nodeType":"YulExpressionStatement","src":"8752:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8783:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8786:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8776:6:10"},"nodeType":"YulFunctionCall","src":"8776:15:10"},"nodeType":"YulExpressionStatement","src":"8776:15:10"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"8617:180:10"},{"body":{"nodeType":"YulBlock","src":"8877:40:10","statements":[{"nodeType":"YulAssignment","src":"8888:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8904:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8898:5:10"},"nodeType":"YulFunctionCall","src":"8898:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8888:6:10"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8860:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8870:6:10","type":""}],"src":"8803:114:10"},{"body":{"nodeType":"YulBlock","src":"9034:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9051:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"9056:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9044:6:10"},"nodeType":"YulFunctionCall","src":"9044:19:10"},"nodeType":"YulExpressionStatement","src":"9044:19:10"},{"nodeType":"YulAssignment","src":"9072:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9091:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"9096:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9087:3:10"},"nodeType":"YulFunctionCall","src":"9087:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9072:11:10"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9006:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"9011:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9022:11:10","type":""}],"src":"8923:184:10"},{"body":{"nodeType":"YulBlock","src":"9185:60:10","statements":[{"nodeType":"YulAssignment","src":"9195:11:10","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9203:3:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9195:4:10"}]},{"nodeType":"YulAssignment","src":"9216:22:10","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9228:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"9233:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9224:3:10"},"nodeType":"YulFunctionCall","src":"9224:14:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9216:4:10"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9172:3:10","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9180:4:10","type":""}],"src":"9113:132:10"},{"body":{"nodeType":"YulBlock","src":"9331:99:10","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9375:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"9383:3:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"9341:33:10"},"nodeType":"YulFunctionCall","src":"9341:46:10"},"nodeType":"YulExpressionStatement","src":"9341:46:10"},{"nodeType":"YulAssignment","src":"9396:28:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9414:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"9419:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9410:3:10"},"nodeType":"YulFunctionCall","src":"9410:14:10"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"9396:10:10"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"9304:6:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9312:3:10","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"9320:10:10","type":""}],"src":"9251:179:10"},{"body":{"nodeType":"YulBlock","src":"9511:38:10","statements":[{"nodeType":"YulAssignment","src":"9521:22:10","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9533:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"9538:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9529:3:10"},"nodeType":"YulFunctionCall","src":"9529:14:10"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"9521:4:10"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9498:3:10","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"9506:4:10","type":""}],"src":"9436:113:10"},{"body":{"nodeType":"YulBlock","src":"9709:608:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9719:68:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9781:5:10"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9733:47:10"},"nodeType":"YulFunctionCall","src":"9733:54:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9723:6:10","type":""}]},{"nodeType":"YulAssignment","src":"9796:93:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9877:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"9882:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9803:73:10"},"nodeType":"YulFunctionCall","src":"9803:86:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9796:3:10"}]},{"nodeType":"YulVariableDeclaration","src":"9898:71:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9963:5:10"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9913:49:10"},"nodeType":"YulFunctionCall","src":"9913:56:10"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"9902:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9978:21:10","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"9992:7:10"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"9982:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"10068:224:10","statements":[{"nodeType":"YulVariableDeclaration","src":"10082:34:10","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10109:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10103:5:10"},"nodeType":"YulFunctionCall","src":"10103:13:10"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"10086:13:10","type":""}]},{"nodeType":"YulAssignment","src":"10129:70:10","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"10180:13:10"},{"name":"pos","nodeType":"YulIdentifier","src":"10195:3:10"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"10136:43:10"},"nodeType":"YulFunctionCall","src":"10136:63:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10129:3:10"}]},{"nodeType":"YulAssignment","src":"10212:70:10","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10275:6:10"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10222:52:10"},"nodeType":"YulFunctionCall","src":"10222:60:10"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10212:6:10"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10030:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"10033:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10027:2:10"},"nodeType":"YulFunctionCall","src":"10027:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10041:18:10","statements":[{"nodeType":"YulAssignment","src":"10043:14:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10052:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"10055:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10048:3:10"},"nodeType":"YulFunctionCall","src":"10048:9:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10043:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"10012:14:10","statements":[{"nodeType":"YulVariableDeclaration","src":"10014:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"10023:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10018:1:10","type":""}]}]},"src":"10008:284:10"},{"nodeType":"YulAssignment","src":"10301:10:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"10308:3:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10301:3:10"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9688:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9695:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9704:3:10","type":""}],"src":"9585:732:10"},{"body":{"nodeType":"YulBlock","src":"10381:40:10","statements":[{"nodeType":"YulAssignment","src":"10392:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10408:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10402:5:10"},"nodeType":"YulFunctionCall","src":"10402:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10392:6:10"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10364:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10374:6:10","type":""}],"src":"10323:98:10"},{"body":{"nodeType":"YulBlock","src":"10522:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10539:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"10544:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10532:6:10"},"nodeType":"YulFunctionCall","src":"10532:19:10"},"nodeType":"YulExpressionStatement","src":"10532:19:10"},{"nodeType":"YulAssignment","src":"10560:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10579:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"10584:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10575:3:10"},"nodeType":"YulFunctionCall","src":"10575:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10560:11:10"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10494:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"10499:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10510:11:10","type":""}],"src":"10427:168:10"},{"body":{"nodeType":"YulBlock","src":"10691:283:10","statements":[{"nodeType":"YulVariableDeclaration","src":"10701:52:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10747:5:10"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10715:31:10"},"nodeType":"YulFunctionCall","src":"10715:38:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10705:6:10","type":""}]},{"nodeType":"YulAssignment","src":"10762:77:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10827:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"10832:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10769:57:10"},"nodeType":"YulFunctionCall","src":"10769:70:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10762:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10887:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"10894:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10883:3:10"},"nodeType":"YulFunctionCall","src":"10883:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"10901:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"10906:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10848:34:10"},"nodeType":"YulFunctionCall","src":"10848:65:10"},"nodeType":"YulExpressionStatement","src":"10848:65:10"},{"nodeType":"YulAssignment","src":"10922:46:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10933:3:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10960:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10938:21:10"},"nodeType":"YulFunctionCall","src":"10938:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10929:3:10"},"nodeType":"YulFunctionCall","src":"10929:39:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10922:3:10"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10672:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10679:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10687:3:10","type":""}],"src":"10601:373:10"},{"body":{"nodeType":"YulBlock","src":"11370:956:10","statements":[{"nodeType":"YulAssignment","src":"11380:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11392:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11403:3:10","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11388:3:10"},"nodeType":"YulFunctionCall","src":"11388:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11380:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11428:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11439:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11424:3:10"},"nodeType":"YulFunctionCall","src":"11424:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11447:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"11453:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11443:3:10"},"nodeType":"YulFunctionCall","src":"11443:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11417:6:10"},"nodeType":"YulFunctionCall","src":"11417:47:10"},"nodeType":"YulExpressionStatement","src":"11417:47:10"},{"nodeType":"YulAssignment","src":"11473:116:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11575:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"11584:4:10"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11481:93:10"},"nodeType":"YulFunctionCall","src":"11481:108:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11473:4:10"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11643:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11656:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11667:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11652:3:10"},"nodeType":"YulFunctionCall","src":"11652:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11599:43:10"},"nodeType":"YulFunctionCall","src":"11599:72:10"},"nodeType":"YulExpressionStatement","src":"11599:72:10"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11725:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11738:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11749:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11734:3:10"},"nodeType":"YulFunctionCall","src":"11734:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11681:43:10"},"nodeType":"YulFunctionCall","src":"11681:72:10"},"nodeType":"YulExpressionStatement","src":"11681:72:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11774:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11785:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11770:3:10"},"nodeType":"YulFunctionCall","src":"11770:18:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11794:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"11800:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11790:3:10"},"nodeType":"YulFunctionCall","src":"11790:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11763:6:10"},"nodeType":"YulFunctionCall","src":"11763:48:10"},"nodeType":"YulExpressionStatement","src":"11763:48:10"},{"nodeType":"YulAssignment","src":"11820:84:10","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11890:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"11899:4:10"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11828:61:10"},"nodeType":"YulFunctionCall","src":"11828:76:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11820:4:10"}]},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"11958:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11971:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11982:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11967:3:10"},"nodeType":"YulFunctionCall","src":"11967:19:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11914:43:10"},"nodeType":"YulFunctionCall","src":"11914:73:10"},"nodeType":"YulExpressionStatement","src":"11914:73:10"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"12041:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12054:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12065:3:10","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12050:3:10"},"nodeType":"YulFunctionCall","src":"12050:19:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11997:43:10"},"nodeType":"YulFunctionCall","src":"11997:73:10"},"nodeType":"YulExpressionStatement","src":"11997:73:10"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"12124:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12137:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12148:3:10","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12133:3:10"},"nodeType":"YulFunctionCall","src":"12133:19:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12080:43:10"},"nodeType":"YulFunctionCall","src":"12080:73:10"},"nodeType":"YulExpressionStatement","src":"12080:73:10"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"12207:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12220:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12231:3:10","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12216:3:10"},"nodeType":"YulFunctionCall","src":"12216:19:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12163:43:10"},"nodeType":"YulFunctionCall","src":"12163:73:10"},"nodeType":"YulExpressionStatement","src":"12163:73:10"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"12290:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12303:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12314:3:10","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12299:3:10"},"nodeType":"YulFunctionCall","src":"12299:19:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12246:43:10"},"nodeType":"YulFunctionCall","src":"12246:73:10"},"nodeType":"YulExpressionStatement","src":"12246:73:10"}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_uint256_t_address_t_bytes_memory_ptr_t_address_t_address_t_address_t_uint256_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_uint256_t_address_t_bytes_memory_ptr_t_address_t_address_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11278:9:10","type":""},{"name":"value8","nodeType":"YulTypedName","src":"11290:6:10","type":""},{"name":"value7","nodeType":"YulTypedName","src":"11298:6:10","type":""},{"name":"value6","nodeType":"YulTypedName","src":"11306:6:10","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11314:6:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11322:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11330:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11338:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11346:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11354:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11365:4:10","type":""}],"src":"10980:1346:10"},{"body":{"nodeType":"YulBlock","src":"12504:357:10","statements":[{"nodeType":"YulAssignment","src":"12514:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12526:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12537:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12522:3:10"},"nodeType":"YulFunctionCall","src":"12522:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12514:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12594:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12607:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12618:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12603:3:10"},"nodeType":"YulFunctionCall","src":"12603:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12550:43:10"},"nodeType":"YulFunctionCall","src":"12550:71:10"},"nodeType":"YulExpressionStatement","src":"12550:71:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12642:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12653:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12638:3:10"},"nodeType":"YulFunctionCall","src":"12638:18:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12662:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"12668:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12658:3:10"},"nodeType":"YulFunctionCall","src":"12658:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12631:6:10"},"nodeType":"YulFunctionCall","src":"12631:48:10"},"nodeType":"YulExpressionStatement","src":"12631:48:10"},{"nodeType":"YulAssignment","src":"12688:84:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12758:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"12767:4:10"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12696:61:10"},"nodeType":"YulFunctionCall","src":"12696:76:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12688:4:10"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12826:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12839:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12850:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12835:3:10"},"nodeType":"YulFunctionCall","src":"12835:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12782:43:10"},"nodeType":"YulFunctionCall","src":"12782:72:10"},"nodeType":"YulExpressionStatement","src":"12782:72:10"}]},"name":"abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint256__to_t_address_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12460:9:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12472:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12480:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12488:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12499:4:10","type":""}],"src":"12332:529:10"},{"body":{"nodeType":"YulBlock","src":"12930:80:10","statements":[{"nodeType":"YulAssignment","src":"12940:22:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12955:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12949:5:10"},"nodeType":"YulFunctionCall","src":"12949:13:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12940:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12998:5:10"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"12971:26:10"},"nodeType":"YulFunctionCall","src":"12971:33:10"},"nodeType":"YulExpressionStatement","src":"12971:33:10"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12908:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"12916:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12924:5:10","type":""}],"src":"12867:143:10"},{"body":{"nodeType":"YulBlock","src":"13093:274:10","statements":[{"body":{"nodeType":"YulBlock","src":"13139:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13141:77:10"},"nodeType":"YulFunctionCall","src":"13141:79:10"},"nodeType":"YulExpressionStatement","src":"13141:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13114:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"13123:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13110:3:10"},"nodeType":"YulFunctionCall","src":"13110:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"13135:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13106:3:10"},"nodeType":"YulFunctionCall","src":"13106:32:10"},"nodeType":"YulIf","src":"13103:119:10"},{"nodeType":"YulBlock","src":"13232:128:10","statements":[{"nodeType":"YulVariableDeclaration","src":"13247:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"13261:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13251:6:10","type":""}]},{"nodeType":"YulAssignment","src":"13276:74:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13322:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"13333:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13318:3:10"},"nodeType":"YulFunctionCall","src":"13318:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13342:7:10"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"13286:31:10"},"nodeType":"YulFunctionCall","src":"13286:64:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13276:6:10"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13063:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13074:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13086:6:10","type":""}],"src":"13016:351:10"},{"body":{"nodeType":"YulBlock","src":"13401:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13418:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13421:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13411:6:10"},"nodeType":"YulFunctionCall","src":"13411:88:10"},"nodeType":"YulExpressionStatement","src":"13411:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13515:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13518:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13508:6:10"},"nodeType":"YulFunctionCall","src":"13508:15:10"},"nodeType":"YulExpressionStatement","src":"13508:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13539:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13542:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13532:6:10"},"nodeType":"YulFunctionCall","src":"13532:15:10"},"nodeType":"YulExpressionStatement","src":"13532:15:10"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"13373:180:10"},{"body":{"nodeType":"YulBlock","src":"13610:269:10","statements":[{"nodeType":"YulAssignment","src":"13620:22:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13634:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"13640:1:10","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"13630:3:10"},"nodeType":"YulFunctionCall","src":"13630:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13620:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"13651:38:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13681:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"13687:1:10","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13677:3:10"},"nodeType":"YulFunctionCall","src":"13677:12:10"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"13655:18:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"13728:51:10","statements":[{"nodeType":"YulAssignment","src":"13742:27:10","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13756:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"13764:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13752:3:10"},"nodeType":"YulFunctionCall","src":"13752:17:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13742:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13708:18:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13701:6:10"},"nodeType":"YulFunctionCall","src":"13701:26:10"},"nodeType":"YulIf","src":"13698:81:10"},{"body":{"nodeType":"YulBlock","src":"13831:42:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"13845:16:10"},"nodeType":"YulFunctionCall","src":"13845:18:10"},"nodeType":"YulExpressionStatement","src":"13845:18:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13795:18:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13818:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"13826:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13815:2:10"},"nodeType":"YulFunctionCall","src":"13815:14:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13792:2:10"},"nodeType":"YulFunctionCall","src":"13792:38:10"},"nodeType":"YulIf","src":"13789:84:10"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13594:4:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13603:6:10","type":""}],"src":"13559:320:10"},{"body":{"nodeType":"YulBlock","src":"13913:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13930:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13933:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13923:6:10"},"nodeType":"YulFunctionCall","src":"13923:88:10"},"nodeType":"YulExpressionStatement","src":"13923:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14027:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14030:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14020:6:10"},"nodeType":"YulFunctionCall","src":"14020:15:10"},"nodeType":"YulExpressionStatement","src":"14020:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14051:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14054:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14044:6:10"},"nodeType":"YulFunctionCall","src":"14044:15:10"},"nodeType":"YulExpressionStatement","src":"14044:15:10"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"13885:180:10"},{"body":{"nodeType":"YulBlock","src":"14116:149:10","statements":[{"nodeType":"YulAssignment","src":"14126:25:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14149:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14131:17:10"},"nodeType":"YulFunctionCall","src":"14131:20:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14126:1:10"}]},{"nodeType":"YulAssignment","src":"14160:25:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14183:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14165:17:10"},"nodeType":"YulFunctionCall","src":"14165:20:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14160:1:10"}]},{"nodeType":"YulAssignment","src":"14194:17:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14206:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"14209:1:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14202:3:10"},"nodeType":"YulFunctionCall","src":"14202:9:10"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"14194:4:10"}]},{"body":{"nodeType":"YulBlock","src":"14236:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14238:16:10"},"nodeType":"YulFunctionCall","src":"14238:18:10"},"nodeType":"YulExpressionStatement","src":"14238:18:10"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"14227:4:10"},{"name":"x","nodeType":"YulIdentifier","src":"14233:1:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14224:2:10"},"nodeType":"YulFunctionCall","src":"14224:11:10"},"nodeType":"YulIf","src":"14221:37:10"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14102:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"14105:1:10","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"14111:4:10","type":""}],"src":"14071:194:10"},{"body":{"nodeType":"YulBlock","src":"14377:61:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14399:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"14407:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14395:3:10"},"nodeType":"YulFunctionCall","src":"14395:14:10"},{"hexValue":"696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"14411:19:10","type":"","value":"invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14388:6:10"},"nodeType":"YulFunctionCall","src":"14388:43:10"},"nodeType":"YulExpressionStatement","src":"14388:43:10"}]},"name":"store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14369:6:10","type":""}],"src":"14271:167:10"},{"body":{"nodeType":"YulBlock","src":"14590:220:10","statements":[{"nodeType":"YulAssignment","src":"14600:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14666:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"14671:2:10","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14607:58:10"},"nodeType":"YulFunctionCall","src":"14607:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14600:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14772:3:10"}],"functionName":{"name":"store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a","nodeType":"YulIdentifier","src":"14683:88:10"},"nodeType":"YulFunctionCall","src":"14683:93:10"},"nodeType":"YulExpressionStatement","src":"14683:93:10"},{"nodeType":"YulAssignment","src":"14785:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14796:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"14801:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14792:3:10"},"nodeType":"YulFunctionCall","src":"14792:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14785:3:10"}]}]},"name":"abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14578:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14586:3:10","type":""}],"src":"14444:366:10"},{"body":{"nodeType":"YulBlock","src":"14987:248:10","statements":[{"nodeType":"YulAssignment","src":"14997:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15009:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"15020:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15005:3:10"},"nodeType":"YulFunctionCall","src":"15005:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14997:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15044:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"15055:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15040:3:10"},"nodeType":"YulFunctionCall","src":"15040:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15063:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"15069:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15059:3:10"},"nodeType":"YulFunctionCall","src":"15059:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15033:6:10"},"nodeType":"YulFunctionCall","src":"15033:47:10"},"nodeType":"YulExpressionStatement","src":"15033:47:10"},{"nodeType":"YulAssignment","src":"15089:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15223:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15097:124:10"},"nodeType":"YulFunctionCall","src":"15097:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15089:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14967:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14982:4:10","type":""}],"src":"14816:419:10"},{"body":{"nodeType":"YulBlock","src":"15347:62:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15369:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"15377:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15365:3:10"},"nodeType":"YulFunctionCall","src":"15365:14:10"},{"hexValue":"5265717565737420697320746f6f206f6c64","kind":"string","nodeType":"YulLiteral","src":"15381:20:10","type":"","value":"Request is too old"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15358:6:10"},"nodeType":"YulFunctionCall","src":"15358:44:10"},"nodeType":"YulExpressionStatement","src":"15358:44:10"}]},"name":"store_literal_in_memory_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15339:6:10","type":""}],"src":"15241:168:10"},{"body":{"nodeType":"YulBlock","src":"15561:220:10","statements":[{"nodeType":"YulAssignment","src":"15571:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15637:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15642:2:10","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15578:58:10"},"nodeType":"YulFunctionCall","src":"15578:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15571:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15743:3:10"}],"functionName":{"name":"store_literal_in_memory_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5","nodeType":"YulIdentifier","src":"15654:88:10"},"nodeType":"YulFunctionCall","src":"15654:93:10"},"nodeType":"YulExpressionStatement","src":"15654:93:10"},{"nodeType":"YulAssignment","src":"15756:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15767:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15772:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15763:3:10"},"nodeType":"YulFunctionCall","src":"15763:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15756:3:10"}]}]},"name":"abi_encode_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15549:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15557:3:10","type":""}],"src":"15415:366:10"},{"body":{"nodeType":"YulBlock","src":"15958:248:10","statements":[{"nodeType":"YulAssignment","src":"15968:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15980:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"15991:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15976:3:10"},"nodeType":"YulFunctionCall","src":"15976:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15968:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16015:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16026:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16011:3:10"},"nodeType":"YulFunctionCall","src":"16011:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16034:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"16040:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16030:3:10"},"nodeType":"YulFunctionCall","src":"16030:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16004:6:10"},"nodeType":"YulFunctionCall","src":"16004:47:10"},"nodeType":"YulExpressionStatement","src":"16004:47:10"},{"nodeType":"YulAssignment","src":"16060:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16194:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16068:124:10"},"nodeType":"YulFunctionCall","src":"16068:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16060:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15938:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15953:4:10","type":""}],"src":"15787:419:10"},{"body":{"nodeType":"YulBlock","src":"16326:34:10","statements":[{"nodeType":"YulAssignment","src":"16336:18:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"16351:3:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16336:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16298:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"16303:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16314:11:10","type":""}],"src":"16212:148:10"},{"body":{"nodeType":"YulBlock","src":"16420:87:10","statements":[{"nodeType":"YulAssignment","src":"16430:11:10","value":{"name":"ptr","nodeType":"YulIdentifier","src":"16438:3:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16430:4:10"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16458:1:10","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"16461:3:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16451:6:10"},"nodeType":"YulFunctionCall","src":"16451:14:10"},"nodeType":"YulExpressionStatement","src":"16451:14:10"},{"nodeType":"YulAssignment","src":"16474:26:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16492:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16495:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"16482:9:10"},"nodeType":"YulFunctionCall","src":"16482:18:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16474:4:10"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16407:3:10","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"16415:4:10","type":""}],"src":"16366:141:10"},{"body":{"nodeType":"YulBlock","src":"16644:767:10","statements":[{"nodeType":"YulVariableDeclaration","src":"16654:29:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16677:5:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"16671:5:10"},"nodeType":"YulFunctionCall","src":"16671:12:10"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"16658:9:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16692:50:10","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"16732:9:10"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"16706:25:10"},"nodeType":"YulFunctionCall","src":"16706:36:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16696:6:10","type":""}]},{"nodeType":"YulAssignment","src":"16751:96:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16835:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"16840:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16758:76:10"},"nodeType":"YulFunctionCall","src":"16758:89:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16751:3:10"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"16896:159:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16949:3:10"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"16958:9:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16973:4:10","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16969:3:10"},"nodeType":"YulFunctionCall","src":"16969:9:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16954:3:10"},"nodeType":"YulFunctionCall","src":"16954:25:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16942:6:10"},"nodeType":"YulFunctionCall","src":"16942:38:10"},"nodeType":"YulExpressionStatement","src":"16942:38:10"},{"nodeType":"YulAssignment","src":"16993:52:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17004:3:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17013:6:10"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17035:6:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17028:6:10"},"nodeType":"YulFunctionCall","src":"17028:14:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17021:6:10"},"nodeType":"YulFunctionCall","src":"17021:22:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17009:3:10"},"nodeType":"YulFunctionCall","src":"17009:35:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17000:3:10"},"nodeType":"YulFunctionCall","src":"17000:45:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"16993:3:10"}]}]},"nodeType":"YulCase","src":"16889:166:10","value":{"kind":"number","nodeType":"YulLiteral","src":"16894:1:10","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"17071:334:10","statements":[{"nodeType":"YulVariableDeclaration","src":"17116:53:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17163:5:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"17131:31:10"},"nodeType":"YulFunctionCall","src":"17131:38:10"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"17120:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17182:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"17191:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17186:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"17249:110:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17278:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"17283:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17274:3:10"},"nodeType":"YulFunctionCall","src":"17274:11:10"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"17293:7:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"17287:5:10"},"nodeType":"YulFunctionCall","src":"17287:14:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17267:6:10"},"nodeType":"YulFunctionCall","src":"17267:35:10"},"nodeType":"YulExpressionStatement","src":"17267:35:10"},{"nodeType":"YulAssignment","src":"17319:26:10","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"17334:7:10"},{"kind":"number","nodeType":"YulLiteral","src":"17343:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17330:3:10"},"nodeType":"YulFunctionCall","src":"17330:15:10"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"17319:7:10"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17216:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"17219:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17213:2:10"},"nodeType":"YulFunctionCall","src":"17213:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17227:21:10","statements":[{"nodeType":"YulAssignment","src":"17229:17:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17238:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"17241:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17234:3:10"},"nodeType":"YulFunctionCall","src":"17234:12:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17229:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"17209:3:10","statements":[]},"src":"17205:154:10"},{"nodeType":"YulAssignment","src":"17372:23:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17383:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"17388:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17379:3:10"},"nodeType":"YulFunctionCall","src":"17379:16:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17372:3:10"}]}]},"nodeType":"YulCase","src":"17064:341:10","value":{"kind":"number","nodeType":"YulLiteral","src":"17069:1:10","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"16867:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16878:1:10","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16863:3:10"},"nodeType":"YulFunctionCall","src":"16863:17:10"},"nodeType":"YulSwitch","src":"16856:549:10"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16625:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16632:3:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"16640:3:10","type":""}],"src":"16537:874:10"},{"body":{"nodeType":"YulBlock","src":"17523:108:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17545:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"17553:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17541:3:10"},"nodeType":"YulFunctionCall","src":"17541:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"17557:66:10","type":"","value":"0x0a0a4d653a200000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17534:6:10"},"nodeType":"YulFunctionCall","src":"17534:90:10"},"nodeType":"YulExpressionStatement","src":"17534:90:10"}]},"name":"store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17515:6:10","type":""}],"src":"17417:214:10"},{"body":{"nodeType":"YulBlock","src":"17801:236:10","statements":[{"nodeType":"YulAssignment","src":"17811:91:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17895:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"17900:1:10","type":"","value":"6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17818:76:10"},"nodeType":"YulFunctionCall","src":"17818:84:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17811:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18000:3:10"}],"functionName":{"name":"store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262","nodeType":"YulIdentifier","src":"17911:88:10"},"nodeType":"YulFunctionCall","src":"17911:93:10"},"nodeType":"YulExpressionStatement","src":"17911:93:10"},{"nodeType":"YulAssignment","src":"18013:18:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18024:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18029:1:10","type":"","value":"6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18020:3:10"},"nodeType":"YulFunctionCall","src":"18020:11:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18013:3:10"}]}]},"name":"abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17789:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17797:3:10","type":""}],"src":"17637:400:10"},{"body":{"nodeType":"YulBlock","src":"18153:280:10","statements":[{"nodeType":"YulVariableDeclaration","src":"18163:53:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18210:5:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18177:32:10"},"nodeType":"YulFunctionCall","src":"18177:39:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18167:6:10","type":""}]},{"nodeType":"YulAssignment","src":"18225:96:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18309:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"18314:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18232:76:10"},"nodeType":"YulFunctionCall","src":"18232:89:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18225:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18369:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"18376:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18365:3:10"},"nodeType":"YulFunctionCall","src":"18365:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"18383:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"18388:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"18330:34:10"},"nodeType":"YulFunctionCall","src":"18330:65:10"},"nodeType":"YulExpressionStatement","src":"18330:65:10"},{"nodeType":"YulAssignment","src":"18404:23:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18415:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"18420:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18411:3:10"},"nodeType":"YulFunctionCall","src":"18411:16:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18404:3:10"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18134:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18141:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18149:3:10","type":""}],"src":"18043:390:10"},{"body":{"nodeType":"YulBlock","src":"18545:108:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18567:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"18575:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18563:3:10"},"nodeType":"YulFunctionCall","src":"18563:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"18579:66:10","type":"","value":"0x0a4465766963653a200000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18556:6:10"},"nodeType":"YulFunctionCall","src":"18556:90:10"},"nodeType":"YulExpressionStatement","src":"18556:90:10"}]},"name":"store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18537:6:10","type":""}],"src":"18439:214:10"},{"body":{"nodeType":"YulBlock","src":"18823:236:10","statements":[{"nodeType":"YulAssignment","src":"18833:91:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18917:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18922:1:10","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18840:76:10"},"nodeType":"YulFunctionCall","src":"18840:84:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18833:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19022:3:10"}],"functionName":{"name":"store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60","nodeType":"YulIdentifier","src":"18933:88:10"},"nodeType":"YulFunctionCall","src":"18933:93:10"},"nodeType":"YulExpressionStatement","src":"18933:93:10"},{"nodeType":"YulAssignment","src":"19035:18:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19046:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"19051:1:10","type":"","value":"9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19042:3:10"},"nodeType":"YulFunctionCall","src":"19042:11:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19035:3:10"}]}]},"name":"abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18811:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18819:3:10","type":""}],"src":"18659:400:10"},{"body":{"nodeType":"YulBlock","src":"19171:108:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19193:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"19201:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19189:3:10"},"nodeType":"YulFunctionCall","src":"19189:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"19205:66:10","type":"","value":"0x0a4973737565642061743a200000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19182:6:10"},"nodeType":"YulFunctionCall","src":"19182:90:10"},"nodeType":"YulExpressionStatement","src":"19182:90:10"}]},"name":"store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19163:6:10","type":""}],"src":"19065:214:10"},{"body":{"nodeType":"YulBlock","src":"19449:238:10","statements":[{"nodeType":"YulAssignment","src":"19459:92:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19543:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"19548:2:10","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19466:76:10"},"nodeType":"YulFunctionCall","src":"19466:85:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19459:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19649:3:10"}],"functionName":{"name":"store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb","nodeType":"YulIdentifier","src":"19560:88:10"},"nodeType":"YulFunctionCall","src":"19560:93:10"},"nodeType":"YulExpressionStatement","src":"19560:93:10"},{"nodeType":"YulAssignment","src":"19662:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19673:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"19678:2:10","type":"","value":"12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19669:3:10"},"nodeType":"YulFunctionCall","src":"19669:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19662:3:10"}]}]},"name":"abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19437:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19445:3:10","type":""}],"src":"19285:402:10"},{"body":{"nodeType":"YulBlock","src":"20273:967:10","statements":[{"nodeType":"YulAssignment","src":"20284:99:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20370:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"20379:3:10"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20291:78:10"},"nodeType":"YulFunctionCall","src":"20291:92:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20284:3:10"}]},{"nodeType":"YulAssignment","src":"20393:155:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20544:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20400:142:10"},"nodeType":"YulFunctionCall","src":"20400:148:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20393:3:10"}]},{"nodeType":"YulAssignment","src":"20558:102:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20647:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"20656:3:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20565:81:10"},"nodeType":"YulFunctionCall","src":"20565:95:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20558:3:10"}]},{"nodeType":"YulAssignment","src":"20670:155:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20821:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20677:142:10"},"nodeType":"YulFunctionCall","src":"20677:148:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20670:3:10"}]},{"nodeType":"YulAssignment","src":"20835:102:10","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20924:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"20933:3:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20842:81:10"},"nodeType":"YulFunctionCall","src":"20842:95:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20835:3:10"}]},{"nodeType":"YulAssignment","src":"20947:155:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21098:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20954:142:10"},"nodeType":"YulFunctionCall","src":"20954:148:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20947:3:10"}]},{"nodeType":"YulAssignment","src":"21112:102:10","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"21201:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"21210:3:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21119:81:10"},"nodeType":"YulFunctionCall","src":"21119:95:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21112:3:10"}]},{"nodeType":"YulAssignment","src":"21224:10:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"21231:3:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21224:3:10"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_t_string_memory_ptr_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_t_string_memory_ptr_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20228:3:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20234:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20242:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20250:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20258:6:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20269:3:10","type":""}],"src":"19693:1547:10"},{"body":{"nodeType":"YulBlock","src":"21335:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21352:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21355:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21345:6:10"},"nodeType":"YulFunctionCall","src":"21345:12:10"},"nodeType":"YulExpressionStatement","src":"21345:12:10"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"21246:117:10"},{"body":{"nodeType":"YulBlock","src":"21412:238:10","statements":[{"nodeType":"YulVariableDeclaration","src":"21422:58:10","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21444:6:10"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"21474:4:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"21452:21:10"},"nodeType":"YulFunctionCall","src":"21452:27:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21440:3:10"},"nodeType":"YulFunctionCall","src":"21440:40:10"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"21426:10:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"21591:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"21593:16:10"},"nodeType":"YulFunctionCall","src":"21593:18:10"},"nodeType":"YulExpressionStatement","src":"21593:18:10"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21534:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"21546:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21531:2:10"},"nodeType":"YulFunctionCall","src":"21531:34:10"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21570:10:10"},{"name":"memPtr","nodeType":"YulIdentifier","src":"21582:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21567:2:10"},"nodeType":"YulFunctionCall","src":"21567:22:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"21528:2:10"},"nodeType":"YulFunctionCall","src":"21528:62:10"},"nodeType":"YulIf","src":"21525:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21629:2:10","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21633:10:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21622:6:10"},"nodeType":"YulFunctionCall","src":"21622:22:10"},"nodeType":"YulExpressionStatement","src":"21622:22:10"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21398:6:10","type":""},{"name":"size","nodeType":"YulTypedName","src":"21406:4:10","type":""}],"src":"21369:281:10"},{"body":{"nodeType":"YulBlock","src":"21697:88:10","statements":[{"nodeType":"YulAssignment","src":"21707:30:10","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"21717:18:10"},"nodeType":"YulFunctionCall","src":"21717:20:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21707:6:10"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21766:6:10"},{"name":"size","nodeType":"YulIdentifier","src":"21774:4:10"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"21746:19:10"},"nodeType":"YulFunctionCall","src":"21746:33:10"},"nodeType":"YulExpressionStatement","src":"21746:33:10"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"21681:4:10","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"21690:6:10","type":""}],"src":"21656:129:10"},{"body":{"nodeType":"YulBlock","src":"21880:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21897:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21900:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21890:6:10"},"nodeType":"YulFunctionCall","src":"21890:12:10"},"nodeType":"YulExpressionStatement","src":"21890:12:10"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"21791:117:10"},{"body":{"nodeType":"YulBlock","src":"21957:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"22014:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22023:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22026:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22016:6:10"},"nodeType":"YulFunctionCall","src":"22016:12:10"},"nodeType":"YulExpressionStatement","src":"22016:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21980:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22005:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21987:17:10"},"nodeType":"YulFunctionCall","src":"21987:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21977:2:10"},"nodeType":"YulFunctionCall","src":"21977:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21970:6:10"},"nodeType":"YulFunctionCall","src":"21970:43:10"},"nodeType":"YulIf","src":"21967:63:10"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21950:5:10","type":""}],"src":"21914:122:10"},{"body":{"nodeType":"YulBlock","src":"22094:87:10","statements":[{"nodeType":"YulAssignment","src":"22104:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22126:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22113:12:10"},"nodeType":"YulFunctionCall","src":"22113:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22104:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22169:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"22142:26:10"},"nodeType":"YulFunctionCall","src":"22142:33:10"},"nodeType":"YulExpressionStatement","src":"22142:33:10"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22072:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"22080:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22088:5:10","type":""}],"src":"22042:139:10"},{"body":{"nodeType":"YulBlock","src":"22318:662:10","statements":[{"body":{"nodeType":"YulBlock","src":"22362:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"22364:77:10"},"nodeType":"YulFunctionCall","src":"22364:79:10"},"nodeType":"YulExpressionStatement","src":"22364:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"22339:3:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"22344:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22335:3:10"},"nodeType":"YulFunctionCall","src":"22335:19:10"},{"kind":"number","nodeType":"YulLiteral","src":"22356:4:10","type":"","value":"0x60"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22331:3:10"},"nodeType":"YulFunctionCall","src":"22331:30:10"},"nodeType":"YulIf","src":"22328:117:10"},{"nodeType":"YulAssignment","src":"22454:30:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22479:4:10","type":"","value":"0x60"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"22463:15:10"},"nodeType":"YulFunctionCall","src":"22463:21:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22454:5:10"}]},{"nodeType":"YulBlock","src":"22494:151:10","statements":[{"nodeType":"YulVariableDeclaration","src":"22530:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"22544:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22534:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22570:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"22577:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22566:3:10"},"nodeType":"YulFunctionCall","src":"22566:16:10"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22609:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"22620:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22605:3:10"},"nodeType":"YulFunctionCall","src":"22605:22:10"},{"name":"end","nodeType":"YulIdentifier","src":"22629:3:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"22584:20:10"},"nodeType":"YulFunctionCall","src":"22584:49:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22559:6:10"},"nodeType":"YulFunctionCall","src":"22559:75:10"},"nodeType":"YulExpressionStatement","src":"22559:75:10"}]},{"nodeType":"YulBlock","src":"22655:153:10","statements":[{"nodeType":"YulVariableDeclaration","src":"22692:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"22706:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22696:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22733:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"22740:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22729:3:10"},"nodeType":"YulFunctionCall","src":"22729:16:10"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22772:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"22783:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22768:3:10"},"nodeType":"YulFunctionCall","src":"22768:22:10"},{"name":"end","nodeType":"YulIdentifier","src":"22792:3:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"22747:20:10"},"nodeType":"YulFunctionCall","src":"22747:49:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22722:6:10"},"nodeType":"YulFunctionCall","src":"22722:75:10"},"nodeType":"YulExpressionStatement","src":"22722:75:10"}]},{"nodeType":"YulBlock","src":"22818:155:10","statements":[{"nodeType":"YulVariableDeclaration","src":"22857:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"22871:2:10","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22861:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22898:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"22905:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22894:3:10"},"nodeType":"YulFunctionCall","src":"22894:16:10"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22937:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"22948:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22933:3:10"},"nodeType":"YulFunctionCall","src":"22933:22:10"},{"name":"end","nodeType":"YulIdentifier","src":"22957:3:10"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"22912:20:10"},"nodeType":"YulFunctionCall","src":"22912:49:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22887:6:10"},"nodeType":"YulFunctionCall","src":"22887:75:10"},"nodeType":"YulExpressionStatement","src":"22887:75:10"}]}]},"name":"abi_decode_t_struct$_TokenRequest_$1638_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22293:9:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"22304:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22312:5:10","type":""}],"src":"22233:747:10"},{"body":{"nodeType":"YulBlock","src":"23082:293:10","statements":[{"body":{"nodeType":"YulBlock","src":"23128:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"23130:77:10"},"nodeType":"YulFunctionCall","src":"23130:79:10"},"nodeType":"YulExpressionStatement","src":"23130:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23103:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"23112:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23099:3:10"},"nodeType":"YulFunctionCall","src":"23099:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"23124:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23095:3:10"},"nodeType":"YulFunctionCall","src":"23095:32:10"},"nodeType":"YulIf","src":"23092:119:10"},{"nodeType":"YulBlock","src":"23221:147:10","statements":[{"nodeType":"YulVariableDeclaration","src":"23236:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"23250:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23240:6:10","type":""}]},{"nodeType":"YulAssignment","src":"23265:93:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23330:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"23341:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23326:3:10"},"nodeType":"YulFunctionCall","src":"23326:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23350:7:10"}],"functionName":{"name":"abi_decode_t_struct$_TokenRequest_$1638_memory_ptr","nodeType":"YulIdentifier","src":"23275:50:10"},"nodeType":"YulFunctionCall","src":"23275:83:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23265:6:10"}]}]}]},"name":"abi_decode_tuple_t_struct$_TokenRequest_$1638_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23052:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23063:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23075:6:10","type":""}],"src":"22986:389:10"},{"body":{"nodeType":"YulBlock","src":"23409:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23426:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23429:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23419:6:10"},"nodeType":"YulFunctionCall","src":"23419:88:10"},"nodeType":"YulExpressionStatement","src":"23419:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23523:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23526:4:10","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23516:6:10"},"nodeType":"YulFunctionCall","src":"23516:15:10"},"nodeType":"YulExpressionStatement","src":"23516:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23547:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23550:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23540:6:10"},"nodeType":"YulFunctionCall","src":"23540:15:10"},"nodeType":"YulExpressionStatement","src":"23540:15:10"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"23381:180:10"},{"body":{"nodeType":"YulBlock","src":"23673:108:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23695:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"23703:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23691:3:10"},"nodeType":"YulFunctionCall","src":"23691:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"23707:66:10","type":"","value":"0x19457468657265756d205369676e6564204d6573736167653a0a000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23684:6:10"},"nodeType":"YulFunctionCall","src":"23684:90:10"},"nodeType":"YulExpressionStatement","src":"23684:90:10"}]},"name":"store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23665:6:10","type":""}],"src":"23567:214:10"},{"body":{"nodeType":"YulBlock","src":"23951:238:10","statements":[{"nodeType":"YulAssignment","src":"23961:92:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24045:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"24050:2:10","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23968:76:10"},"nodeType":"YulFunctionCall","src":"23968:85:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23961:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24151:3:10"}],"functionName":{"name":"store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","nodeType":"YulIdentifier","src":"24062:88:10"},"nodeType":"YulFunctionCall","src":"24062:93:10"},"nodeType":"YulExpressionStatement","src":"24062:93:10"},{"nodeType":"YulAssignment","src":"24164:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24175:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"24180:2:10","type":"","value":"26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24171:3:10"},"nodeType":"YulFunctionCall","src":"24171:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24164:3:10"}]}]},"name":"abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23939:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23947:3:10","type":""}],"src":"23787:402:10"},{"body":{"nodeType":"YulBlock","src":"24308:34:10","statements":[{"nodeType":"YulAssignment","src":"24318:18:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"24333:3:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"24318:11:10"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24280:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"24285:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"24296:11:10","type":""}],"src":"24195:147:10"},{"body":{"nodeType":"YulBlock","src":"24456:278:10","statements":[{"nodeType":"YulVariableDeclaration","src":"24466:52:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24512:5:10"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"24480:31:10"},"nodeType":"YulFunctionCall","src":"24480:38:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"24470:6:10","type":""}]},{"nodeType":"YulAssignment","src":"24527:95:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24610:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"24615:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24534:75:10"},"nodeType":"YulFunctionCall","src":"24534:88:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24527:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24670:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"24677:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24666:3:10"},"nodeType":"YulFunctionCall","src":"24666:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"24684:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"24689:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"24631:34:10"},"nodeType":"YulFunctionCall","src":"24631:65:10"},"nodeType":"YulExpressionStatement","src":"24631:65:10"},{"nodeType":"YulAssignment","src":"24705:23:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24716:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"24721:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24712:3:10"},"nodeType":"YulFunctionCall","src":"24712:16:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24705:3:10"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24437:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24444:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24452:3:10","type":""}],"src":"24348:386:10"},{"body":{"nodeType":"YulBlock","src":"25023:414:10","statements":[{"nodeType":"YulAssignment","src":"25034:155:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25185:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25041:142:10"},"nodeType":"YulFunctionCall","src":"25041:148:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25034:3:10"}]},{"nodeType":"YulAssignment","src":"25199:102:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25288:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"25297:3:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25206:81:10"},"nodeType":"YulFunctionCall","src":"25206:95:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25199:3:10"}]},{"nodeType":"YulAssignment","src":"25311:100:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25398:6:10"},{"name":"pos","nodeType":"YulIdentifier","src":"25407:3:10"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25318:79:10"},"nodeType":"YulFunctionCall","src":"25318:93:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25311:3:10"}]},{"nodeType":"YulAssignment","src":"25421:10:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"25428:3:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25421:3:10"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_t_string_memory_ptr_t_bytes_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24994:3:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25000:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25008:6:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25019:3:10","type":""}],"src":"24740:697:10"},{"body":{"nodeType":"YulBlock","src":"25471:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25488:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25491:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25481:6:10"},"nodeType":"YulFunctionCall","src":"25481:88:10"},"nodeType":"YulExpressionStatement","src":"25481:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25585:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25588:4:10","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25578:6:10"},"nodeType":"YulFunctionCall","src":"25578:15:10"},"nodeType":"YulExpressionStatement","src":"25578:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25609:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25612:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25602:6:10"},"nodeType":"YulFunctionCall","src":"25602:15:10"},"nodeType":"YulExpressionStatement","src":"25602:15:10"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"25443:180:10"},{"body":{"nodeType":"YulBlock","src":"25735:68:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25757:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"25765:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25753:3:10"},"nodeType":"YulFunctionCall","src":"25753:14:10"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"25769:26:10","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25746:6:10"},"nodeType":"YulFunctionCall","src":"25746:50:10"},"nodeType":"YulExpressionStatement","src":"25746:50:10"}]},"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25727:6:10","type":""}],"src":"25629:174:10"},{"body":{"nodeType":"YulBlock","src":"25955:220:10","statements":[{"nodeType":"YulAssignment","src":"25965:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26031:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"26036:2:10","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25972:58:10"},"nodeType":"YulFunctionCall","src":"25972:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25965:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26137:3:10"}],"functionName":{"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulIdentifier","src":"26048:88:10"},"nodeType":"YulFunctionCall","src":"26048:93:10"},"nodeType":"YulExpressionStatement","src":"26048:93:10"},{"nodeType":"YulAssignment","src":"26150:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26161:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"26166:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26157:3:10"},"nodeType":"YulFunctionCall","src":"26157:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26150:3:10"}]}]},"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25943:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25951:3:10","type":""}],"src":"25809:366:10"},{"body":{"nodeType":"YulBlock","src":"26352:248:10","statements":[{"nodeType":"YulAssignment","src":"26362:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26374:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"26385:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26370:3:10"},"nodeType":"YulFunctionCall","src":"26370:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26362:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26409:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"26420:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26405:3:10"},"nodeType":"YulFunctionCall","src":"26405:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26428:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"26434:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26424:3:10"},"nodeType":"YulFunctionCall","src":"26424:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26398:6:10"},"nodeType":"YulFunctionCall","src":"26398:47:10"},"nodeType":"YulExpressionStatement","src":"26398:47:10"},{"nodeType":"YulAssignment","src":"26454:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26588:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26462:124:10"},"nodeType":"YulFunctionCall","src":"26462:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26454:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26332:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26347:4:10","type":""}],"src":"26181:419:10"},{"body":{"nodeType":"YulBlock","src":"26712:75:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26734:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"26742:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26730:3:10"},"nodeType":"YulFunctionCall","src":"26730:14:10"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"26746:33:10","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26723:6:10"},"nodeType":"YulFunctionCall","src":"26723:57:10"},"nodeType":"YulExpressionStatement","src":"26723:57:10"}]},"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26704:6:10","type":""}],"src":"26606:181:10"},{"body":{"nodeType":"YulBlock","src":"26939:220:10","statements":[{"nodeType":"YulAssignment","src":"26949:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27015:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"27020:2:10","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26956:58:10"},"nodeType":"YulFunctionCall","src":"26956:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26949:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27121:3:10"}],"functionName":{"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulIdentifier","src":"27032:88:10"},"nodeType":"YulFunctionCall","src":"27032:93:10"},"nodeType":"YulExpressionStatement","src":"27032:93:10"},{"nodeType":"YulAssignment","src":"27134:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27145:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"27150:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27141:3:10"},"nodeType":"YulFunctionCall","src":"27141:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27134:3:10"}]}]},"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26927:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26935:3:10","type":""}],"src":"26793:366:10"},{"body":{"nodeType":"YulBlock","src":"27336:248:10","statements":[{"nodeType":"YulAssignment","src":"27346:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27358:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"27369:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27354:3:10"},"nodeType":"YulFunctionCall","src":"27354:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27346:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27393:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"27404:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27389:3:10"},"nodeType":"YulFunctionCall","src":"27389:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27412:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"27418:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27408:3:10"},"nodeType":"YulFunctionCall","src":"27408:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27382:6:10"},"nodeType":"YulFunctionCall","src":"27382:47:10"},"nodeType":"YulExpressionStatement","src":"27382:47:10"},{"nodeType":"YulAssignment","src":"27438:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27572:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27446:124:10"},"nodeType":"YulFunctionCall","src":"27446:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27438:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27316:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27331:4:10","type":""}],"src":"27165:419:10"},{"body":{"nodeType":"YulBlock","src":"27696:115:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27718:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"27726:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27714:3:10"},"nodeType":"YulFunctionCall","src":"27714:14:10"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"27730:34:10","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27707:6:10"},"nodeType":"YulFunctionCall","src":"27707:58:10"},"nodeType":"YulExpressionStatement","src":"27707:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27786:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"27794:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27782:3:10"},"nodeType":"YulFunctionCall","src":"27782:15:10"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"27799:4:10","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27775:6:10"},"nodeType":"YulFunctionCall","src":"27775:29:10"},"nodeType":"YulExpressionStatement","src":"27775:29:10"}]},"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27688:6:10","type":""}],"src":"27590:221:10"},{"body":{"nodeType":"YulBlock","src":"27963:220:10","statements":[{"nodeType":"YulAssignment","src":"27973:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28039:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"28044:2:10","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27980:58:10"},"nodeType":"YulFunctionCall","src":"27980:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27973:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28145:3:10"}],"functionName":{"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulIdentifier","src":"28056:88:10"},"nodeType":"YulFunctionCall","src":"28056:93:10"},"nodeType":"YulExpressionStatement","src":"28056:93:10"},{"nodeType":"YulAssignment","src":"28158:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28169:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"28174:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28165:3:10"},"nodeType":"YulFunctionCall","src":"28165:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28158:3:10"}]}]},"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27951:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27959:3:10","type":""}],"src":"27817:366:10"},{"body":{"nodeType":"YulBlock","src":"28360:248:10","statements":[{"nodeType":"YulAssignment","src":"28370:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28382:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"28393:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28378:3:10"},"nodeType":"YulFunctionCall","src":"28378:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28370:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28417:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"28428:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28413:3:10"},"nodeType":"YulFunctionCall","src":"28413:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28436:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"28442:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28432:3:10"},"nodeType":"YulFunctionCall","src":"28432:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28406:6:10"},"nodeType":"YulFunctionCall","src":"28406:47:10"},"nodeType":"YulExpressionStatement","src":"28406:47:10"},{"nodeType":"YulAssignment","src":"28462:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28596:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28470:124:10"},"nodeType":"YulFunctionCall","src":"28470:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28462:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28340:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28355:4:10","type":""}],"src":"28189:419:10"},{"body":{"nodeType":"YulBlock","src":"28662:362:10","statements":[{"nodeType":"YulAssignment","src":"28672:25:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28695:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28677:17:10"},"nodeType":"YulFunctionCall","src":"28677:20:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"28672:1:10"}]},{"nodeType":"YulAssignment","src":"28706:25:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28729:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28711:17:10"},"nodeType":"YulFunctionCall","src":"28711:20:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"28706:1:10"}]},{"nodeType":"YulVariableDeclaration","src":"28740:28:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28763:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"28766:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"28759:3:10"},"nodeType":"YulFunctionCall","src":"28759:9:10"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"28744:11:10","type":""}]},{"nodeType":"YulAssignment","src":"28777:41:10","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"28806:11:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28788:17:10"},"nodeType":"YulFunctionCall","src":"28788:30:10"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"28777:7:10"}]},{"body":{"nodeType":"YulBlock","src":"28995:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28997:16:10"},"nodeType":"YulFunctionCall","src":"28997:18:10"},"nodeType":"YulExpressionStatement","src":"28997:18:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28928:1:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28921:6:10"},"nodeType":"YulFunctionCall","src":"28921:9:10"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28951:1:10"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"28958:7:10"},{"name":"x","nodeType":"YulIdentifier","src":"28967:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"28954:3:10"},"nodeType":"YulFunctionCall","src":"28954:15:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"28948:2:10"},"nodeType":"YulFunctionCall","src":"28948:22:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28901:2:10"},"nodeType":"YulFunctionCall","src":"28901:83:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28881:6:10"},"nodeType":"YulFunctionCall","src":"28881:113:10"},"nodeType":"YulIf","src":"28878:139:10"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28645:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"28648:1:10","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"28654:7:10","type":""}],"src":"28614:410:10"},{"body":{"nodeType":"YulBlock","src":"29074:147:10","statements":[{"nodeType":"YulAssignment","src":"29084:25:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29107:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29089:17:10"},"nodeType":"YulFunctionCall","src":"29089:20:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"29084:1:10"}]},{"nodeType":"YulAssignment","src":"29118:25:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29141:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29123:17:10"},"nodeType":"YulFunctionCall","src":"29123:20:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"29118:1:10"}]},{"nodeType":"YulAssignment","src":"29152:16:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29163:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"29166:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29159:3:10"},"nodeType":"YulFunctionCall","src":"29159:9:10"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"29152:3:10"}]},{"body":{"nodeType":"YulBlock","src":"29192:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29194:16:10"},"nodeType":"YulFunctionCall","src":"29194:18:10"},"nodeType":"YulExpressionStatement","src":"29194:18:10"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29184:1:10"},{"name":"sum","nodeType":"YulIdentifier","src":"29187:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29181:2:10"},"nodeType":"YulFunctionCall","src":"29181:10:10"},"nodeType":"YulIf","src":"29178:36:10"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29061:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"29064:1:10","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"29070:3:10","type":""}],"src":"29030:191:10"},{"body":{"nodeType":"YulBlock","src":"29270:128:10","statements":[{"nodeType":"YulAssignment","src":"29280:33:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29307:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29289:17:10"},"nodeType":"YulFunctionCall","src":"29289:24:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"29280:5:10"}]},{"body":{"nodeType":"YulBlock","src":"29341:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29343:16:10"},"nodeType":"YulFunctionCall","src":"29343:18:10"},"nodeType":"YulExpressionStatement","src":"29343:18:10"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29328:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"29335:4:10","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"29325:2:10"},"nodeType":"YulFunctionCall","src":"29325:15:10"},"nodeType":"YulIf","src":"29322:41:10"},{"nodeType":"YulAssignment","src":"29372:20:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29383:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"29390:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29379:3:10"},"nodeType":"YulFunctionCall","src":"29379:13:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"29372:3:10"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29256:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"29266:3:10","type":""}],"src":"29227:171:10"},{"body":{"nodeType":"YulBlock","src":"29510:76:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29532:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"29540:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29528:3:10"},"nodeType":"YulFunctionCall","src":"29528:14:10"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"29544:34:10","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29521:6:10"},"nodeType":"YulFunctionCall","src":"29521:58:10"},"nodeType":"YulExpressionStatement","src":"29521:58:10"}]},"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29502:6:10","type":""}],"src":"29404:182:10"},{"body":{"nodeType":"YulBlock","src":"29738:220:10","statements":[{"nodeType":"YulAssignment","src":"29748:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29814:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"29819:2:10","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29755:58:10"},"nodeType":"YulFunctionCall","src":"29755:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29748:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29920:3:10"}],"functionName":{"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulIdentifier","src":"29831:88:10"},"nodeType":"YulFunctionCall","src":"29831:93:10"},"nodeType":"YulExpressionStatement","src":"29831:93:10"},{"nodeType":"YulAssignment","src":"29933:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29944:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"29949:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29940:3:10"},"nodeType":"YulFunctionCall","src":"29940:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29933:3:10"}]}]},"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29726:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29734:3:10","type":""}],"src":"29592:366:10"},{"body":{"nodeType":"YulBlock","src":"30135:248:10","statements":[{"nodeType":"YulAssignment","src":"30145:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30157:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"30168:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30153:3:10"},"nodeType":"YulFunctionCall","src":"30153:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30145:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30192:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"30203:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30188:3:10"},"nodeType":"YulFunctionCall","src":"30188:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30211:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"30217:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30207:3:10"},"nodeType":"YulFunctionCall","src":"30207:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30181:6:10"},"nodeType":"YulFunctionCall","src":"30181:47:10"},"nodeType":"YulExpressionStatement","src":"30181:47:10"},{"nodeType":"YulAssignment","src":"30237:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30371:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30245:124:10"},"nodeType":"YulFunctionCall","src":"30245:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30237:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30115:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30130:4:10","type":""}],"src":"29964:419:10"},{"body":{"nodeType":"YulBlock","src":"30434:32:10","statements":[{"nodeType":"YulAssignment","src":"30444:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"30455:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"30444:7:10"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30416:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"30426:7:10","type":""}],"src":"30389:77:10"},{"body":{"nodeType":"YulBlock","src":"30537:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30554:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30577:5:10"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"30559:17:10"},"nodeType":"YulFunctionCall","src":"30559:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30547:6:10"},"nodeType":"YulFunctionCall","src":"30547:37:10"},"nodeType":"YulExpressionStatement","src":"30547:37:10"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30525:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"30532:3:10","type":""}],"src":"30472:118:10"},{"body":{"nodeType":"YulBlock","src":"30639:43:10","statements":[{"nodeType":"YulAssignment","src":"30649:27:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30664:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"30671:4:10","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30660:3:10"},"nodeType":"YulFunctionCall","src":"30660:16:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"30649:7:10"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30621:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"30631:7:10","type":""}],"src":"30596:86:10"},{"body":{"nodeType":"YulBlock","src":"30749:51:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30766:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30787:5:10"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"30771:15:10"},"nodeType":"YulFunctionCall","src":"30771:22:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30759:6:10"},"nodeType":"YulFunctionCall","src":"30759:35:10"},"nodeType":"YulExpressionStatement","src":"30759:35:10"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30737:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"30744:3:10","type":""}],"src":"30688:112:10"},{"body":{"nodeType":"YulBlock","src":"30984:367:10","statements":[{"nodeType":"YulAssignment","src":"30994:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31006:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"31017:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31002:3:10"},"nodeType":"YulFunctionCall","src":"31002:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30994:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31075:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31088:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"31099:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31084:3:10"},"nodeType":"YulFunctionCall","src":"31084:17:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"31031:43:10"},"nodeType":"YulFunctionCall","src":"31031:71:10"},"nodeType":"YulExpressionStatement","src":"31031:71:10"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31152:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31165:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"31176:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31161:3:10"},"nodeType":"YulFunctionCall","src":"31161:18:10"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"31112:39:10"},"nodeType":"YulFunctionCall","src":"31112:68:10"},"nodeType":"YulExpressionStatement","src":"31112:68:10"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"31234:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31247:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"31258:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31243:3:10"},"nodeType":"YulFunctionCall","src":"31243:18:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"31190:43:10"},"nodeType":"YulFunctionCall","src":"31190:72:10"},"nodeType":"YulExpressionStatement","src":"31190:72:10"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"31316:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31329:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"31340:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31325:3:10"},"nodeType":"YulFunctionCall","src":"31325:18:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"31272:43:10"},"nodeType":"YulFunctionCall","src":"31272:72:10"},"nodeType":"YulExpressionStatement","src":"31272:72:10"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30932:9:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"30944:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"30952:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30960:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30968:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30979:4:10","type":""}],"src":"30806:545:10"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct TokenAuthenticated.TokenRequest\n    function abi_decode_t_struct$_TokenRequest_$1638_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 96) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_struct$_TokenRequest_$1638_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_TokenRequest_$1638_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct TokenAuthenticated.TokenRequest -> struct TokenAuthenticated.TokenRequest\n    function abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // device\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // issuedAt\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__to_t_struct$_TokenRequest_$1638_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_struct$_TokenRequest_$1638_memory_ptr_to_t_struct$_TokenRequest_$1638_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_2b169aa240367a5e3346a41789403357443f05db737a1f62bf4f351d642c4775(memPtr) {\n\n        mstore(add(memPtr, 0), \"Safe already exists for owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_2b169aa240367a5e3346a41789403357443f05db737a1f62bf4f351d642c4775_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_2b169aa240367a5e3346a41789403357443f05db737a1f62bf4f351d642c4775(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2b169aa240367a5e3346a41789403357443f05db737a1f62bf4f351d642c4775__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2b169aa240367a5e3346a41789403357443f05db737a1f62bf4f351d642c4775_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_uint256_t_address_t_bytes_memory_ptr_t_address_t_address_t_address_t_uint256_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_uint256_t_address_t_bytes_memory_ptr_t_address_t_address_t_address_t_uint256_t_address__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_address_to_t_address_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_address_to_t_address_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint256__to_t_address_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Request is too old\")\n\n    }\n\n    function abi_encode_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1b16351444dae87191b0b069f1984bfe6d4e64f9f3ec80c67f746bf869d86e5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262(memPtr) {\n\n        mstore(add(memPtr, 0), 0x0a0a4d653a200000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 6)\n        store_literal_in_memory_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262(pos)\n        end := add(pos, 6)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60(memPtr) {\n\n        mstore(add(memPtr, 0), 0x0a4465766963653a200000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n        store_literal_in_memory_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60(pos)\n        end := add(pos, 9)\n    }\n\n    function store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb(memPtr) {\n\n        mstore(add(memPtr, 0), 0x0a4973737565642061743a200000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 12)\n        store_literal_in_memory_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb(pos)\n        end := add(pos, 12)\n    }\n\n    function abi_encode_tuple_packed_t_string_storage_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_t_string_memory_ptr_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_t_string_memory_ptr_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value3, value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_b70d4a09f0316675b470d275a74e24abd64b6d4eb5e347d7852826ebdc68e262_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_b571ed85e6ea272f4e1c551cc4cf3165a70bfeb79bd860502e1cbc170370bf60_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        pos := abi_encode_t_stringliteral_8be36b85de62e8188eb8bd688e4dfa86dcbf70f7cf4ad06783756a54a67827fb_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value3,  pos)\n\n        end := pos\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // struct TokenAuthenticated.TokenRequest\n    function abi_decode_t_struct$_TokenRequest_$1638_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x60) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x60)\n\n        {\n            // owner\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // device\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // issuedAt\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_TokenRequest_$1638_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_TokenRequest_$1638_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4(memPtr) {\n\n        mstore(add(memPtr, 0), 0x19457468657265756d205369676e6564204d6573736167653a0a000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 26)\n        store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4(pos)\n        end := add(pos, 26)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_t_string_memory_ptr_t_bytes_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1822":[{"length":32,"start":1632}],"1824":[{"length":32,"start":1572}],"1826":[{"length":32,"start":1380}],"1828":[{"length":32,"start":1216}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061007d5760003560e01c806385e1f4d01161005b57806385e1f4d0146100fe578063b6ad16a81461011c578063bebc479c1461014d578063cb2e60431461016b5761007d565b806306634e881461008257806324f669b4146100b25780635e619a4a146100ce575b600080fd5b61009c600480360381019061009791906113d8565b610189565b6040516100a99190611414565b60405180910390f35b6100cc60048036038101906100c791906114b8565b6101bc565b005b6100e860048036038101906100e391906113d8565b61080c565b6040516100f59190611414565b60405180910390f35b61010661083f565b60405161011391906115a8565b60405180910390f35b610136600480360381019061013191906115ca565b6108cd565b604051610144929190611674565b60405180910390f35b610155610941565b60405161016291906115a8565b60405180910390f35b6101736109cf565b60405161018091906116b3565b60405180910390f35b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff16600360008560000160208101906101eb91906113d8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461029c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102939061171a565b60405180910390fd5b6102a78383836109d5565b6102b057600080fd5b6060600073ffffffffffffffffffffffffffffffffffffffff168460200160208101906102dd91906113d8565b73ffffffffffffffffffffffffffffffffffffffff16036103aa57600167ffffffffffffffff8111156103135761031261173a565b5b6040519080825280602002602001820160405280156103415781602001602082028036833780820191505090505b50905083600001602081019061035791906113d8565b8160008151811061036b5761036a611769565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506104b9565b600267ffffffffffffffff8111156103c5576103c461173a565b5b6040519080825280602002602001820160405280156103f35781602001602082028036833780820191505090505b50905083600001602081019061040991906113d8565b8160008151811061041d5761041c611769565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083602001602081019061046a91906113d8565b8160018151811061047e5761047d611769565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b60008160017f00000000000000000000000000000000000000000000000000000000000000006040516024016040516020818303038152906040527fba0bba40000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050507f00000000000000000000000000000000000000000000000000000000000000006000806000806040516024016105a19998979695949392919061189c565b6040516020818303038152906040527fb63e800d000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631688f0b97f000000000000000000000000000000000000000000000000000000000000000084466040518463ffffffff1660e01b815260040161069f93929190611937565b6020604051808303816000875af11580156106be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e2919061198a565b905080600360008860000160208101906106fc91906113d8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600001602081019061078791906113d8565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002805461084c906119e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610878906119e6565b80156108c55780601f1061089a576101008083540402835291602001916108c5565b820191906000526020600020905b8154815290600101906020018083116108a857829003601f168201915b505050505081565b6108d5611319565b606060405180606001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020016001436109279190611a46565b81525091508161093683610b16565b915091509250929050565b6000805461094e906119e6565b80601f016020809104026020016040519081016040528092919081815260200182805461097a906119e6565b80156109c75780601f1061099c576101008083540402835291602001916109c7565b820191906000526020600020905b8154815290600101906020018083116109aa57829003601f168201915b505050505081565b60015481565b6000806109e185610b6a565b90506000610a338286868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610b94565b9050856000016020810190610a4891906113d8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ab5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aac90611ac6565b60405180910390fd5b60015443610ac39190611a46565b86604001351015610b09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0090611b32565b60405180910390fd5b6001925050509392505050565b60606000610b278360000151610bbb565b610b348460200151610bbb565b610b418560400151610be8565b604051602001610b549493929190611d0a565b6040516020818303038152906040529050919050565b6000610b8d610b8883803603810190610b839190611e4a565b610b16565b610cb6565b9050919050565b6000806000610ba38585610cf1565b91509150610bb081610d42565b819250505092915050565b6060610be18273ffffffffffffffffffffffffffffffffffffffff16601460ff16610ea8565b9050919050565b606060006001610bf7846110e4565b01905060008167ffffffffffffffff811115610c1657610c1561173a565b5b6040519080825280601f01601f191660200182016040528015610c485781602001600182028036833780820191505090505b509050600082602001820190505b600115610cab578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610c9f57610c9e611e77565b5b04945060008503610c56575b819350505050919050565b6000610cc28251610be8565b82604051602001610cd4929190611f2e565b604051602081830303815290604052805190602001209050919050565b6000806041835103610d325760008060006020860151925060408601519150606086015160001a9050610d2687828585611237565b94509450505050610d3b565b60006002915091505b9250929050565b60006004811115610d5657610d55611f5d565b5b816004811115610d6957610d68611f5d565b5b0315610ea55760016004811115610d8357610d82611f5d565b5b816004811115610d9657610d95611f5d565b5b03610dd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcd90611fd8565b60405180910390fd5b60026004811115610dea57610de9611f5d565b5b816004811115610dfd57610dfc611f5d565b5b03610e3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3490612044565b60405180910390fd5b60036004811115610e5157610e50611f5d565b5b816004811115610e6457610e63611f5d565b5b03610ea4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9b906120d6565b60405180910390fd5b5b50565b606060006002836002610ebb91906120f6565b610ec59190612138565b67ffffffffffffffff811115610ede57610edd61173a565b5b6040519080825280601f01601f191660200182016040528015610f105781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610f4857610f47611769565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610fac57610fab611769565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610fec91906120f6565b610ff69190612138565b90505b6001811115611096577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061103857611037611769565b5b1a60f81b82828151811061104f5761104e611769565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061108f9061216c565b9050610ff9565b50600084146110da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d1906121e1565b60405180910390fd5b8091505092915050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611142577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161113857611137611e77565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061117f576d04ee2d6d415b85acef8100000000838161117557611174611e77565b5b0492506020810190505b662386f26fc1000083106111ae57662386f26fc1000083816111a4576111a3611e77565b5b0492506010810190505b6305f5e10083106111d7576305f5e10083816111cd576111cc611e77565b5b0492506008810190505b61271083106111fc5761271083816111f2576111f1611e77565b5b0492506004810190505b6064831061121f576064838161121557611214611e77565b5b0492506002810190505b600a831061122e576001810190505b80915050919050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115611272576000600391509150611310565b6000600187878787604051600081526020016040526040516112979493929190612236565b6020604051602081039080840390855afa1580156112b9573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361130757600060019250925050611310565b80600092509250505b94509492505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113a58261137a565b9050919050565b6113b58161139a565b81146113c057600080fd5b50565b6000813590506113d2816113ac565b92915050565b6000602082840312156113ee576113ed611370565b5b60006113fc848285016113c3565b91505092915050565b61140e8161139a565b82525050565b60006020820190506114296000830184611405565b92915050565b600080fd5b60006060828403121561144a5761144961142f565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261147857611477611453565b5b8235905067ffffffffffffffff81111561149557611494611458565b5b6020830191508360018202830111156114b1576114b061145d565b5b9250929050565b6000806000608084860312156114d1576114d0611370565b5b60006114df86828701611434565b935050606084013567ffffffffffffffff811115611500576114ff611375565b5b61150c86828701611462565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015611552578082015181840152602081019050611537565b60008484015250505050565b6000601f19601f8301169050919050565b600061157a82611518565b6115848185611523565b9350611594818560208601611534565b61159d8161155e565b840191505092915050565b600060208201905081810360008301526115c2818461156f565b905092915050565b600080604083850312156115e1576115e0611370565b5b60006115ef858286016113c3565b9250506020611600858286016113c3565b9150509250929050565b6116138161139a565b82525050565b6000819050919050565b61162c81611619565b82525050565b606082016000820151611648600085018261160a565b50602082015161165b602085018261160a565b50604082015161166e6040850182611623565b50505050565b60006080820190506116896000830185611632565b818103606083015261169b818461156f565b90509392505050565b6116ad81611619565b82525050565b60006020820190506116c860008301846116a4565b92915050565b7f5361666520616c72656164792065786973747320666f72206f776e6572000000600082015250565b6000611704601d83611523565b915061170f826116ce565b602082019050919050565b60006020820190508181036000830152611733816116f7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006117d0838361160a565b60208301905092915050565b6000602082019050919050565b60006117f482611798565b6117fe81856117a3565b9350611809836117b4565b8060005b8381101561183a57815161182188826117c4565b975061182c836117dc565b92505060018101905061180d565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b600061186e82611847565b6118788185611852565b9350611888818560208601611534565b6118918161155e565b840191505092915050565b60006101208201905081810360008301526118b7818c6117e9565b90506118c6602083018b6116a4565b6118d3604083018a611405565b81810360608301526118e58189611863565b90506118f46080830188611405565b61190160a0830187611405565b61190e60c0830186611405565b61191b60e08301856116a4565b611929610100830184611405565b9a9950505050505050505050565b600060608201905061194c6000830186611405565b818103602083015261195e8185611863565b905061196d60408301846116a4565b949350505050565b600081519050611984816113ac565b92915050565b6000602082840312156119a05761199f611370565b5b60006119ae84828501611975565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806119fe57607f821691505b602082108103611a1157611a106119b7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a5182611619565b9150611a5c83611619565b9250828203905081811115611a7457611a73611a17565b5b92915050565b7f696e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b6000611ab0601183611523565b9150611abb82611a7a565b602082019050919050565b60006020820190508181036000830152611adf81611aa3565b9050919050565b7f5265717565737420697320746f6f206f6c640000000000000000000000000000600082015250565b6000611b1c601283611523565b9150611b2782611ae6565b602082019050919050565b60006020820190508181036000830152611b4b81611b0f565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154611b7f816119e6565b611b898186611b52565b94506001821660008114611ba45760018114611bb957611bec565b60ff1983168652811515820286019350611bec565b611bc285611b5d565b60005b83811015611be457815481890152600182019150602081019050611bc5565b838801955050505b50505092915050565b7f0a0a4d653a200000000000000000000000000000000000000000000000000000600082015250565b6000611c2b600683611b52565b9150611c3682611bf5565b600682019050919050565b6000611c4c82611518565b611c568185611b52565b9350611c66818560208601611534565b80840191505092915050565b7f0a4465766963653a200000000000000000000000000000000000000000000000600082015250565b6000611ca8600983611b52565b9150611cb382611c72565b600982019050919050565b7f0a4973737565642061743a200000000000000000000000000000000000000000600082015250565b6000611cf4600c83611b52565b9150611cff82611cbe565b600c82019050919050565b6000611d168287611b72565b9150611d2182611c1e565b9150611d2d8286611c41565b9150611d3882611c9b565b9150611d448285611c41565b9150611d4f82611ce7565b9150611d5b8284611c41565b915081905095945050505050565b600080fd5b611d778261155e565b810181811067ffffffffffffffff82111715611d9657611d9561173a565b5b80604052505050565b6000611da9611366565b9050611db58282611d6e565b919050565b611dc381611619565b8114611dce57600080fd5b50565b600081359050611de081611dba565b92915050565b600060608284031215611dfc57611dfb611d69565b5b611e066060611d9f565b90506000611e16848285016113c3565b6000830152506020611e2a848285016113c3565b6020830152506040611e3e84828501611dd1565b60408301525092915050565b600060608284031215611e6057611e5f611370565b5b6000611e6e84828501611de6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f19457468657265756d205369676e6564204d6573736167653a0a000000000000600082015250565b6000611edc601a83611b52565b9150611ee782611ea6565b601a82019050919050565b600081905092915050565b6000611f0882611847565b611f128185611ef2565b9350611f22818560208601611534565b80840191505092915050565b6000611f3982611ecf565b9150611f458285611c41565b9150611f518284611efd565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000611fc2601883611523565b9150611fcd82611f8c565b602082019050919050565b60006020820190508181036000830152611ff181611fb5565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b600061202e601f83611523565b915061203982611ff8565b602082019050919050565b6000602082019050818103600083015261205d81612021565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b60006120c0602283611523565b91506120cb82612064565b604082019050919050565b600060208201905081810360008301526120ef816120b3565b9050919050565b600061210182611619565b915061210c83611619565b925082820261211a81611619565b9150828204841483151761213157612130611a17565b5b5092915050565b600061214382611619565b915061214e83611619565b925082820190508082111561216657612165611a17565b5b92915050565b600061217782611619565b91506000820361218a57612189611a17565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b60006121cb602083611523565b91506121d682612195565b602082019050919050565b600060208201905081810360008301526121fa816121be565b9050919050565b6000819050919050565b61221481612201565b82525050565b600060ff82169050919050565b6122308161221a565b82525050565b600060808201905061224b600083018761220b565b6122586020830186612227565b612265604083018561220b565b612272606083018461220b565b9594505050505056fea26469706673582212209ffa297742161d59069dbe814745d870cfd5434814ebfb411454e35e7fba9a9064736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85E1F4D0 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x85E1F4D0 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xB6AD16A8 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xBEBC479C EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0xCB2E6043 EQ PUSH2 0x16B JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x6634E88 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x24F669B4 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x5E619A4A EQ PUSH2 0xCE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH2 0x1BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x80C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP3 SWAP2 SWAP1 PUSH2 0x1674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP1 PUSH2 0x171A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A7 DUP4 DUP4 DUP4 PUSH2 0x9D5 JUMP JUMPDEST PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3AA JUMPI PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x313 JUMPI PUSH2 0x312 PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x341 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x36B JUMPI PUSH2 0x36A PUSH2 0x1769 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x4B9 JUMP JUMPDEST PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C5 JUMPI PUSH2 0x3C4 PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3F3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x41D JUMPI PUSH2 0x41C PUSH2 0x1769 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x47E JUMPI PUSH2 0x47D PUSH2 0x1769 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xBA0BBA4000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH32 0x0 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5A1 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xB63E800D00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1688F0B9 PUSH32 0x0 DUP5 CHAINID PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0x198A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x787 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x84C SWAP1 PUSH2 0x19E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x878 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8C5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x89A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8C5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8A8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x8D5 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 NUMBER PUSH2 0x927 SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST DUP2 MSTORE POP SWAP2 POP DUP2 PUSH2 0x936 DUP4 PUSH2 0xB16 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x94E SWAP1 PUSH2 0x19E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x97A SWAP1 PUSH2 0x19E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x99C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9E1 DUP6 PUSH2 0xB6A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA33 DUP3 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xB94 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA48 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAC SWAP1 PUSH2 0x1AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD NUMBER PUSH2 0xAC3 SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST DUP7 PUSH1 0x40 ADD CALLDATALOAD LT ISZERO PUSH2 0xB09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB00 SWAP1 PUSH2 0x1B32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xB27 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0xBBB JUMP JUMPDEST PUSH2 0xB34 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0xBBB JUMP JUMPDEST PUSH2 0xB41 DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB54 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB8D PUSH2 0xB88 DUP4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB83 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST PUSH2 0xCB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xBA3 DUP6 DUP6 PUSH2 0xCF1 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xBB0 DUP2 PUSH2 0xD42 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBE1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xEA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0xBF7 DUP5 PUSH2 0x10E4 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC16 JUMPI PUSH2 0xC15 PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC48 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xCAB JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0xC9F JUMPI PUSH2 0xC9E PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0xC56 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC2 DUP3 MLOAD PUSH2 0xBE8 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCD4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x41 DUP4 MLOAD SUB PUSH2 0xD32 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0xD26 DUP8 DUP3 DUP6 DUP6 PUSH2 0x1237 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD56 JUMPI PUSH2 0xD55 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD69 JUMPI PUSH2 0xD68 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0xEA5 JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD83 JUMPI PUSH2 0xD82 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD96 JUMPI PUSH2 0xD95 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST SUB PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCD SWAP1 PUSH2 0x1FD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDEA JUMPI PUSH2 0xDE9 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDFD JUMPI PUSH2 0xDFC PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST SUB PUSH2 0xE3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE34 SWAP1 PUSH2 0x2044 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE51 JUMPI PUSH2 0xE50 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE64 JUMPI PUSH2 0xE63 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST SUB PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9B SWAP1 PUSH2 0x20D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xEBB SWAP2 SWAP1 PUSH2 0x20F6 JUMP JUMPDEST PUSH2 0xEC5 SWAP2 SWAP1 PUSH2 0x2138 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEDE JUMPI PUSH2 0xEDD PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF10 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF48 JUMPI PUSH2 0xF47 PUSH2 0x1769 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xFAC JUMPI PUSH2 0xFAB PUSH2 0x1769 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xFEC SWAP2 SWAP1 PUSH2 0x20F6 JUMP JUMPDEST PUSH2 0xFF6 SWAP2 SWAP1 PUSH2 0x2138 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1096 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1038 JUMPI PUSH2 0x1037 PUSH2 0x1769 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x104F JUMPI PUSH2 0x104E PUSH2 0x1769 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x108F SWAP1 PUSH2 0x216C JUMP JUMPDEST SWAP1 POP PUSH2 0xFF9 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x10DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D1 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1142 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1138 JUMPI PUSH2 0x1137 PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x117F JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1175 JUMPI PUSH2 0x1174 PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x11AE JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x11A4 JUMPI PUSH2 0x11A3 PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x11D7 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x11CD JUMPI PUSH2 0x11CC PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x11FC JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x11F2 JUMPI PUSH2 0x11F1 PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x121F JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1215 JUMPI PUSH2 0x1214 PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x122E JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1272 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x1310 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1297 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1307 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1310 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A5 DUP3 PUSH2 0x137A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B5 DUP2 PUSH2 0x139A JUMP JUMPDEST DUP2 EQ PUSH2 0x13C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13D2 DUP2 PUSH2 0x13AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13EE JUMPI PUSH2 0x13ED PUSH2 0x1370 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13FC DUP5 DUP3 DUP6 ADD PUSH2 0x13C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x140E DUP2 PUSH2 0x139A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1429 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x144A JUMPI PUSH2 0x1449 PUSH2 0x142F JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1478 JUMPI PUSH2 0x1477 PUSH2 0x1453 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1495 JUMPI PUSH2 0x1494 PUSH2 0x1458 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x14B1 JUMPI PUSH2 0x14B0 PUSH2 0x145D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14D1 JUMPI PUSH2 0x14D0 PUSH2 0x1370 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14DF DUP7 DUP3 DUP8 ADD PUSH2 0x1434 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1500 JUMPI PUSH2 0x14FF PUSH2 0x1375 JUMP JUMPDEST JUMPDEST PUSH2 0x150C DUP7 DUP3 DUP8 ADD PUSH2 0x1462 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1552 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1537 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157A DUP3 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x1584 DUP2 DUP6 PUSH2 0x1523 JUMP JUMPDEST SWAP4 POP PUSH2 0x1594 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x159D DUP2 PUSH2 0x155E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15C2 DUP2 DUP5 PUSH2 0x156F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15E1 JUMPI PUSH2 0x15E0 PUSH2 0x1370 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15EF DUP6 DUP3 DUP7 ADD PUSH2 0x13C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1600 DUP6 DUP3 DUP7 ADD PUSH2 0x13C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1613 DUP2 PUSH2 0x139A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x162C DUP2 PUSH2 0x1619 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1648 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x160A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x165B PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x160A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x166E PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1623 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1689 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1632 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x169B DUP2 DUP5 PUSH2 0x156F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x16AD DUP2 PUSH2 0x1619 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666520616C72656164792065786973747320666F72206F776E6572000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1704 PUSH1 0x1D DUP4 PUSH2 0x1523 JUMP JUMPDEST SWAP2 POP PUSH2 0x170F DUP3 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1733 DUP2 PUSH2 0x16F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D0 DUP4 DUP4 PUSH2 0x160A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F4 DUP3 PUSH2 0x1798 JUMP JUMPDEST PUSH2 0x17FE DUP2 DUP6 PUSH2 0x17A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1809 DUP4 PUSH2 0x17B4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x183A JUMPI DUP2 MLOAD PUSH2 0x1821 DUP9 DUP3 PUSH2 0x17C4 JUMP JUMPDEST SWAP8 POP PUSH2 0x182C DUP4 PUSH2 0x17DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x180D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x186E DUP3 PUSH2 0x1847 JUMP JUMPDEST PUSH2 0x1878 DUP2 DUP6 PUSH2 0x1852 JUMP JUMPDEST SWAP4 POP PUSH2 0x1888 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x1891 DUP2 PUSH2 0x155E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18B7 DUP2 DUP13 PUSH2 0x17E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x18C6 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x16A4 JUMP JUMPDEST PUSH2 0x18D3 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x1405 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x18E5 DUP2 DUP10 PUSH2 0x1863 JUMP JUMPDEST SWAP1 POP PUSH2 0x18F4 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x190E PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x191B PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x16A4 JUMP JUMPDEST PUSH2 0x1929 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x1405 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x194C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1405 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x195E DUP2 DUP6 PUSH2 0x1863 JUMP JUMPDEST SWAP1 POP PUSH2 0x196D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16A4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1984 DUP2 PUSH2 0x13AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A0 JUMPI PUSH2 0x199F PUSH2 0x1370 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19AE DUP5 DUP3 DUP6 ADD PUSH2 0x1975 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19FE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A11 JUMPI PUSH2 0x1A10 PUSH2 0x19B7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A51 DUP3 PUSH2 0x1619 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A5C DUP4 PUSH2 0x1619 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A74 JUMPI PUSH2 0x1A73 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB0 PUSH1 0x11 DUP4 PUSH2 0x1523 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABB DUP3 PUSH2 0x1A7A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ADF DUP2 PUSH2 0x1AA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265717565737420697320746F6F206F6C640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1C PUSH1 0x12 DUP4 PUSH2 0x1523 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B27 DUP3 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B4B DUP2 PUSH2 0x1B0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x1B7F DUP2 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x1B89 DUP2 DUP7 PUSH2 0x1B52 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x1BA4 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1BB9 JUMPI PUSH2 0x1BEC JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x1BEC JUMP JUMPDEST PUSH2 0x1BC2 DUP6 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BE4 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BC5 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA0A4D653A200000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2B PUSH1 0x6 DUP4 PUSH2 0x1B52 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C36 DUP3 PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4C DUP3 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x1C56 DUP2 DUP6 PUSH2 0x1B52 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C66 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1534 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA4465766963653A200000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA8 PUSH1 0x9 DUP4 PUSH2 0x1B52 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB3 DUP3 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA4973737565642061743A200000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF4 PUSH1 0xC DUP4 PUSH2 0x1B52 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CFF DUP3 PUSH2 0x1CBE JUMP JUMPDEST PUSH1 0xC DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D16 DUP3 DUP8 PUSH2 0x1B72 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D21 DUP3 PUSH2 0x1C1E JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2D DUP3 DUP7 PUSH2 0x1C41 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D38 DUP3 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D44 DUP3 DUP6 PUSH2 0x1C41 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D4F DUP3 PUSH2 0x1CE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D5B DUP3 DUP5 PUSH2 0x1C41 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D77 DUP3 PUSH2 0x155E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D96 JUMPI PUSH2 0x1D95 PUSH2 0x173A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA9 PUSH2 0x1366 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DB5 DUP3 DUP3 PUSH2 0x1D6E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC3 DUP2 PUSH2 0x1619 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DE0 DUP2 PUSH2 0x1DBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DFC JUMPI PUSH2 0x1DFB PUSH2 0x1D69 JUMP JUMPDEST JUMPDEST PUSH2 0x1E06 PUSH1 0x60 PUSH2 0x1D9F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E16 DUP5 DUP3 DUP6 ADD PUSH2 0x13C3 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1E2A DUP5 DUP3 DUP6 ADD PUSH2 0x13C3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1E3E DUP5 DUP3 DUP6 ADD PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E60 JUMPI PUSH2 0x1E5F PUSH2 0x1370 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E6E DUP5 DUP3 DUP6 ADD PUSH2 0x1DE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EDC PUSH1 0x1A DUP4 PUSH2 0x1B52 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE7 DUP3 PUSH2 0x1EA6 JUMP JUMPDEST PUSH1 0x1A DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F08 DUP3 PUSH2 0x1847 JUMP JUMPDEST PUSH2 0x1F12 DUP2 DUP6 PUSH2 0x1EF2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F22 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1534 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F39 DUP3 PUSH2 0x1ECF JUMP JUMPDEST SWAP2 POP PUSH2 0x1F45 DUP3 DUP6 PUSH2 0x1C41 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F51 DUP3 DUP5 PUSH2 0x1EFD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC2 PUSH1 0x18 DUP4 PUSH2 0x1523 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FCD DUP3 PUSH2 0x1F8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FF1 DUP2 PUSH2 0x1FB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202E PUSH1 0x1F DUP4 PUSH2 0x1523 JUMP JUMPDEST SWAP2 POP PUSH2 0x2039 DUP3 PUSH2 0x1FF8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x205D DUP2 PUSH2 0x2021 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20C0 PUSH1 0x22 DUP4 PUSH2 0x1523 JUMP JUMPDEST SWAP2 POP PUSH2 0x20CB DUP3 PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20EF DUP2 PUSH2 0x20B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2101 DUP3 PUSH2 0x1619 JUMP JUMPDEST SWAP2 POP PUSH2 0x210C DUP4 PUSH2 0x1619 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x211A DUP2 PUSH2 0x1619 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2131 JUMPI PUSH2 0x2130 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2143 DUP3 PUSH2 0x1619 JUMP JUMPDEST SWAP2 POP PUSH2 0x214E DUP4 PUSH2 0x1619 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2166 JUMPI PUSH2 0x2165 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2177 DUP3 PUSH2 0x1619 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x218A JUMPI PUSH2 0x2189 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CB PUSH1 0x20 DUP4 PUSH2 0x1523 JUMP JUMPDEST SWAP2 POP PUSH2 0x21D6 DUP3 PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21FA DUP2 PUSH2 0x21BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2214 DUP2 PUSH2 0x2201 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2230 DUP2 PUSH2 0x221A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x224B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x2258 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2227 JUMP JUMPDEST PUSH2 0x2265 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x2272 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x220B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 STATICCALL 0x29 PUSH24 0x42161D59069DBE814745D870CFD5434814EBFB411454E35E PUSH32 0xBA9A9064736F6C63430008130033000000000000000000000000000000000000 ","sourceMap":"623:3084:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1077:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1999:1706;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1025:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;675:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1287:340:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;346:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;376:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1077:46:7;;;;;;;;;;;;;;;;;;;;;;:::o;1999:1706::-;2174:1;2136:40;;:11;:26;2148:7;:13;;;;;;;;;;:::i;:::-;2136:26;;;;;;;;;;;;;;;;;;;;;;;;;:40;;;2115:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;2249:32;2262:7;2271:9;;2249:12;:32::i;:::-;2241:41;;;;;;2427:23;2490:1;2464:28;;:7;:14;;;;;;;;;;:::i;:::-;:28;;;2460:258;;2531:1;2517:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2508:25;;2559:7;:13;;;;;;;;;;:::i;:::-;2547:6;2554:1;2547:9;;;;;;;;:::i;:::-;;;;;;;:25;;;;;;;;;;;2460:258;;;2626:1;2612:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2603:25;;2654:7;:13;;;;;;;;;;:::i;:::-;2642:6;2649:1;2642:9;;;;;;;;:::i;:::-;;;;;;;:25;;;;;;;;;;;2693:7;:14;;;;;;;;;;:::i;:::-;2681:6;2688:1;2681:9;;;;;;;;:::i;:::-;;;;;;;:26;;;;;;;;;;;2460:258;2728:24;2878:6;2950:1;3028:13;3079:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3148:22;3228:1;3285;3342;3397;2755:694;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2728:721;;3460:17;3494:23;3480:72;;;3553:19;3574:11;3587:13;3480:121;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3460:141;;3641:9;3612:11;:26;3624:7;:13;;;;;;;;;;:::i;:::-;3612:26;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;3685:7;:13;;;;;;;;;;:::i;:::-;3660:11;:22;3672:9;3660:22;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2105:1600;;;1999:1706;;;:::o;1025:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;675:22::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1287:340:6:-;1389:27;;:::i;:::-;1418:13;1453:118;;;;;;;;1487:5;1453:118;;;;;;1514:6;1453:118;;;;;;1559:1;1544:12;:16;;;;:::i;:::-;1453:118;;;1443:128;;1589:7;1598:21;1611:7;1598:12;:21::i;:::-;1581:39;;;;1287:340;;;;;:::o;346:23::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;376:33::-;;;;:::o;828:453::-;952:4;968:15;986:21;999:7;986:12;:21::i;:::-;968:39;;1017:14;1034:33;1048:7;1057:9;;1034:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:33::i;:::-;1017:50;;1095:7;:13;;;;;;;;;;:::i;:::-;1085:23;;:6;:23;;;1077:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1196:13;;1181:12;:28;;;;:::i;:::-;1161:7;:16;;;:48;;1140:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;1270:4;1263:11;;;;828:453;;;;;:::o;1852:408::-;1940:13;2009:9;2056:34;2076:7;:13;;;2056:19;:34::i;:::-;2130:35;2150:7;:14;;;2130:19;:35::i;:::-;2208:34;2225:7;:16;;;2208;:34::i;:::-;1979:273;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1965:288;;1852:408;;;:::o;2266:181::-;2356:7;2382:58;2417:21;2430:7;2417:21;;;;;;;;;;:::i;:::-;:12;:21::i;:::-;2382:28;:58::i;:::-;2375:65;;2266:181;;;:::o;3661:227:1:-;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;3872:9;3865:16;;;;3661:227;;;;:::o;2102:149:0:-;2160:13;2192:52;2220:4;2204:22;;311:2;2192:52;;:11;:52::i;:::-;2185:59;;2102:149;;;:::o;415:696::-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;788:280;1032:21;788:280;1088:6;1081:13;;;;;415:696;;;:::o;7806:196:1:-;7877:7;7964:26;7981:1;:8;7964:16;:26::i;:::-;7992:1;7913:81;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7903:92;;;;;;7896:99;;7806:196;;;:::o;2145:730::-;2226:7;2235:12;2283:2;2263:9;:16;:22;2259:610;;2301:9;2324;2347:7;2599:4;2588:9;2584:20;2578:27;2573:32;;2648:4;2637:9;2633:20;2627:27;2622:32;;2705:4;2694:9;2690:20;2684:27;2681:1;2676:36;2671:41;;2746:25;2757:4;2763:1;2766;2769;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;2818:1;2822:35;2802:56;;;;2145:730;;;;;;:::o;570:511::-;647:20;638:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;634:441;683:7;634:441;743:29;734:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;730:345;;788:34;;;;;;;;;;:::i;:::-;;;;;;;;730:345;852:35;843:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;839:236;;903:41;;;;;;;;;;:::i;:::-;;;;;;;;839:236;974:30;965:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;961:114;;1020:44;;;;;;;;;;:::i;:::-;;;;;;;;961:114;570:511;;:::o;1513:437:0:-;1588:13;1613:19;1658:1;1649:6;1645:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:47;;1670:15;:6;1677:1;1670:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1695;:6;1702:1;1695:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1725:9;1750:1;1741:6;1737:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;1791:8;1808:3;1800:5;:11;1791:21;;;;;;;:::i;:::-;;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;1836:1;1826:11;;;;;1760:3;;;;:::i;:::-;;;1720:128;;;;1874:1;1865:5;:10;1857:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1936:6;1922:21;;;1513:437;;;;:::o;9889:890:2:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;5069:1494:1:-;5195:7;5204:12;6119:66;6114:1;6106:10;;:79;6102:161;;;6217:1;6221:30;6201:51;;;;;;6102:161;6357:14;6374:24;6384:4;6390:1;6393;6396;6374:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6357:41;;6430:1;6412:20;;:6;:20;;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;6535:20;6519:37;;;;;5069:1494;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:117::-;1637:1;1634;1627:12;1697:236;1775:5;1816:2;1807:6;1802:3;1798:16;1794:25;1791:112;;;1822:79;;:::i;:::-;1791:112;1921:6;1912:15;;1697:236;;;;:::o;1939:117::-;2048:1;2045;2038:12;2062:117;2171:1;2168;2161:12;2185:117;2294:1;2291;2284:12;2321:552;2378:8;2388:6;2438:3;2431:4;2423:6;2419:17;2415:27;2405:122;;2446:79;;:::i;:::-;2405:122;2559:6;2546:20;2536:30;;2589:18;2581:6;2578:30;2575:117;;;2611:79;;:::i;:::-;2575:117;2725:4;2717:6;2713:17;2701:29;;2779:3;2771:4;2763:6;2759:17;2749:8;2745:32;2742:41;2739:128;;;2786:79;;:::i;:::-;2739:128;2321:552;;;;;:::o;2879:737::-;2990:6;2998;3006;3055:3;3043:9;3034:7;3030:23;3026:33;3023:120;;;3062:79;;:::i;:::-;3023:120;3182:1;3207:85;3284:7;3275:6;3264:9;3260:22;3207:85;:::i;:::-;3197:95;;3153:149;3369:2;3358:9;3354:18;3341:32;3400:18;3392:6;3389:30;3386:117;;;3422:79;;:::i;:::-;3386:117;3535:64;3591:7;3582:6;3571:9;3567:22;3535:64;:::i;:::-;3517:82;;;;3312:297;2879:737;;;;;:::o;3622:99::-;3674:6;3708:5;3702:12;3692:22;;3622:99;;;:::o;3727:169::-;3811:11;3845:6;3840:3;3833:19;3885:4;3880:3;3876:14;3861:29;;3727:169;;;;:::o;3902:246::-;3983:1;3993:113;4007:6;4004:1;4001:13;3993:113;;;4092:1;4087:3;4083:11;4077:18;4073:1;4068:3;4064:11;4057:39;4029:2;4026:1;4022:10;4017:15;;3993:113;;;4140:1;4131:6;4126:3;4122:16;4115:27;3964:184;3902:246;;;:::o;4154:102::-;4195:6;4246:2;4242:7;4237:2;4230:5;4226:14;4222:28;4212:38;;4154:102;;;:::o;4262:377::-;4350:3;4378:39;4411:5;4378:39;:::i;:::-;4433:71;4497:6;4492:3;4433:71;:::i;:::-;4426:78;;4513:65;4571:6;4566:3;4559:4;4552:5;4548:16;4513:65;:::i;:::-;4603:29;4625:6;4603:29;:::i;:::-;4598:3;4594:39;4587:46;;4354:285;4262:377;;;;:::o;4645:313::-;4758:4;4796:2;4785:9;4781:18;4773:26;;4845:9;4839:4;4835:20;4831:1;4820:9;4816:17;4809:47;4873:78;4946:4;4937:6;4873:78;:::i;:::-;4865:86;;4645:313;;;;:::o;4964:474::-;5032:6;5040;5089:2;5077:9;5068:7;5064:23;5060:32;5057:119;;;5095:79;;:::i;:::-;5057:119;5215:1;5240:53;5285:7;5276:6;5265:9;5261:22;5240:53;:::i;:::-;5230:63;;5186:117;5342:2;5368:53;5413:7;5404:6;5393:9;5389:22;5368:53;:::i;:::-;5358:63;;5313:118;4964:474;;;;;:::o;5444:108::-;5521:24;5539:5;5521:24;:::i;:::-;5516:3;5509:37;5444:108;;:::o;5558:77::-;5595:7;5624:5;5613:16;;5558:77;;;:::o;5641:108::-;5718:24;5736:5;5718:24;:::i;:::-;5713:3;5706:37;5641:108;;:::o;5843:698::-;6000:4;5995:3;5991:14;6088:4;6081:5;6077:16;6071:23;6107:63;6164:4;6159:3;6155:14;6141:12;6107:63;:::i;:::-;6015:165;6264:4;6257:5;6253:16;6247:23;6283:63;6340:4;6335:3;6331:14;6317:12;6283:63;:::i;:::-;6190:166;6442:4;6435:5;6431:16;6425:23;6461:63;6518:4;6513:3;6509:14;6495:12;6461:63;:::i;:::-;6366:168;5969:572;5843:698;;:::o;6547:544::-;6748:4;6786:3;6775:9;6771:19;6763:27;;6800:131;6928:1;6917:9;6913:17;6904:6;6800:131;:::i;:::-;6978:9;6972:4;6968:20;6963:2;6952:9;6948:18;6941:48;7006:78;7079:4;7070:6;7006:78;:::i;:::-;6998:86;;6547:544;;;;;:::o;7097:118::-;7184:24;7202:5;7184:24;:::i;:::-;7179:3;7172:37;7097:118;;:::o;7221:222::-;7314:4;7352:2;7341:9;7337:18;7329:26;;7365:71;7433:1;7422:9;7418:17;7409:6;7365:71;:::i;:::-;7221:222;;;;:::o;7449:179::-;7589:31;7585:1;7577:6;7573:14;7566:55;7449:179;:::o;7634:366::-;7776:3;7797:67;7861:2;7856:3;7797:67;:::i;:::-;7790:74;;7873:93;7962:3;7873:93;:::i;:::-;7991:2;7986:3;7982:12;7975:19;;7634:366;;;:::o;8006:419::-;8172:4;8210:2;8199:9;8195:18;8187:26;;8259:9;8253:4;8249:20;8245:1;8234:9;8230:17;8223:47;8287:131;8413:4;8287:131;:::i;:::-;8279:139;;8006:419;;;:::o;8431:180::-;8479:77;8476:1;8469:88;8576:4;8573:1;8566:15;8600:4;8597:1;8590:15;8617:180;8665:77;8662:1;8655:88;8762:4;8759:1;8752:15;8786:4;8783:1;8776:15;8803:114;8870:6;8904:5;8898:12;8888:22;;8803:114;;;:::o;8923:184::-;9022:11;9056:6;9051:3;9044:19;9096:4;9091:3;9087:14;9072:29;;8923:184;;;;:::o;9113:132::-;9180:4;9203:3;9195:11;;9233:4;9228:3;9224:14;9216:22;;9113:132;;;:::o;9251:179::-;9320:10;9341:46;9383:3;9375:6;9341:46;:::i;:::-;9419:4;9414:3;9410:14;9396:28;;9251:179;;;;:::o;9436:113::-;9506:4;9538;9533:3;9529:14;9521:22;;9436:113;;;:::o;9585:732::-;9704:3;9733:54;9781:5;9733:54;:::i;:::-;9803:86;9882:6;9877:3;9803:86;:::i;:::-;9796:93;;9913:56;9963:5;9913:56;:::i;:::-;9992:7;10023:1;10008:284;10033:6;10030:1;10027:13;10008:284;;;10109:6;10103:13;10136:63;10195:3;10180:13;10136:63;:::i;:::-;10129:70;;10222:60;10275:6;10222:60;:::i;:::-;10212:70;;10068:224;10055:1;10052;10048:9;10043:14;;10008:284;;;10012:14;10308:3;10301:10;;9709:608;;;9585:732;;;;:::o;10323:98::-;10374:6;10408:5;10402:12;10392:22;;10323:98;;;:::o;10427:168::-;10510:11;10544:6;10539:3;10532:19;10584:4;10579:3;10575:14;10560:29;;10427:168;;;;:::o;10601:373::-;10687:3;10715:38;10747:5;10715:38;:::i;:::-;10769:70;10832:6;10827:3;10769:70;:::i;:::-;10762:77;;10848:65;10906:6;10901:3;10894:4;10887:5;10883:16;10848:65;:::i;:::-;10938:29;10960:6;10938:29;:::i;:::-;10933:3;10929:39;10922:46;;10691:283;10601:373;;;;:::o;10980:1346::-;11365:4;11403:3;11392:9;11388:19;11380:27;;11453:9;11447:4;11443:20;11439:1;11428:9;11424:17;11417:47;11481:108;11584:4;11575:6;11481:108;:::i;:::-;11473:116;;11599:72;11667:2;11656:9;11652:18;11643:6;11599:72;:::i;:::-;11681;11749:2;11738:9;11734:18;11725:6;11681:72;:::i;:::-;11800:9;11794:4;11790:20;11785:2;11774:9;11770:18;11763:48;11828:76;11899:4;11890:6;11828:76;:::i;:::-;11820:84;;11914:73;11982:3;11971:9;11967:19;11958:6;11914:73;:::i;:::-;11997;12065:3;12054:9;12050:19;12041:6;11997:73;:::i;:::-;12080;12148:3;12137:9;12133:19;12124:6;12080:73;:::i;:::-;12163;12231:3;12220:9;12216:19;12207:6;12163:73;:::i;:::-;12246;12314:3;12303:9;12299:19;12290:6;12246:73;:::i;:::-;10980:1346;;;;;;;;;;;;:::o;12332:529::-;12499:4;12537:2;12526:9;12522:18;12514:26;;12550:71;12618:1;12607:9;12603:17;12594:6;12550:71;:::i;:::-;12668:9;12662:4;12658:20;12653:2;12642:9;12638:18;12631:48;12696:76;12767:4;12758:6;12696:76;:::i;:::-;12688:84;;12782:72;12850:2;12839:9;12835:18;12826:6;12782:72;:::i;:::-;12332:529;;;;;;:::o;12867:143::-;12924:5;12955:6;12949:13;12940:22;;12971:33;12998:5;12971:33;:::i;:::-;12867:143;;;;:::o;13016:351::-;13086:6;13135:2;13123:9;13114:7;13110:23;13106:32;13103:119;;;13141:79;;:::i;:::-;13103:119;13261:1;13286:64;13342:7;13333:6;13322:9;13318:22;13286:64;:::i;:::-;13276:74;;13232:128;13016:351;;;;:::o;13373:180::-;13421:77;13418:1;13411:88;13518:4;13515:1;13508:15;13542:4;13539:1;13532:15;13559:320;13603:6;13640:1;13634:4;13630:12;13620:22;;13687:1;13681:4;13677:12;13708:18;13698:81;;13764:4;13756:6;13752:17;13742:27;;13698:81;13826:2;13818:6;13815:14;13795:18;13792:38;13789:84;;13845:18;;:::i;:::-;13789:84;13610:269;13559:320;;;:::o;13885:180::-;13933:77;13930:1;13923:88;14030:4;14027:1;14020:15;14054:4;14051:1;14044:15;14071:194;14111:4;14131:20;14149:1;14131:20;:::i;:::-;14126:25;;14165:20;14183:1;14165:20;:::i;:::-;14160:25;;14209:1;14206;14202:9;14194:17;;14233:1;14227:4;14224:11;14221:37;;;14238:18;;:::i;:::-;14221:37;14071:194;;;;:::o;14271:167::-;14411:19;14407:1;14399:6;14395:14;14388:43;14271:167;:::o;14444:366::-;14586:3;14607:67;14671:2;14666:3;14607:67;:::i;:::-;14600:74;;14683:93;14772:3;14683:93;:::i;:::-;14801:2;14796:3;14792:12;14785:19;;14444:366;;;:::o;14816:419::-;14982:4;15020:2;15009:9;15005:18;14997:26;;15069:9;15063:4;15059:20;15055:1;15044:9;15040:17;15033:47;15097:131;15223:4;15097:131;:::i;:::-;15089:139;;14816:419;;;:::o;15241:168::-;15381:20;15377:1;15369:6;15365:14;15358:44;15241:168;:::o;15415:366::-;15557:3;15578:67;15642:2;15637:3;15578:67;:::i;:::-;15571:74;;15654:93;15743:3;15654:93;:::i;:::-;15772:2;15767:3;15763:12;15756:19;;15415:366;;;:::o;15787:419::-;15953:4;15991:2;15980:9;15976:18;15968:26;;16040:9;16034:4;16030:20;16026:1;16015:9;16011:17;16004:47;16068:131;16194:4;16068:131;:::i;:::-;16060:139;;15787:419;;;:::o;16212:148::-;16314:11;16351:3;16336:18;;16212:148;;;;:::o;16366:141::-;16415:4;16438:3;16430:11;;16461:3;16458:1;16451:14;16495:4;16492:1;16482:18;16474:26;;16366:141;;;:::o;16537:874::-;16640:3;16677:5;16671:12;16706:36;16732:9;16706:36;:::i;:::-;16758:89;16840:6;16835:3;16758:89;:::i;:::-;16751:96;;16878:1;16867:9;16863:17;16894:1;16889:166;;;;17069:1;17064:341;;;;16856:549;;16889:166;16973:4;16969:9;16958;16954:25;16949:3;16942:38;17035:6;17028:14;17021:22;17013:6;17009:35;17004:3;17000:45;16993:52;;16889:166;;17064:341;17131:38;17163:5;17131:38;:::i;:::-;17191:1;17205:154;17219:6;17216:1;17213:13;17205:154;;;17293:7;17287:14;17283:1;17278:3;17274:11;17267:35;17343:1;17334:7;17330:15;17319:26;;17241:4;17238:1;17234:12;17229:17;;17205:154;;;17388:6;17383:3;17379:16;17372:23;;17071:334;;16856:549;;16644:767;;16537:874;;;;:::o;17417:214::-;17557:66;17553:1;17545:6;17541:14;17534:90;17417:214;:::o;17637:400::-;17797:3;17818:84;17900:1;17895:3;17818:84;:::i;:::-;17811:91;;17911:93;18000:3;17911:93;:::i;:::-;18029:1;18024:3;18020:11;18013:18;;17637:400;;;:::o;18043:390::-;18149:3;18177:39;18210:5;18177:39;:::i;:::-;18232:89;18314:6;18309:3;18232:89;:::i;:::-;18225:96;;18330:65;18388:6;18383:3;18376:4;18369:5;18365:16;18330:65;:::i;:::-;18420:6;18415:3;18411:16;18404:23;;18153:280;18043:390;;;;:::o;18439:214::-;18579:66;18575:1;18567:6;18563:14;18556:90;18439:214;:::o;18659:400::-;18819:3;18840:84;18922:1;18917:3;18840:84;:::i;:::-;18833:91;;18933:93;19022:3;18933:93;:::i;:::-;19051:1;19046:3;19042:11;19035:18;;18659:400;;;:::o;19065:214::-;19205:66;19201:1;19193:6;19189:14;19182:90;19065:214;:::o;19285:402::-;19445:3;19466:85;19548:2;19543:3;19466:85;:::i;:::-;19459:92;;19560:93;19649:3;19560:93;:::i;:::-;19678:2;19673:3;19669:12;19662:19;;19285:402;;;:::o;19693:1547::-;20269:3;20291:92;20379:3;20370:6;20291:92;:::i;:::-;20284:99;;20400:148;20544:3;20400:148;:::i;:::-;20393:155;;20565:95;20656:3;20647:6;20565:95;:::i;:::-;20558:102;;20677:148;20821:3;20677:148;:::i;:::-;20670:155;;20842:95;20933:3;20924:6;20842:95;:::i;:::-;20835:102;;20954:148;21098:3;20954:148;:::i;:::-;20947:155;;21119:95;21210:3;21201:6;21119:95;:::i;:::-;21112:102;;21231:3;21224:10;;19693:1547;;;;;;;:::o;21246:117::-;21355:1;21352;21345:12;21369:281;21452:27;21474:4;21452:27;:::i;:::-;21444:6;21440:40;21582:6;21570:10;21567:22;21546:18;21534:10;21531:34;21528:62;21525:88;;;21593:18;;:::i;:::-;21525:88;21633:10;21629:2;21622:22;21412:238;21369:281;;:::o;21656:129::-;21690:6;21717:20;;:::i;:::-;21707:30;;21746:33;21774:4;21766:6;21746:33;:::i;:::-;21656:129;;;:::o;21914:122::-;21987:24;22005:5;21987:24;:::i;:::-;21980:5;21977:35;21967:63;;22026:1;22023;22016:12;21967:63;21914:122;:::o;22042:139::-;22088:5;22126:6;22113:20;22104:29;;22142:33;22169:5;22142:33;:::i;:::-;22042:139;;;;:::o;22233:747::-;22312:5;22356:4;22344:9;22339:3;22335:19;22331:30;22328:117;;;22364:79;;:::i;:::-;22328:117;22463:21;22479:4;22463:21;:::i;:::-;22454:30;;22544:1;22584:49;22629:3;22620:6;22609:9;22605:22;22584:49;:::i;:::-;22577:4;22570:5;22566:16;22559:75;22494:151;22706:2;22747:49;22792:3;22783:6;22772:9;22768:22;22747:49;:::i;:::-;22740:4;22733:5;22729:16;22722:75;22655:153;22871:2;22912:49;22957:3;22948:6;22937:9;22933:22;22912:49;:::i;:::-;22905:4;22898:5;22894:16;22887:75;22818:155;22233:747;;;;:::o;22986:389::-;23075:6;23124:2;23112:9;23103:7;23099:23;23095:32;23092:119;;;23130:79;;:::i;:::-;23092:119;23250:1;23275:83;23350:7;23341:6;23330:9;23326:22;23275:83;:::i;:::-;23265:93;;23221:147;22986:389;;;;:::o;23381:180::-;23429:77;23426:1;23419:88;23526:4;23523:1;23516:15;23550:4;23547:1;23540:15;23567:214;23707:66;23703:1;23695:6;23691:14;23684:90;23567:214;:::o;23787:402::-;23947:3;23968:85;24050:2;24045:3;23968:85;:::i;:::-;23961:92;;24062:93;24151:3;24062:93;:::i;:::-;24180:2;24175:3;24171:12;24164:19;;23787:402;;;:::o;24195:147::-;24296:11;24333:3;24318:18;;24195:147;;;;:::o;24348:386::-;24452:3;24480:38;24512:5;24480:38;:::i;:::-;24534:88;24615:6;24610:3;24534:88;:::i;:::-;24527:95;;24631:65;24689:6;24684:3;24677:4;24670:5;24666:16;24631:65;:::i;:::-;24721:6;24716:3;24712:16;24705:23;;24456:278;24348:386;;;;:::o;24740:697::-;25019:3;25041:148;25185:3;25041:148;:::i;:::-;25034:155;;25206:95;25297:3;25288:6;25206:95;:::i;:::-;25199:102;;25318:93;25407:3;25398:6;25318:93;:::i;:::-;25311:100;;25428:3;25421:10;;24740:697;;;;;:::o;25443:180::-;25491:77;25488:1;25481:88;25588:4;25585:1;25578:15;25612:4;25609:1;25602:15;25629:174;25769:26;25765:1;25757:6;25753:14;25746:50;25629:174;:::o;25809:366::-;25951:3;25972:67;26036:2;26031:3;25972:67;:::i;:::-;25965:74;;26048:93;26137:3;26048:93;:::i;:::-;26166:2;26161:3;26157:12;26150:19;;25809:366;;;:::o;26181:419::-;26347:4;26385:2;26374:9;26370:18;26362:26;;26434:9;26428:4;26424:20;26420:1;26409:9;26405:17;26398:47;26462:131;26588:4;26462:131;:::i;:::-;26454:139;;26181:419;;;:::o;26606:181::-;26746:33;26742:1;26734:6;26730:14;26723:57;26606:181;:::o;26793:366::-;26935:3;26956:67;27020:2;27015:3;26956:67;:::i;:::-;26949:74;;27032:93;27121:3;27032:93;:::i;:::-;27150:2;27145:3;27141:12;27134:19;;26793:366;;;:::o;27165:419::-;27331:4;27369:2;27358:9;27354:18;27346:26;;27418:9;27412:4;27408:20;27404:1;27393:9;27389:17;27382:47;27446:131;27572:4;27446:131;:::i;:::-;27438:139;;27165:419;;;:::o;27590:221::-;27730:34;27726:1;27718:6;27714:14;27707:58;27799:4;27794:2;27786:6;27782:15;27775:29;27590:221;:::o;27817:366::-;27959:3;27980:67;28044:2;28039:3;27980:67;:::i;:::-;27973:74;;28056:93;28145:3;28056:93;:::i;:::-;28174:2;28169:3;28165:12;28158:19;;27817:366;;;:::o;28189:419::-;28355:4;28393:2;28382:9;28378:18;28370:26;;28442:9;28436:4;28432:20;28428:1;28417:9;28413:17;28406:47;28470:131;28596:4;28470:131;:::i;:::-;28462:139;;28189:419;;;:::o;28614:410::-;28654:7;28677:20;28695:1;28677:20;:::i;:::-;28672:25;;28711:20;28729:1;28711:20;:::i;:::-;28706:25;;28766:1;28763;28759:9;28788:30;28806:11;28788:30;:::i;:::-;28777:41;;28967:1;28958:7;28954:15;28951:1;28948:22;28928:1;28921:9;28901:83;28878:139;;28997:18;;:::i;:::-;28878:139;28662:362;28614:410;;;;:::o;29030:191::-;29070:3;29089:20;29107:1;29089:20;:::i;:::-;29084:25;;29123:20;29141:1;29123:20;:::i;:::-;29118:25;;29166:1;29163;29159:9;29152:16;;29187:3;29184:1;29181:10;29178:36;;;29194:18;;:::i;:::-;29178:36;29030:191;;;;:::o;29227:171::-;29266:3;29289:24;29307:5;29289:24;:::i;:::-;29280:33;;29335:4;29328:5;29325:15;29322:41;;29343:18;;:::i;:::-;29322:41;29390:1;29383:5;29379:13;29372:20;;29227:171;;;:::o;29404:182::-;29544:34;29540:1;29532:6;29528:14;29521:58;29404:182;:::o;29592:366::-;29734:3;29755:67;29819:2;29814:3;29755:67;:::i;:::-;29748:74;;29831:93;29920:3;29831:93;:::i;:::-;29949:2;29944:3;29940:12;29933:19;;29592:366;;;:::o;29964:419::-;30130:4;30168:2;30157:9;30153:18;30145:26;;30217:9;30211:4;30207:20;30203:1;30192:9;30188:17;30181:47;30245:131;30371:4;30245:131;:::i;:::-;30237:139;;29964:419;;;:::o;30389:77::-;30426:7;30455:5;30444:16;;30389:77;;;:::o;30472:118::-;30559:24;30577:5;30559:24;:::i;:::-;30554:3;30547:37;30472:118;;:::o;30596:86::-;30631:7;30671:4;30664:5;30660:16;30649:27;;30596:86;;;:::o;30688:112::-;30771:22;30787:5;30771:22;:::i;:::-;30766:3;30759:35;30688:112;;:::o;30806:545::-;30979:4;31017:3;31006:9;31002:19;30994:27;;31031:71;31099:1;31088:9;31084:17;31075:6;31031:71;:::i;:::-;31112:68;31176:2;31165:9;31161:18;31152:6;31112:68;:::i;:::-;31190:72;31258:2;31247:9;31243:18;31234:6;31190:72;:::i;:::-;31272;31340:2;31329:9;31325:18;31316:6;31272:72;:::i;:::-;30806:545;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1776200","executionCost":"infinite","totalCost":"infinite"},"external":{"CHAIN_ID()":"infinite","STATEMENT()":"infinite","createSafe((address,address,uint256),bytes)":"infinite","createTokenRequest(address,address)":"infinite","lengthOfToken()":"2495","ownerToSafe(address)":"infinite","safeToOwner(address)":"infinite"}},"methodIdentifiers":{"CHAIN_ID()":"85e1f4d0","STATEMENT()":"bebc479c","createSafe((address,address,uint256),bytes)":"24f669b4","createTokenRequest(address,address)":"b6ad16a8","lengthOfToken()":"cb2e6043","ownerToSafe(address)":"5e619a4a","safeToOwner(address)":"06634e88"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gnosisSafeContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gnosisSafeProxyFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"defaultFallbackHandler\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setupHandler\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CHAIN_ID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STATEMENT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"device\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"issuedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenAuthenticated.TokenRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"createSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"device\",\"type\":\"address\"}],\"name\":\"createTokenRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"device\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"issuedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenAuthenticated.TokenRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lengthOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerToSafe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"safeToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A contract that allows a user to create a Gnosis Safe wallet by signing an English message.      It sets up a a safe by calling the SafeStetup.sol contract which adds the correct modules and the TokenRequest      device and owner as owners to the safe. \",\"kind\":\"dev\",\"methods\":{\"createSafe((address,address,uint256),bytes)\":{\"details\":\"Creates a Gnosis Safe wallet using the provided WalletCreateRequest and signature.\",\"params\":{\"request\":\"The WalletCreateRequest struct containing the owner address, first device address, and issuedAt block number.\",\"signature\":\"The signature signed by the owner to verify ownership.\"}}},\"title\":\"WalletDeployer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WalletDeployer.sol\":\"WalletDeployer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Strings.sol\\\";\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS,\\n        InvalidSignatureV // Deprecated in v4.8\\n    }\\n\\n    function _throwError(RecoverError error) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert(\\\"ECDSA: invalid signature\\\");\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature` or error string. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address, RecoverError) {\\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\\n        return tryRecover(hash, v, r, s);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     *\\n     * _Available since v4.2._\\n     */\\n    function recover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address, RecoverError) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature);\\n        }\\n\\n        return (signer, RecoverError.NoError);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\", Strings.toString(s.length), s));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Typed Data, created from a\\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\\n     * to the one signed with the\\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\\n     * JSON-RPC method as part of EIP-712.\\n     *\\n     * See {recover}.\\n     */\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n    }\\n}\\n\",\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/TokenAuthenticated.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\n// import \\\"hardhat/console.sol\\\";\\n\\n/**\\n * @title TokenAuthenticated\\n * @dev allow a user to authenticate with a signed english token.\\n */\\ncontract TokenAuthenticated {\\n    string public STATEMENT;\\n\\n    uint256 public lengthOfToken = 15;\\n       \\n    struct TokenRequest {\\n        address owner;\\n        address device;\\n        uint256 issuedAt;\\n    }\\n\\n    constructor(string memory _statement) {\\n        STATEMENT = _statement;\\n    }\\n\\n    function _updateStatement(string memory newStatement) internal {\\n        STATEMENT = newStatement;\\n    }\\n\\n    function _updateLengthOfToken(uint256 newLength) internal {\\n        lengthOfToken = newLength;\\n    }\\n\\n    function authenticate(\\n        TokenRequest calldata request,\\n        bytes calldata signature\\n    ) internal view returns (bool) {\\n        bytes32 msgHash = hashForToken(request);\\n        address signer = ECDSA.recover(msgHash, signature);\\n        require(signer == request.owner, \\\"invalid signature\\\");\\n        require(\\n            request.issuedAt >= block.number - lengthOfToken,\\n            \\\"Request is too old\\\"\\n        );\\n        return true;\\n    }\\n\\n    function createTokenRequest(\\n        address owner,\\n        address device\\n    ) public view returns (TokenRequest memory request, string memory) {\\n        request = TokenRequest({\\n            owner: owner,\\n            device: device,\\n            issuedAt: block.number - 1\\n        });\\n        return (request, stringToSign(request));\\n    }\\n\\n\\n    /**\\n     * @dev Returns the string to sign of the provided WalletCreateRequest.\\n     * @param request The WalletCreateRequest struct containing the owner address, device address, and issuedAt block number.\\n     */\\n    function stringToSign(\\n        TokenRequest memory request\\n    ) internal view returns (string memory) {\\n        return string(abi.encodePacked(\\n            STATEMENT,\\n            \\\"\\\\n\\\\nMe: \\\",\\n            Strings.toHexString(request.owner),\\n            \\\"\\\\nDevice: \\\",\\n            Strings.toHexString(request.device),\\n            \\\"\\\\nIssued at: \\\",\\n            Strings.toString(request.issuedAt)\\n        ));\\n    }\\n\\n    function hashForToken(\\n        TokenRequest calldata request\\n    ) internal view returns (bytes32) {\\n        return ECDSA.toEthSignedMessageHash(bytes(stringToSign(request)));\\n    }\\n}\",\"keccak256\":\"0x46bcf484ada1e1d321fd73afe7060e7e0b3930ba844bc32599fe88b7860715ce\",\"license\":\"MIT\"},\"contracts/WalletDeployer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.19;\\n\\nimport \\\"./TokenAuthenticated.sol\\\";\\n\\n// import \\\"hardhat/console.sol\\\";\\n\\ninterface IProxyFactory {\\n    function createProxyWithNonce(\\n        address _mastercopy,\\n        bytes memory initializer,\\n        uint256 saltNonce\\n    ) external returns (address proxy);\\n}\\n\\n/**\\n * @title WalletDeployer\\n * @dev A contract that allows a user to create a Gnosis Safe wallet by signing an English message.\\n *      It sets up a a safe by calling the SafeStetup.sol contract which adds the correct modules and the TokenRequest\\n *      device and owner as owners to the safe. \\n */\\ncontract WalletDeployer is TokenAuthenticated {\\n    string public CHAIN_ID;\\n\\n    address private immutable _gnosisSafeContract;\\n    address private immutable _gnosisSafeProxyFactory;\\n    address private immutable _defaultFallackhandler;\\n\\n    address private immutable _setupHandler;\\n\\n    bytes4 private constant SETUP_DATA = bytes4(keccak256(\\\"setup()\\\"));\\n\\n    // a mapping of owner to safe address\\n    mapping(address => address) public ownerToSafe;\\n    mapping(address => address) public safeToOwner;\\n\\n    constructor(\\n        address gnosisSafeContract,\\n        address gnosisSafeProxyFactory,\\n        address defaultFallbackHandler,\\n        address setupHandler\\n    )\\n        TokenAuthenticated(\\n            \\\"I authorize this device to send transactions on my behalf.\\\"\\n        )\\n    {\\n        CHAIN_ID = Strings.toString(block.chainid);\\n        _gnosisSafeContract = gnosisSafeContract;\\n        _gnosisSafeProxyFactory = gnosisSafeProxyFactory;\\n        _defaultFallackhandler = defaultFallbackHandler;\\n        _setupHandler = setupHandler;\\n    }\\n\\n    /**\\n     * @dev Creates a Gnosis Safe wallet using the provided WalletCreateRequest and signature.\\n     * @param request The WalletCreateRequest struct containing the owner address, first device address, and issuedAt block number.\\n     * @param signature The signature signed by the owner to verify ownership.\\n     */\\n    function createSafe(\\n        TokenRequest calldata request,\\n        bytes calldata signature\\n    ) public {\\n        require(\\n            ownerToSafe[request.owner] == address(0),\\n            \\\"Safe already exists for owner\\\"\\n        );\\n        require(authenticate(request, signature));\\n\\n        // not sure exactly why, but it's important that this array is a memory address[] so that the initializer is encoded properly\\n        address[] memory owners;\\n        if (request.device == address(0)) {\\n            owners = new address[](1);\\n            owners[0] = request.owner;\\n        } else {\\n            owners = new address[](2);\\n            owners[0] = request.owner;\\n            owners[1] = request.device;\\n        }\\n\\n        bytes memory initializer = abi.encodeWithSignature(\\n            \\\"setup(address[],uint256,address,bytes,address,address,uint256,address)\\\",\\n            owners, // set the owner and first device addresses\\n            uint256(1), // set the number of required confirmations (threshhold) to 1\\n            _setupHandler, // setupModules address\\n            abi.encodeWithSignature(\\\"setup()\\\"), // setupModules data\\n            _defaultFallackhandler, // set the default fallback handler\\n            address(0), // set the payment token address\\n            address(0), // set the payment token address\\n            uint256(0), // set the payment amount to 0\\n            address(0) // set the payment fee receiver address\\n        );\\n\\n        address proxyAddr = IProxyFactory(_gnosisSafeProxyFactory)\\n            .createProxyWithNonce(_gnosisSafeContract, initializer, block.chainid);\\n\\n        ownerToSafe[request.owner] = proxyAddr;\\n        safeToOwner[proxyAddr] = request.owner;\\n    }\\n}\\n\",\"keccak256\":\"0x4064737e19684118ed91ade2911e1c11a102e100f671f89c9124b71600511f6f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1628,"contract":"contracts/WalletDeployer.sol:WalletDeployer","label":"STATEMENT","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1631,"contract":"contracts/WalletDeployer.sol:WalletDeployer","label":"lengthOfToken","offset":0,"slot":"1","type":"t_uint256"},{"astId":1820,"contract":"contracts/WalletDeployer.sol:WalletDeployer","label":"CHAIN_ID","offset":0,"slot":"2","type":"t_string_storage"},{"astId":1840,"contract":"contracts/WalletDeployer.sol:WalletDeployer","label":"ownerToSafe","offset":0,"slot":"3","type":"t_mapping(t_address,t_address)"},{"astId":1844,"contract":"contracts/WalletDeployer.sol:WalletDeployer","label":"safeToOwner","offset":0,"slot":"4","type":"t_mapping(t_address,t_address)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IGnosisSafe.sol":{"Enum":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220d79dd8a96ad7625de0afa1a1d2de56f96cd866c5be0272acdd31426bcee176d564736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 SWAP14 0xD8 0xA9 PUSH11 0xD7625DE0AFA1A1D2DE56F9 PUSH13 0xD866C5BE0272ACDD31426BCEE1 PUSH23 0xD564736F6C634300081300330000000000000000000000 ","sourceMap":"26:79:8:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220d79dd8a96ad7625de0afa1a1d2de56f96cd866c5be0272acdd31426bcee176d564736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 SWAP14 0xD8 0xA9 PUSH11 0xD7625DE0AFA1A1D2DE56F9 PUSH13 0xD866C5BE0272ACDD31426BCEE1 PUSH23 0xD564736F6C634300081300330000000000000000000000 ","sourceMap":"26:79:8:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IGnosisSafe.sol\":\"Enum\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IGnosisSafe.sol\":{\"content\":\"pragma solidity ^0.8.19;\\n\\ncontract Enum {\\n    enum Operation {\\n        Call,\\n        DelegateCall\\n    }\\n}\\n\\ninterface GnosisSafe {\\n    /// @dev Allows a Module to execute a Safe transaction without any further confirmations.\\n    /// @param to Destination address of module transaction.\\n    /// @param value Ether value of module transaction.\\n    /// @param data Data payload of module transaction.\\n    /// @param operation Operation type of module transaction.\\n    function execTransactionFromModule(\\n        address to,\\n        uint256 value,\\n        bytes calldata data,\\n        Enum.Operation operation\\n    ) external returns (bool success);\\n\\n    function getThreshold() external view returns (uint256);\\n\\n    function getOwners() external view returns (address[] memory);\\n\\n    function isOwner(address owner) external view returns (bool);\\n\\n    function enableModule(address module) external;\\n}\\n\",\"keccak256\":\"0x24f2aae9d94b5a3f8e69fe4628bb053a35c4d9ad3343469d2d2bd66d13c67038\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"GnosisSafe":{"abi":[{"inputs":[{"internalType":"address","name":"module","type":"address"}],"name":"enableModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"}],"name":"execTransactionFromModule","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getOwners","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"execTransactionFromModule(address,uint256,bytes,uint8)":{"details":"Allows a Module to execute a Safe transaction without any further confirmations.","params":{"data":"Data payload of module transaction.","operation":"Operation type of module transaction.","to":"Destination address of module transaction.","value":"Ether value of module transaction."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"enableModule(address)":"610b5925","execTransactionFromModule(address,uint256,bytes,uint8)":"468721a7","getOwners()":"a0e67e2b","getThreshold()":"e75235b8","isOwner(address)":"2f54bf6e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"enableModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execTransactionFromModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execTransactionFromModule(address,uint256,bytes,uint8)\":{\"details\":\"Allows a Module to execute a Safe transaction without any further confirmations.\",\"params\":{\"data\":\"Data payload of module transaction.\",\"operation\":\"Operation type of module transaction.\",\"to\":\"Destination address of module transaction.\",\"value\":\"Ether value of module transaction.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IGnosisSafe.sol\":\"GnosisSafe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IGnosisSafe.sol\":{\"content\":\"pragma solidity ^0.8.19;\\n\\ncontract Enum {\\n    enum Operation {\\n        Call,\\n        DelegateCall\\n    }\\n}\\n\\ninterface GnosisSafe {\\n    /// @dev Allows a Module to execute a Safe transaction without any further confirmations.\\n    /// @param to Destination address of module transaction.\\n    /// @param value Ether value of module transaction.\\n    /// @param data Data payload of module transaction.\\n    /// @param operation Operation type of module transaction.\\n    function execTransactionFromModule(\\n        address to,\\n        uint256 value,\\n        bytes calldata data,\\n        Enum.Operation operation\\n    ) external returns (bool success);\\n\\n    function getThreshold() external view returns (uint256);\\n\\n    function getOwners() external view returns (address[] memory);\\n\\n    function isOwner(address owner) external view returns (bool);\\n\\n    function enableModule(address module) external;\\n}\\n\",\"keccak256\":\"0x24f2aae9d94b5a3f8e69fe4628bb053a35c4d9ad3343469d2d2bd66d13c67038\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/testOnly/TestContract.sol":{"TestContract":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string","name":"message","type":"string"}],"name":"EchoEvent","type":"event"},{"inputs":[{"internalType":"string","name":"message","type":"string"},{"internalType":"bool","name":"revertMessage","type":"bool"}],"name":"echo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"somethingToRead","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"array_dataslot_t_string_storage":{"entryPoint":253,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":95,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":574,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":389,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":535,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":409,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":729,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":274,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":200,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":699,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":399,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":667,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":153,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":106,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":449,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":290,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":654,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":507,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":303,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":459,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":502,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5231:10","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:10","statements":[{"nodeType":"YulAssignment","src":"77:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:10"},"nodeType":"YulFunctionCall","src":"87:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:10"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:10","type":""}],"src":"7:99:10"},{"body":{"nodeType":"YulBlock","src":"140:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:10"},"nodeType":"YulFunctionCall","src":"150:88:10"},"nodeType":"YulExpressionStatement","src":"150:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:10"},"nodeType":"YulFunctionCall","src":"247:15:10"},"nodeType":"YulExpressionStatement","src":"247:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:10"},"nodeType":"YulFunctionCall","src":"271:15:10"},"nodeType":"YulExpressionStatement","src":"271:15:10"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:10"},{"body":{"nodeType":"YulBlock","src":"326:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:10"},"nodeType":"YulFunctionCall","src":"336:88:10"},"nodeType":"YulExpressionStatement","src":"336:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:10"},"nodeType":"YulFunctionCall","src":"433:15:10"},"nodeType":"YulExpressionStatement","src":"433:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:10"},"nodeType":"YulFunctionCall","src":"457:15:10"},"nodeType":"YulExpressionStatement","src":"457:15:10"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:10"},{"body":{"nodeType":"YulBlock","src":"535:269:10","statements":[{"nodeType":"YulAssignment","src":"545:22:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:10","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:10"},"nodeType":"YulFunctionCall","src":"555:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:10","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:10"},"nodeType":"YulFunctionCall","src":"602:12:10"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:10","statements":[{"nodeType":"YulAssignment","src":"667:27:10","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:10"},"nodeType":"YulFunctionCall","src":"677:17:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:10"},"nodeType":"YulFunctionCall","src":"626:26:10"},"nodeType":"YulIf","src":"623:81:10"},{"body":{"nodeType":"YulBlock","src":"756:42:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:10"},"nodeType":"YulFunctionCall","src":"770:18:10"},"nodeType":"YulExpressionStatement","src":"770:18:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:10"},"nodeType":"YulFunctionCall","src":"740:14:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:10"},"nodeType":"YulFunctionCall","src":"717:38:10"},"nodeType":"YulIf","src":"714:84:10"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:10","type":""}],"src":"484:320:10"},{"body":{"nodeType":"YulBlock","src":"864:87:10","statements":[{"nodeType":"YulAssignment","src":"874:11:10","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:10"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:10","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:10"},"nodeType":"YulFunctionCall","src":"895:14:10"},"nodeType":"YulExpressionStatement","src":"895:14:10"},{"nodeType":"YulAssignment","src":"918:26:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:10"},"nodeType":"YulFunctionCall","src":"926:18:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:10"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:10","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:10","type":""}],"src":"810:141:10"},{"body":{"nodeType":"YulBlock","src":"1001:49:10","statements":[{"nodeType":"YulAssignment","src":"1011:33:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:10"},"nodeType":"YulFunctionCall","src":"1025:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:10","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:10"},"nodeType":"YulFunctionCall","src":"1021:23:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:10"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:10","type":""}],"src":"957:93:10"},{"body":{"nodeType":"YulBlock","src":"1109:54:10","statements":[{"nodeType":"YulAssignment","src":"1119:37:10","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:10"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:10"},"nodeType":"YulFunctionCall","src":"1140:16:10"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:10"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:10","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:10","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:10","type":""}],"src":"1056:107:10"},{"body":{"nodeType":"YulBlock","src":"1245:317:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:10","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:10","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:10"},"nodeType":"YulFunctionCall","src":"1272:18:10"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:10","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:10"},"nodeType":"YulFunctionCall","src":"1311:97:10"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:10","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:10","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:10"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:10"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:10"},"nodeType":"YulFunctionCall","src":"1429:39:10"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:10"}]},{"nodeType":"YulAssignment","src":"1477:30:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:10"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:10"},"nodeType":"YulFunctionCall","src":"1497:9:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:10"},"nodeType":"YulFunctionCall","src":"1486:21:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:10"}]},{"nodeType":"YulAssignment","src":"1516:40:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:10"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:10"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:10"},"nodeType":"YulFunctionCall","src":"1536:19:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:10"},"nodeType":"YulFunctionCall","src":"1526:30:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:10"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:10","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:10","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:10","type":""}],"src":"1169:393:10"},{"body":{"nodeType":"YulBlock","src":"1613:32:10","statements":[{"nodeType":"YulAssignment","src":"1623:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:10"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:10","type":""}],"src":"1568:77:10"},{"body":{"nodeType":"YulBlock","src":"1683:28:10","statements":[{"nodeType":"YulAssignment","src":"1693:12:10","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:10"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:10","type":""}],"src":"1651:60:10"},{"body":{"nodeType":"YulBlock","src":"1777:82:10","statements":[{"nodeType":"YulAssignment","src":"1787:66:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:10"},"nodeType":"YulFunctionCall","src":"1827:24:10"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:10"},"nodeType":"YulFunctionCall","src":"1818:34:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:10"},"nodeType":"YulFunctionCall","src":"1800:53:10"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:10"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:10","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:10","type":""}],"src":"1717:142:10"},{"body":{"nodeType":"YulBlock","src":"1912:28:10","statements":[{"nodeType":"YulAssignment","src":"1922:12:10","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:10"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:10","type":""}],"src":"1865:75:10"},{"body":{"nodeType":"YulBlock","src":"2022:193:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:10","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:10"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:10"},"nodeType":"YulFunctionCall","src":"2056:39:10"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:10"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:10"},"nodeType":"YulFunctionCall","src":"2145:11:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:10"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:10"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:10"},"nodeType":"YulFunctionCall","src":"2166:41:10"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:10"},"nodeType":"YulFunctionCall","src":"2117:91:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:10"},"nodeType":"YulFunctionCall","src":"2104:105:10"},"nodeType":"YulExpressionStatement","src":"2104:105:10"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:10","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:10","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:10","type":""}],"src":"1946:269:10"},{"body":{"nodeType":"YulBlock","src":"2270:24:10","statements":[{"nodeType":"YulAssignment","src":"2280:8:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:10","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:10"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:10","type":""}],"src":"2221:73:10"},{"body":{"nodeType":"YulBlock","src":"2353:136:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:10","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:10"},"nodeType":"YulFunctionCall","src":"2377:32:10"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:10"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:10"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:10"},"nodeType":"YulFunctionCall","src":"2418:65:10"},"nodeType":"YulExpressionStatement","src":"2418:65:10"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:10","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:10","type":""}],"src":"2300:189:10"},{"body":{"nodeType":"YulBlock","src":"2545:136:10","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:10","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:10","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:10"},"nodeType":"YulFunctionCall","src":"2626:39:10"},"nodeType":"YulExpressionStatement","src":"2626:39:10"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:10"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:10"},"nodeType":"YulFunctionCall","src":"2562:14:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:10","statements":[{"nodeType":"YulAssignment","src":"2579:22:10","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:10"},"nodeType":"YulFunctionCall","src":"2588:13:10"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:10"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:10","statements":[]},"src":"2555:120:10"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:10","type":""}],"src":"2495:186:10"},{"body":{"nodeType":"YulBlock","src":"2766:464:10","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:10","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:10"},"nodeType":"YulFunctionCall","src":"2822:38:10"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:10","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:10"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:10"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:10"},"nodeType":"YulFunctionCall","src":"2906:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:10"},"nodeType":"YulFunctionCall","src":"2892:44:10"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:10","statements":[{"nodeType":"YulAssignment","src":"3095:23:10","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:10"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:10"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:10"},"nodeType":"YulFunctionCall","src":"3074:18:10"},"nodeType":"YulIf","src":"3071:49:10"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:10"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:10"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:10"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:10"},"nodeType":"YulFunctionCall","src":"3189:22:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:10"},"nodeType":"YulFunctionCall","src":"3175:37:10"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:10"},"nodeType":"YulFunctionCall","src":"3133:80:10"},"nodeType":"YulExpressionStatement","src":"3133:80:10"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:10"},"nodeType":"YulFunctionCall","src":"2780:11:10"},"nodeType":"YulIf","src":"2777:446:10"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:10","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:10","type":""}],"src":"2687:543:10"},{"body":{"nodeType":"YulBlock","src":"3299:54:10","statements":[{"nodeType":"YulAssignment","src":"3309:37:10","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:10"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:10"},"nodeType":"YulFunctionCall","src":"3330:16:10"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:10"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:10","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:10","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:10","type":""}],"src":"3236:117:10"},{"body":{"nodeType":"YulBlock","src":"3410:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:10","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:10"},"nodeType":"YulFunctionCall","src":"3465:13:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:10"},"nodeType":"YulFunctionCall","src":"3480:6:10"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:10"},"nodeType":"YulFunctionCall","src":"3436:51:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:10"},"nodeType":"YulFunctionCall","src":"3432:56:10"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:10","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:10"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:10"},"nodeType":"YulFunctionCall","src":"3507:15:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:10"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:10","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:10","type":""}],"src":"3359:169:10"},{"body":{"nodeType":"YulBlock","src":"3614:214:10","statements":[{"nodeType":"YulAssignment","src":"3747:37:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:10"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:10"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:10"},"nodeType":"YulFunctionCall","src":"3755:29:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:10"}]},{"nodeType":"YulAssignment","src":"3793:29:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:10","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:10"},"nodeType":"YulFunctionCall","src":"3810:11:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:10"},"nodeType":"YulFunctionCall","src":"3801:21:10"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:10"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:10","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:10","type":""}],"src":"3533:295:10"},{"body":{"nodeType":"YulBlock","src":"3925:1303:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:10","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:10"},"nodeType":"YulFunctionCall","src":"3950:37:10"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:10"},"nodeType":"YulFunctionCall","src":"4074:18:10"},"nodeType":"YulExpressionStatement","src":"4074:18:10"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:10"},"nodeType":"YulFunctionCall","src":"4041:30:10"},"nodeType":"YulIf","src":"4038:56:10"},{"nodeType":"YulVariableDeclaration","src":"4104:52:10","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:10"},"nodeType":"YulFunctionCall","src":"4144:11:10"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:10"},"nodeType":"YulFunctionCall","src":"4118:38:10"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:10"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:10"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:10"},"nodeType":"YulFunctionCall","src":"4203:67:10"},"nodeType":"YulExpressionStatement","src":"4203:67:10"},{"nodeType":"YulVariableDeclaration","src":"4280:18:10","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:10","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:10","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:10","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:10","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:10"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:10","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:10","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:10"},"nodeType":"YulFunctionCall","src":"4413:9:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:10"},"nodeType":"YulFunctionCall","src":"4401:22:10"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:10","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:10"},"nodeType":"YulFunctionCall","src":"4451:37:10"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:10","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:10"},"nodeType":"YulFunctionCall","src":"4608:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:10"},"nodeType":"YulFunctionCall","src":"4602:26:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:10"},"nodeType":"YulFunctionCall","src":"4587:42:10"},"nodeType":"YulExpressionStatement","src":"4587:42:10"},{"nodeType":"YulAssignment","src":"4646:24:10","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:10"},"nodeType":"YulFunctionCall","src":"4656:14:10"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:10"}]},{"nodeType":"YulAssignment","src":"4687:31:10","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:10"},"nodeType":"YulFunctionCall","src":"4700:18:10"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:10"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:10"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:10"},"nodeType":"YulFunctionCall","src":"4532:14:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:10","statements":[{"nodeType":"YulAssignment","src":"4549:17:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:10"},"nodeType":"YulFunctionCall","src":"4554:12:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:10","statements":[]},"src":"4524:208:10"},{"body":{"nodeType":"YulBlock","src":"4768:156:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:10","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:10"},"nodeType":"YulFunctionCall","src":"4809:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:10"},"nodeType":"YulFunctionCall","src":"4803:26:10"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:10","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:10"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:10"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:10","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:10"},"nodeType":"YulFunctionCall","src":"4891:17:10"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:10"},"nodeType":"YulFunctionCall","src":"4861:48:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:10"},"nodeType":"YulFunctionCall","src":"4846:64:10"},"nodeType":"YulExpressionStatement","src":"4846:64:10"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:10"},"nodeType":"YulFunctionCall","src":"4748:19:10"},"nodeType":"YulIf","src":"4745:179:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:10"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:10","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:10"},"nodeType":"YulFunctionCall","src":"4954:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:10"},"nodeType":"YulFunctionCall","src":"4950:22:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:10"},"nodeType":"YulFunctionCall","src":"4937:36:10"},"nodeType":"YulExpressionStatement","src":"4937:36:10"}]},"nodeType":"YulCase","src":"4365:618:10","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:10","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:10","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:10","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:10","statements":[{"nodeType":"YulAssignment","src":"5069:35:10","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:10"},"nodeType":"YulFunctionCall","src":"5084:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:10"},"nodeType":"YulFunctionCall","src":"5078:26:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:10"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:10"},"nodeType":"YulIf","src":"5041:77:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:10"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:10"},"nodeType":"YulFunctionCall","src":"5144:67:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:10"},"nodeType":"YulFunctionCall","src":"5131:81:10"},"nodeType":"YulExpressionStatement","src":"5131:81:10"}]},"nodeType":"YulCase","src":"4992:230:10","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:10"},"nodeType":"YulFunctionCall","src":"4342:14:10"},"nodeType":"YulSwitch","src":"4335:887:10"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:10","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:10","type":""}],"src":"3833:1395:10"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526040518060400160405280600a81526020017f68656c6c6f576f726c6400000000000000000000000000000000000000000000815250600090816200004a9190620002d9565b503480156200005857600080fd5b50620003c0565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620000e157607f821691505b602082108103620000f757620000f662000099565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001617fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000122565b6200016d868362000122565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620001ba620001b4620001ae8462000185565b6200018f565b62000185565b9050919050565b6000819050919050565b620001d68362000199565b620001ee620001e582620001c1565b8484546200012f565b825550505050565b600090565b62000205620001f6565b62000212818484620001cb565b505050565b5b818110156200023a576200022e600082620001fb565b60018101905062000218565b5050565b601f82111562000289576200025381620000fd565b6200025e8462000112565b810160208510156200026e578190505b620002866200027d8562000112565b83018262000217565b50505b505050565b600082821c905092915050565b6000620002ae600019846008026200028e565b1980831691505092915050565b6000620002c983836200029b565b9150826002028217905092915050565b620002e4826200005f565b67ffffffffffffffff8111156200030057620002ff6200006a565b5b6200030c8254620000c8565b620003198282856200023e565b600060209050601f8311600181146200035157600084156200033c578287015190505b620003488582620002bb565b865550620003b8565b601f1984166200036186620000fd565b60005b828110156200038b5784890151825560018201915060208501945060208101905062000364565b86831015620003ab5784890151620003a7601f8916826200029b565b8355505b6001600288020188555050505b505050505050565b6104bd80620003d06000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636e0187001461003b5780638d2f3ef514610059575b600080fd5b610043610075565b6040516100509190610228565b60405180910390f35b610073600480360381019061006e91906103cb565b610103565b005b6000805461008290610456565b80601f01602080910402602001604051908101604052809291908181526020018280546100ae90610456565b80156100fb5780601f106100d0576101008083540402835291602001916100fb565b820191906000526020600020905b8154815290600101906020018083116100de57829003601f168201915b505050505081565b3373ffffffffffffffffffffffffffffffffffffffff167ffa597f1c4433c480d1ab0fd6340c62ceb83fe757f4ae45f844d898474af1bfa5836040516101499190610228565b60405180910390a2801561019457816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018b9190610228565b60405180910390fd5b5050565b600081519050919050565b600082825260208201905092915050565b60005b838110156101d25780820151818401526020810190506101b7565b60008484015250505050565b6000601f19601f8301169050919050565b60006101fa82610198565b61020481856101a3565b93506102148185602086016101b4565b61021d816101de565b840191505092915050565b6000602082019050818103600083015261024281846101ef565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102a0826101de565b810181811067ffffffffffffffff821117156102bf576102be610268565b5b80604052505050565b60006102d261024a565b90506102de8282610297565b919050565b600067ffffffffffffffff8211156102fe576102fd610268565b5b610307826101de565b9050602081019050919050565b82818337600083830152505050565b6000610336610331846102e3565b6102c8565b90508281526020810184848401111561035257610351610263565b5b61035d848285610314565b509392505050565b600082601f83011261037a5761037961025e565b5b813561038a848260208601610323565b91505092915050565b60008115159050919050565b6103a881610393565b81146103b357600080fd5b50565b6000813590506103c58161039f565b92915050565b600080604083850312156103e2576103e1610254565b5b600083013567ffffffffffffffff811115610400576103ff610259565b5b61040c85828601610365565b925050602061041d858286016103b6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061046e57607f821691505b60208210810361048157610480610427565b5b5091905056fea2646970667358221220635848576a0b6cbff79b61e9ccc7db1452a6980f880ce2ae8bac59f9ae15771d64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x68656C6C6F576F726C6400000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x0 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x2D9 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3C0 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xE1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xF7 JUMPI PUSH3 0xF6 PUSH3 0x99 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x161 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x122 JUMP JUMPDEST PUSH3 0x16D DUP7 DUP4 PUSH3 0x122 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1BA PUSH3 0x1B4 PUSH3 0x1AE DUP5 PUSH3 0x185 JUMP JUMPDEST PUSH3 0x18F JUMP JUMPDEST PUSH3 0x185 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1D6 DUP4 PUSH3 0x199 JUMP JUMPDEST PUSH3 0x1EE PUSH3 0x1E5 DUP3 PUSH3 0x1C1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x12F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x205 PUSH3 0x1F6 JUMP JUMPDEST PUSH3 0x212 DUP2 DUP5 DUP5 PUSH3 0x1CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x23A JUMPI PUSH3 0x22E PUSH1 0x0 DUP3 PUSH3 0x1FB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x218 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x289 JUMPI PUSH3 0x253 DUP2 PUSH3 0xFD JUMP JUMPDEST PUSH3 0x25E DUP5 PUSH3 0x112 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x26E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x286 PUSH3 0x27D DUP6 PUSH3 0x112 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x217 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2AE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x28E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C9 DUP4 DUP4 PUSH3 0x29B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2E4 DUP3 PUSH3 0x5F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x300 JUMPI PUSH3 0x2FF PUSH3 0x6A JUMP JUMPDEST JUMPDEST PUSH3 0x30C DUP3 SLOAD PUSH3 0xC8 JUMP JUMPDEST PUSH3 0x319 DUP3 DUP3 DUP6 PUSH3 0x23E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x351 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x33C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x348 DUP6 DUP3 PUSH3 0x2BB JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x3B8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x361 DUP7 PUSH3 0xFD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x38B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x364 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x3AB JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x3A7 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x29B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4BD DUP1 PUSH3 0x3D0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E018700 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x8D2F3EF5 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x3CB JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x82 SWAP1 PUSH2 0x456 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAE SWAP1 PUSH2 0x456 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFA597F1C4433C480D1AB0FD6340C62CEB83FE757F4AE45F844D898474AF1BFA5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 ISZERO PUSH2 0x194 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA DUP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x204 DUP2 DUP6 PUSH2 0x1A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x214 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x21D DUP2 PUSH2 0x1DE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x242 DUP2 DUP5 PUSH2 0x1EF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2A0 DUP3 PUSH2 0x1DE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2BF JUMPI PUSH2 0x2BE PUSH2 0x268 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D2 PUSH2 0x24A JUMP JUMPDEST SWAP1 POP PUSH2 0x2DE DUP3 DUP3 PUSH2 0x297 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2FE JUMPI PUSH2 0x2FD PUSH2 0x268 JUMP JUMPDEST JUMPDEST PUSH2 0x307 DUP3 PUSH2 0x1DE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x336 PUSH2 0x331 DUP5 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x352 JUMPI PUSH2 0x351 PUSH2 0x263 JUMP JUMPDEST JUMPDEST PUSH2 0x35D DUP5 DUP3 DUP6 PUSH2 0x314 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x37A JUMPI PUSH2 0x379 PUSH2 0x25E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x38A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x323 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A8 DUP2 PUSH2 0x393 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C5 DUP2 PUSH2 0x39F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E2 JUMPI PUSH2 0x3E1 PUSH2 0x254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x400 JUMPI PUSH2 0x3FF PUSH2 0x259 JUMP JUMPDEST JUMPDEST PUSH2 0x40C DUP6 DUP3 DUP7 ADD PUSH2 0x365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x41D DUP6 DUP3 DUP7 ADD PUSH2 0x3B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x46E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x481 JUMPI PUSH2 0x480 PUSH2 0x427 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x5848576A SIGNEXTEND PUSH13 0xBFF79B61E9CCC7DB1452A6980F DUP9 0xC 0xE2 0xAE DUP12 0xAC MSIZE 0xF9 0xAE ISZERO PUSH24 0x1D64736F6C63430008130033000000000000000000000000 ","sourceMap":"58:330:9:-:0;;;149:44;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;58:330;;;;;;;;;;;;7:99:10;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;58:330:9:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@echo_2104":{"entryPoint":259,"id":2104,"parameterSlots":2,"returnSlots":0},"@somethingToRead_2083":{"entryPoint":117,"id":2083,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":803,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":950,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_bool":{"entryPoint":971,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":495,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":552,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":712,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":586,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":739,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":408,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":419,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_bool":{"entryPoint":915,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":788,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":436,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1110,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":663,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":1063,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":616,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":606,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":611,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":601,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":596,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":478,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_bool":{"entryPoint":927,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5307:10","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:10","statements":[{"nodeType":"YulAssignment","src":"77:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:10"},"nodeType":"YulFunctionCall","src":"87:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:10"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:10","type":""}],"src":"7:99:10"},{"body":{"nodeType":"YulBlock","src":"208:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:10"},"nodeType":"YulFunctionCall","src":"218:19:10"},"nodeType":"YulExpressionStatement","src":"218:19:10"},{"nodeType":"YulAssignment","src":"246:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:10"},"nodeType":"YulFunctionCall","src":"261:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:10","type":""}],"src":"112:169:10"},{"body":{"nodeType":"YulBlock","src":"349:184:10","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:10"},"nodeType":"YulFunctionCall","src":"449:11:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:10"},"nodeType":"YulFunctionCall","src":"468:11:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:10"},"nodeType":"YulFunctionCall","src":"462:18:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:10"},"nodeType":"YulFunctionCall","src":"442:39:10"},"nodeType":"YulExpressionStatement","src":"442:39:10"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:10"},"nodeType":"YulFunctionCall","src":"386:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:10","statements":[{"nodeType":"YulAssignment","src":"402:15:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:10"},"nodeType":"YulFunctionCall","src":"407:10:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:10","statements":[]},"src":"378:113:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:10"},"nodeType":"YulFunctionCall","src":"507:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:10"},"nodeType":"YulFunctionCall","src":"500:27:10"},"nodeType":"YulExpressionStatement","src":"500:27:10"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:10","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:10","type":""}],"src":"287:246:10"},{"body":{"nodeType":"YulBlock","src":"587:54:10","statements":[{"nodeType":"YulAssignment","src":"597:38:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:10"},"nodeType":"YulFunctionCall","src":"611:14:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:10","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:10"},"nodeType":"YulFunctionCall","src":"627:7:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:10"},"nodeType":"YulFunctionCall","src":"607:28:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:10"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:10","type":""}],"src":"539:102:10"},{"body":{"nodeType":"YulBlock","src":"739:285:10","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:10"},"nodeType":"YulFunctionCall","src":"763:39:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:10","type":""}]},{"nodeType":"YulAssignment","src":"811:78:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:10"},"nodeType":"YulFunctionCall","src":"818:71:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:10"},"nodeType":"YulFunctionCall","src":"933:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:10"},"nodeType":"YulFunctionCall","src":"898:65:10"},"nodeType":"YulExpressionStatement","src":"898:65:10"},{"nodeType":"YulAssignment","src":"972:46:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:10"},"nodeType":"YulFunctionCall","src":"988:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:10"},"nodeType":"YulFunctionCall","src":"979:39:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:10"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:10","type":""}],"src":"647:377:10"},{"body":{"nodeType":"YulBlock","src":"1148:195:10","statements":[{"nodeType":"YulAssignment","src":"1158:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:10"},"nodeType":"YulFunctionCall","src":"1166:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:10"},"nodeType":"YulFunctionCall","src":"1201:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:10"},"nodeType":"YulFunctionCall","src":"1220:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:10"},"nodeType":"YulFunctionCall","src":"1194:47:10"},"nodeType":"YulExpressionStatement","src":"1194:47:10"},{"nodeType":"YulAssignment","src":"1250:86:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:10"},"nodeType":"YulFunctionCall","src":"1258:78:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:10"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:10","type":""}],"src":"1030:313:10"},{"body":{"nodeType":"YulBlock","src":"1389:35:10","statements":[{"nodeType":"YulAssignment","src":"1399:19:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:10"},"nodeType":"YulFunctionCall","src":"1409:9:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:10"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:10","type":""}],"src":"1349:75:10"},{"body":{"nodeType":"YulBlock","src":"1519:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:10"},"nodeType":"YulFunctionCall","src":"1529:12:10"},"nodeType":"YulExpressionStatement","src":"1529:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:10"},{"body":{"nodeType":"YulBlock","src":"1642:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:10"},"nodeType":"YulFunctionCall","src":"1652:12:10"},"nodeType":"YulExpressionStatement","src":"1652:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:10"},{"body":{"nodeType":"YulBlock","src":"1765:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1782:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1785:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1775:6:10"},"nodeType":"YulFunctionCall","src":"1775:12:10"},"nodeType":"YulExpressionStatement","src":"1775:12:10"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1676:117:10"},{"body":{"nodeType":"YulBlock","src":"1888:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1905:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1908:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1898:6:10"},"nodeType":"YulFunctionCall","src":"1898:12:10"},"nodeType":"YulExpressionStatement","src":"1898:12:10"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"1799:117:10"},{"body":{"nodeType":"YulBlock","src":"1950:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1967:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1970:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1960:6:10"},"nodeType":"YulFunctionCall","src":"1960:88:10"},"nodeType":"YulExpressionStatement","src":"1960:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2064:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2067:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2057:6:10"},"nodeType":"YulFunctionCall","src":"2057:15:10"},"nodeType":"YulExpressionStatement","src":"2057:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2088:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2091:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2081:6:10"},"nodeType":"YulFunctionCall","src":"2081:15:10"},"nodeType":"YulExpressionStatement","src":"2081:15:10"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1922:180:10"},{"body":{"nodeType":"YulBlock","src":"2151:238:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2161:58:10","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2183:6:10"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2213:4:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2191:21:10"},"nodeType":"YulFunctionCall","src":"2191:27:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2179:3:10"},"nodeType":"YulFunctionCall","src":"2179:40:10"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2165:10:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"2330:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2332:16:10"},"nodeType":"YulFunctionCall","src":"2332:18:10"},"nodeType":"YulExpressionStatement","src":"2332:18:10"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2273:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"2285:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2270:2:10"},"nodeType":"YulFunctionCall","src":"2270:34:10"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2309:10:10"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2321:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2306:2:10"},"nodeType":"YulFunctionCall","src":"2306:22:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2267:2:10"},"nodeType":"YulFunctionCall","src":"2267:62:10"},"nodeType":"YulIf","src":"2264:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2368:2:10","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2372:10:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2361:6:10"},"nodeType":"YulFunctionCall","src":"2361:22:10"},"nodeType":"YulExpressionStatement","src":"2361:22:10"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2137:6:10","type":""},{"name":"size","nodeType":"YulTypedName","src":"2145:4:10","type":""}],"src":"2108:281:10"},{"body":{"nodeType":"YulBlock","src":"2436:88:10","statements":[{"nodeType":"YulAssignment","src":"2446:30:10","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2456:18:10"},"nodeType":"YulFunctionCall","src":"2456:20:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2446:6:10"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2505:6:10"},{"name":"size","nodeType":"YulIdentifier","src":"2513:4:10"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2485:19:10"},"nodeType":"YulFunctionCall","src":"2485:33:10"},"nodeType":"YulExpressionStatement","src":"2485:33:10"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2420:4:10","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2429:6:10","type":""}],"src":"2395:129:10"},{"body":{"nodeType":"YulBlock","src":"2597:241:10","statements":[{"body":{"nodeType":"YulBlock","src":"2702:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2704:16:10"},"nodeType":"YulFunctionCall","src":"2704:18:10"},"nodeType":"YulExpressionStatement","src":"2704:18:10"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2674:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2682:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2671:2:10"},"nodeType":"YulFunctionCall","src":"2671:30:10"},"nodeType":"YulIf","src":"2668:56:10"},{"nodeType":"YulAssignment","src":"2734:37:10","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2764:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2742:21:10"},"nodeType":"YulFunctionCall","src":"2742:29:10"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2734:4:10"}]},{"nodeType":"YulAssignment","src":"2808:23:10","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2820:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"2826:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2816:3:10"},"nodeType":"YulFunctionCall","src":"2816:15:10"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2808:4:10"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2581:6:10","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2592:4:10","type":""}],"src":"2530:308:10"},{"body":{"nodeType":"YulBlock","src":"2908:82:10","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2931:3:10"},{"name":"src","nodeType":"YulIdentifier","src":"2936:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"2941:6:10"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2918:12:10"},"nodeType":"YulFunctionCall","src":"2918:30:10"},"nodeType":"YulExpressionStatement","src":"2918:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2968:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"2973:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:10"},"nodeType":"YulFunctionCall","src":"2964:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"2982:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2957:6:10"},"nodeType":"YulFunctionCall","src":"2957:27:10"},"nodeType":"YulExpressionStatement","src":"2957:27:10"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2890:3:10","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2895:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"2900:6:10","type":""}],"src":"2844:146:10"},{"body":{"nodeType":"YulBlock","src":"3080:341:10","statements":[{"nodeType":"YulAssignment","src":"3090:75:10","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3157:6:10"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3115:41:10"},"nodeType":"YulFunctionCall","src":"3115:49:10"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3099:15:10"},"nodeType":"YulFunctionCall","src":"3099:66:10"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3090:5:10"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3181:5:10"},{"name":"length","nodeType":"YulIdentifier","src":"3188:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3174:6:10"},"nodeType":"YulFunctionCall","src":"3174:21:10"},"nodeType":"YulExpressionStatement","src":"3174:21:10"},{"nodeType":"YulVariableDeclaration","src":"3204:27:10","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3219:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"3226:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3215:3:10"},"nodeType":"YulFunctionCall","src":"3215:16:10"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3208:3:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"3269:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"3271:77:10"},"nodeType":"YulFunctionCall","src":"3271:79:10"},"nodeType":"YulExpressionStatement","src":"3271:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3250:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"3255:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3246:3:10"},"nodeType":"YulFunctionCall","src":"3246:16:10"},{"name":"end","nodeType":"YulIdentifier","src":"3264:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3243:2:10"},"nodeType":"YulFunctionCall","src":"3243:25:10"},"nodeType":"YulIf","src":"3240:112:10"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3398:3:10"},{"name":"dst","nodeType":"YulIdentifier","src":"3403:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"3408:6:10"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"3361:36:10"},"nodeType":"YulFunctionCall","src":"3361:54:10"},"nodeType":"YulExpressionStatement","src":"3361:54:10"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3053:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"3058:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"3066:3:10","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3074:5:10","type":""}],"src":"2996:425:10"},{"body":{"nodeType":"YulBlock","src":"3503:278:10","statements":[{"body":{"nodeType":"YulBlock","src":"3552:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3554:77:10"},"nodeType":"YulFunctionCall","src":"3554:79:10"},"nodeType":"YulExpressionStatement","src":"3554:79:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3531:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"3539:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:10"},"nodeType":"YulFunctionCall","src":"3527:17:10"},{"name":"end","nodeType":"YulIdentifier","src":"3546:3:10"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3523:3:10"},"nodeType":"YulFunctionCall","src":"3523:27:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3516:6:10"},"nodeType":"YulFunctionCall","src":"3516:35:10"},"nodeType":"YulIf","src":"3513:122:10"},{"nodeType":"YulVariableDeclaration","src":"3644:34:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3671:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3658:12:10"},"nodeType":"YulFunctionCall","src":"3658:20:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3648:6:10","type":""}]},{"nodeType":"YulAssignment","src":"3687:88:10","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3748:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"3756:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3744:3:10"},"nodeType":"YulFunctionCall","src":"3744:17:10"},{"name":"length","nodeType":"YulIdentifier","src":"3763:6:10"},{"name":"end","nodeType":"YulIdentifier","src":"3771:3:10"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3696:47:10"},"nodeType":"YulFunctionCall","src":"3696:79:10"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3687:5:10"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3481:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"3489:3:10","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3497:5:10","type":""}],"src":"3441:340:10"},{"body":{"nodeType":"YulBlock","src":"3829:48:10","statements":[{"nodeType":"YulAssignment","src":"3839:32:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3864:5:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3857:6:10"},"nodeType":"YulFunctionCall","src":"3857:13:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3850:6:10"},"nodeType":"YulFunctionCall","src":"3850:21:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3839:7:10"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3811:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3821:7:10","type":""}],"src":"3787:90:10"},{"body":{"nodeType":"YulBlock","src":"3923:76:10","statements":[{"body":{"nodeType":"YulBlock","src":"3977:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3986:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3989:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3979:6:10"},"nodeType":"YulFunctionCall","src":"3979:12:10"},"nodeType":"YulExpressionStatement","src":"3979:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3946:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3968:5:10"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3953:14:10"},"nodeType":"YulFunctionCall","src":"3953:21:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3943:2:10"},"nodeType":"YulFunctionCall","src":"3943:32:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3936:6:10"},"nodeType":"YulFunctionCall","src":"3936:40:10"},"nodeType":"YulIf","src":"3933:60:10"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3916:5:10","type":""}],"src":"3883:116:10"},{"body":{"nodeType":"YulBlock","src":"4054:84:10","statements":[{"nodeType":"YulAssignment","src":"4064:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4086:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4073:12:10"},"nodeType":"YulFunctionCall","src":"4073:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4064:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4126:5:10"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"4102:23:10"},"nodeType":"YulFunctionCall","src":"4102:30:10"},"nodeType":"YulExpressionStatement","src":"4102:30:10"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4032:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"4040:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4048:5:10","type":""}],"src":"4005:133:10"},{"body":{"nodeType":"YulBlock","src":"4234:558:10","statements":[{"body":{"nodeType":"YulBlock","src":"4280:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4282:77:10"},"nodeType":"YulFunctionCall","src":"4282:79:10"},"nodeType":"YulExpressionStatement","src":"4282:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4255:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"4264:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4251:3:10"},"nodeType":"YulFunctionCall","src":"4251:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"4276:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4247:3:10"},"nodeType":"YulFunctionCall","src":"4247:32:10"},"nodeType":"YulIf","src":"4244:119:10"},{"nodeType":"YulBlock","src":"4373:287:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4388:45:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4419:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4430:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4415:3:10"},"nodeType":"YulFunctionCall","src":"4415:17:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4402:12:10"},"nodeType":"YulFunctionCall","src":"4402:31:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4392:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"4480:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4482:77:10"},"nodeType":"YulFunctionCall","src":"4482:79:10"},"nodeType":"YulExpressionStatement","src":"4482:79:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4452:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4460:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4449:2:10"},"nodeType":"YulFunctionCall","src":"4449:30:10"},"nodeType":"YulIf","src":"4446:117:10"},{"nodeType":"YulAssignment","src":"4577:73:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4622:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"4633:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4618:3:10"},"nodeType":"YulFunctionCall","src":"4618:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4642:7:10"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4587:30:10"},"nodeType":"YulFunctionCall","src":"4587:63:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4577:6:10"}]}]},{"nodeType":"YulBlock","src":"4670:115:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4685:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"4699:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4689:6:10","type":""}]},{"nodeType":"YulAssignment","src":"4715:60:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4747:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"4758:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4743:3:10"},"nodeType":"YulFunctionCall","src":"4743:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4767:7:10"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"4725:17:10"},"nodeType":"YulFunctionCall","src":"4725:50:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4715:6:10"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4196:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4207:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4219:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4227:6:10","type":""}],"src":"4144:648:10"},{"body":{"nodeType":"YulBlock","src":"4826:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4843:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4846:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4836:6:10"},"nodeType":"YulFunctionCall","src":"4836:88:10"},"nodeType":"YulExpressionStatement","src":"4836:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4940:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4943:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4933:6:10"},"nodeType":"YulFunctionCall","src":"4933:15:10"},"nodeType":"YulExpressionStatement","src":"4933:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4964:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4967:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4957:6:10"},"nodeType":"YulFunctionCall","src":"4957:15:10"},"nodeType":"YulExpressionStatement","src":"4957:15:10"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"4798:180:10"},{"body":{"nodeType":"YulBlock","src":"5035:269:10","statements":[{"nodeType":"YulAssignment","src":"5045:22:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5059:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"5065:1:10","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5055:3:10"},"nodeType":"YulFunctionCall","src":"5055:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5045:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"5076:38:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5106:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"5112:1:10","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5102:3:10"},"nodeType":"YulFunctionCall","src":"5102:12:10"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5080:18:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"5153:51:10","statements":[{"nodeType":"YulAssignment","src":"5167:27:10","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5181:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"5189:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5177:3:10"},"nodeType":"YulFunctionCall","src":"5177:17:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5167:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5133:18:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5126:6:10"},"nodeType":"YulFunctionCall","src":"5126:26:10"},"nodeType":"YulIf","src":"5123:81:10"},{"body":{"nodeType":"YulBlock","src":"5256:42:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"5270:16:10"},"nodeType":"YulFunctionCall","src":"5270:18:10"},"nodeType":"YulExpressionStatement","src":"5270:18:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5220:18:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5243:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"5251:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5240:2:10"},"nodeType":"YulFunctionCall","src":"5240:14:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5217:2:10"},"nodeType":"YulFunctionCall","src":"5217:38:10"},"nodeType":"YulIf","src":"5214:84:10"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5019:4:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5028:6:10","type":""}],"src":"4984:320:10"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c80636e0187001461003b5780638d2f3ef514610059575b600080fd5b610043610075565b6040516100509190610228565b60405180910390f35b610073600480360381019061006e91906103cb565b610103565b005b6000805461008290610456565b80601f01602080910402602001604051908101604052809291908181526020018280546100ae90610456565b80156100fb5780601f106100d0576101008083540402835291602001916100fb565b820191906000526020600020905b8154815290600101906020018083116100de57829003601f168201915b505050505081565b3373ffffffffffffffffffffffffffffffffffffffff167ffa597f1c4433c480d1ab0fd6340c62ceb83fe757f4ae45f844d898474af1bfa5836040516101499190610228565b60405180910390a2801561019457816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018b9190610228565b60405180910390fd5b5050565b600081519050919050565b600082825260208201905092915050565b60005b838110156101d25780820151818401526020810190506101b7565b60008484015250505050565b6000601f19601f8301169050919050565b60006101fa82610198565b61020481856101a3565b93506102148185602086016101b4565b61021d816101de565b840191505092915050565b6000602082019050818103600083015261024281846101ef565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102a0826101de565b810181811067ffffffffffffffff821117156102bf576102be610268565b5b80604052505050565b60006102d261024a565b90506102de8282610297565b919050565b600067ffffffffffffffff8211156102fe576102fd610268565b5b610307826101de565b9050602081019050919050565b82818337600083830152505050565b6000610336610331846102e3565b6102c8565b90508281526020810184848401111561035257610351610263565b5b61035d848285610314565b509392505050565b600082601f83011261037a5761037961025e565b5b813561038a848260208601610323565b91505092915050565b60008115159050919050565b6103a881610393565b81146103b357600080fd5b50565b6000813590506103c58161039f565b92915050565b600080604083850312156103e2576103e1610254565b5b600083013567ffffffffffffffff811115610400576103ff610259565b5b61040c85828601610365565b925050602061041d858286016103b6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061046e57607f821691505b60208210810361048157610480610427565b5b5091905056fea2646970667358221220635848576a0b6cbff79b61e9ccc7db1452a6980f880ce2ae8bac59f9ae15771d64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E018700 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x8D2F3EF5 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x3CB JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x82 SWAP1 PUSH2 0x456 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAE SWAP1 PUSH2 0x456 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFA597F1C4433C480D1AB0FD6340C62CEB83FE757F4AE45F844D898474AF1BFA5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 ISZERO PUSH2 0x194 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA DUP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x204 DUP2 DUP6 PUSH2 0x1A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x214 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x21D DUP2 PUSH2 0x1DE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x242 DUP2 DUP5 PUSH2 0x1EF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2A0 DUP3 PUSH2 0x1DE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2BF JUMPI PUSH2 0x2BE PUSH2 0x268 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D2 PUSH2 0x24A JUMP JUMPDEST SWAP1 POP PUSH2 0x2DE DUP3 DUP3 PUSH2 0x297 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2FE JUMPI PUSH2 0x2FD PUSH2 0x268 JUMP JUMPDEST JUMPDEST PUSH2 0x307 DUP3 PUSH2 0x1DE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x336 PUSH2 0x331 DUP5 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x352 JUMPI PUSH2 0x351 PUSH2 0x263 JUMP JUMPDEST JUMPDEST PUSH2 0x35D DUP5 DUP3 DUP6 PUSH2 0x314 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x37A JUMPI PUSH2 0x379 PUSH2 0x25E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x38A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x323 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A8 DUP2 PUSH2 0x393 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C5 DUP2 PUSH2 0x39F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E2 JUMPI PUSH2 0x3E1 PUSH2 0x254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x400 JUMPI PUSH2 0x3FF PUSH2 0x259 JUMP JUMPDEST JUMPDEST PUSH2 0x40C DUP6 DUP3 DUP7 ADD PUSH2 0x365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x41D DUP6 DUP3 DUP7 ADD PUSH2 0x3B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x46E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x481 JUMPI PUSH2 0x480 PUSH2 0x427 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x5848576A SIGNEXTEND PUSH13 0xBFF79B61E9CCC7DB1452A6980F DUP9 0xC 0xE2 0xAE DUP12 0xAC MSIZE 0xF9 0xAE ISZERO PUSH24 0x1D64736F6C63430008130033000000000000000000000000 ","sourceMap":"58:330:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;149:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;200:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;149:44;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;200:186::-;291:10;281:30;;;303:7;281:30;;;;;;:::i;:::-;;;;;;;;325:13;321:59;;;361:7;354:15;;;;;;;;;;;:::i;:::-;;;;;;;;321:59;200:186;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:75::-;1382:6;1415:2;1409:9;1399:19;;1349:75;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:117;1785:1;1782;1775:12;1799:117;1908:1;1905;1898:12;1922:180;1970:77;1967:1;1960:88;2067:4;2064:1;2057:15;2091:4;2088:1;2081:15;2108:281;2191:27;2213:4;2191:27;:::i;:::-;2183:6;2179:40;2321:6;2309:10;2306:22;2285:18;2273:10;2270:34;2267:62;2264:88;;;2332:18;;:::i;:::-;2264:88;2372:10;2368:2;2361:22;2151:238;2108:281;;:::o;2395:129::-;2429:6;2456:20;;:::i;:::-;2446:30;;2485:33;2513:4;2505:6;2485:33;:::i;:::-;2395:129;;;:::o;2530:308::-;2592:4;2682:18;2674:6;2671:30;2668:56;;;2704:18;;:::i;:::-;2668:56;2742:29;2764:6;2742:29;:::i;:::-;2734:37;;2826:4;2820;2816:15;2808:23;;2530:308;;;:::o;2844:146::-;2941:6;2936:3;2931;2918:30;2982:1;2973:6;2968:3;2964:16;2957:27;2844:146;;;:::o;2996:425::-;3074:5;3099:66;3115:49;3157:6;3115:49;:::i;:::-;3099:66;:::i;:::-;3090:75;;3188:6;3181:5;3174:21;3226:4;3219:5;3215:16;3264:3;3255:6;3250:3;3246:16;3243:25;3240:112;;;3271:79;;:::i;:::-;3240:112;3361:54;3408:6;3403:3;3398;3361:54;:::i;:::-;3080:341;2996:425;;;;;:::o;3441:340::-;3497:5;3546:3;3539:4;3531:6;3527:17;3523:27;3513:122;;3554:79;;:::i;:::-;3513:122;3671:6;3658:20;3696:79;3771:3;3763:6;3756:4;3748:6;3744:17;3696:79;:::i;:::-;3687:88;;3503:278;3441:340;;;;:::o;3787:90::-;3821:7;3864:5;3857:13;3850:21;3839:32;;3787:90;;;:::o;3883:116::-;3953:21;3968:5;3953:21;:::i;:::-;3946:5;3943:32;3933:60;;3989:1;3986;3979:12;3933:60;3883:116;:::o;4005:133::-;4048:5;4086:6;4073:20;4064:29;;4102:30;4126:5;4102:30;:::i;:::-;4005:133;;;;:::o;4144:648::-;4219:6;4227;4276:2;4264:9;4255:7;4251:23;4247:32;4244:119;;;4282:79;;:::i;:::-;4244:119;4430:1;4419:9;4415:17;4402:31;4460:18;4452:6;4449:30;4446:117;;;4482:79;;:::i;:::-;4446:117;4587:63;4642:7;4633:6;4622:9;4618:22;4587:63;:::i;:::-;4577:73;;4373:287;4699:2;4725:50;4767:7;4758:6;4747:9;4743:22;4725:50;:::i;:::-;4715:60;;4670:115;4144:648;;;;;:::o;4798:180::-;4846:77;4843:1;4836:88;4943:4;4940:1;4933:15;4967:4;4964:1;4957:15;4984:320;5028:6;5065:1;5059:4;5055:12;5045:22;;5112:1;5106:4;5102:12;5133:18;5123:81;;5189:4;5181:6;5177:17;5167:27;;5123:81;5251:2;5243:6;5240:14;5220:18;5217:38;5214:84;;5270:18;;:::i;:::-;5214:84;5035:269;4984:320;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"242600","executionCost":"infinite","totalCost":"infinite"},"external":{"echo(string,bool)":"infinite","somethingToRead()":"infinite"}},"methodIdentifiers":{"echo(string,bool)":"8d2f3ef5","somethingToRead()":"6e018700"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"EchoEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"revertMessage\",\"type\":\"bool\"}],\"name\":\"echo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"somethingToRead\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/testOnly/TestContract.sol\":\"TestContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/testOnly/TestContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ncontract TestContract {\\n\\n    event EchoEvent(address indexed sender, string message);\\n\\n    string public somethingToRead = \\\"helloWorld\\\";\\n\\n    function echo(string memory message, bool revertMessage) external {\\n        emit EchoEvent(msg.sender, message);\\n        if (revertMessage) {\\n            revert(message);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x58918f65aa3d623209048a06921c4743fcd9b5eb7c7285adaa9c7ce59c8f9c29\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2083,"contract":"contracts/testOnly/TestContract.sol:TestContract","label":"somethingToRead","offset":0,"slot":"0","type":"t_string_storage"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}